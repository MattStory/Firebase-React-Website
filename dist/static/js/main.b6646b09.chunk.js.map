{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/profile/profile.js","store/actions/updateActions.js","components/financials/FundSummary.js","components/financials/FundList.js","components/financials/CreateFund.js","store/actions/fundActions.js","components/financials/Financials.js","components/auth/reset.js","components/Memos/memFunc.js","store/actions/memActions.js","components/Memos/memos.js","components/messaging/messageList.js","store/actions/msgActions.js","components/messaging/messages.js","components/transactions/exportTransactions.js","components/transactions/Transactions.js","store/actions/transactionActions.js","components/transactions/CreateEditTransaction.js","components/visualizations/chart.js","components/auth/google.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/updateReducer.js","store/reducers/fundReducer.js","store/reducers/memReducer.js","store/reducers/msgReducer.js","store/reducers/transactionReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","profile","firstName","onClick","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Dashboard","console","log","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handelSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","lastName","address","studentId","phone","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","currentUser","sendEmailVerification","doc","user","set","CreateProject","createProject","history","push","toString","authorId","userEmail","add","Date","Profile","updateProfile","userProfile","userId","update","alert","FundSummary","fund","fundType","nickname","balance","FundList","funds","CreateFund","lowBalanceLimit","largeTransactionLimit","spendingLimit","handleSelectChange","handleSubmit","createFund","required","name","placeholder","options","label","defaultValue","closePopup","owner","Financials","handleEdit","editFund","handleDel","delFund","fundSelected","handleEditSelectChange","showCreateFund","showEditFund","fundOptions","userFunds","forEach","f","v","toggleCreateFund","bind","length","largeTransacationLimit","reset","resetPassword","sendPasswordResetEmail","error","deleting","mem","delete","MemoArray","Memos","event","creatememo","undefined","memos","filter","memo","where","closing","docID","tickets","TicketArray","Messages","handleClose","closeThread","createMessage","Axios","post","supportTickets","msg","newMsg","docRef","get","docSnapshot","exists","userID","msgTime","subcollections","storeAs","exportTransactionsToCSV","headers","items","fileTitle","unshift","csv","objArray","array","JSON","parse","str","i","line","index","stringify","convertToCSV","exportedFilenmae","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","formatTransactions","transactions","result","k","Object","transactionDate","merchant","amount","exportJSON","dataStr","dataUri","encodeURIComponent","today","exportFileDefaultName","getFullYear","getMonth","getDate","linkElement","exportCSV","formattedTransactions","keys","columns","dataField","hidden","text","sort","sortFunc","a","b","order","editor","Type","SELECT","editorClasses","DATE","paginationOption","sizePerPage","hideSizePerPage","withFirstAndLast","hidePageListOnlyOnePage","defaultSorted","cellEdit","mode","blurToSave","Transactions","handleExport","exportOption","handleExportJSON","handleExportCSV","handleExportOptionChange","onTableChange","newState","transactionToUpdate","rowId","newValue","dateParts","split","updateTransaction","handleDeleteTransactions","rowsSelected","deleteTransactions","inDuration","outDuration","opacity","dismissible","startingTop","endingTop","materialize","Modal","init","deleteModal","exportModal","transactionID","isSelect","indexToRemove","indexOf","splice","keyField","pagination","paginationFactory","selectRow","bgColor","selectColumnStyle","backgroundColor","onSelect","row","rowIndex","handleSelectRow","cellEditFactory","noDataIndication","remote","data-target","ref","transactionUpdate","transaction","transactionCategory","CreateEditTransaction","createTransaction","handleCategoryChange","message","response","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","Chart","myMap","Map","chartDataPie","month","Array","byDay","byMonth","byWeek","currentDate","current_Month","current_year","parseInt","temp","dt","charAt","date_format","date","getDay","chartConfigsPie","width","height","dataFormat","dataSource","chart","caption","xAxisName","yAxisName","numberSuffix","exportEnabled","theme","chartConfigsLineD","subCaption","chartConfigsLineW","chartConfigsLineM","React","google","googleLogin","provider","GoogleAuthProvider","signInWithPopup","credential","accessToken","code","App","exact","path","component","ProjectDetails","Visualizations","Google","Boolean","window","location","hostname","initState","authReducer","action","projectReducer","updateReducer","fundReducer","InitState","mem_title","memReducer","msgReducer","transactionReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","messages","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6646b09.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\nconst SignedInLinks =(props) =>{\r\n    \r\n    return (\r\n        <ul className =\"right\">\r\n            <li><NavLink to='/messages'>Support</NavLink></li>\r\n            <li><NavLink to='/create'>New Post</NavLink></li>\r\n            <li><NavLink to='/financials'>Financials</NavLink></li>\r\n            <li><NavLink to='/transactions'>Transactions</NavLink></li>\r\n            <li><NavLink to='/visualizations'>Visualizations</NavLink> </li>\r\n            <li><NavLink to='/memos'>Memos</NavLink> </li>\r\n            <li><NavLink to='/profile' className ='btn btn -floating green lighten-1'>{props.profile.firstName}</NavLink></li>\r\n            <li><NavLink to = '/signin' onClick={props.signOut} >Log Out</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signOut:()=> dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn =(credentials) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut =()=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            firebase.auth().currentUser.sendEmailVerification();\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                email: newUser.email,\r\n                address: newUser.address,\r\n                phone: newUser.phone,\r\n                studentId: newUser.studentId\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type: 'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPassword =(email)=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n            // Email sent.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });    }\r\n}\r\n\r\nexport const googleLogin =(email)=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          }); }\r\n}\r\n\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nconst SignedOutLinks =() =>{\r\n    return (\r\n        <ul className =\"right\">\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar =(props) =>{\r\n    const {auth,profile}=props;\r\n    //console.log(auth);\r\n    const links =auth.uid? <SignedInLinks profile ={profile}/>: <SignedOutLinks/>\r\n    return (\r\n        <nav className =\"nav-wrapper grey darken-3\">\r\n            <div className =\"container\">\r\n                <Link to='/' className =\"brand-logo\">College Capital</Link>\r\n                {auth.isLoaded && links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\nconst Notifications =(props) =>{\r\n    return(\r\n        <div className=\"section\">\r\n            <div className =\"card z-depth-0\">\r\n                <div className =\"card-content\">\r\n                    <span className =\"card-title\">Notifications</span>\r\n                    <ul className ='notifications'>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project})=>{\r\n    return (\r\n        <div className =\"card z-depth-0 project-summary\">\r\n                <div className =\"card-content grey-text text-darken-3\">\r\n                    <span className =\"card-title\">{project.title}</span>\r\n    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className =\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) =>{\r\n    return(\r\n        <div className= \"project-list section\">\r\n            {projects && projects.map(project=>{\r\n                return (\r\n                    <Link to={'/project/'+project.id}key={project.id}>\r\n                    <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        console.log(this.props);\r\n        const {projects,auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return(\r\n            <div className= 'dashboard container'>\r\n                <div className ='row'>\r\n                    <div className =\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className =\"col s12 m5 offset-m1\">\r\n                        <Notifications/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    \r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport{connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails=(props) =>{\r\n    const {project,auth } =props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n    if(project){\r\n        return(\r\n        <div className =\"container section project-details\">\r\n            <div className =\"card z-depth-0\">\r\n                <div className =\"card-content\">\r\n                <span className =\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        )\r\n    }else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps =(state, ownProps) =>{\r\n    \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id]: null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n        email:'',\r\n        password: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    \r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type =\"password\" id=\"password\" onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/reset\" className=\"btn btn-primary\">Reset Password</Link>\r\n\t\t\t\t<Link to=\"/google\" className=\"btn btn-primary\">Sign In with Google</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        studentId: '',\r\n        phone: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    \r\n    render() {\r\n        const {auth,authError} =this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type =\"password\" id=\"password\" onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type =\"text\" id=\"firstName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type =\"text\" id=\"lastName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input type =\"tel\" id=\"phone\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input type =\"text\" id=\"address\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"studentId\">StudentId</label>\r\n                    <input type =\"text\" id=\"studentId\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Register</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signUp: (newUser)=> dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title:'',\r\n        content: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    \r\n    render() {\r\n        const {auth} =this.props;\r\n        if(auth.uid.toString() !== \"Rs5NBrhOlTSsKBurH9JnfpTpxUO2\") return <Redirect to= '/signin'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Create Post</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type =\"text\" id=\"title\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea  id=\"content\"  className=\"materialize-textarea\"onChange ={this.handleChange}></textarea>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( CreateProject)\r\n","export const createProject=(project) =>{\r\n    return(dispatch,getState,{getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore=getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        console.log(getState().firebase.auth.userEmail);\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n        \r\n    }\r\n};","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {updateProfile, getProfileData} from '../../store/actions/updateActions'\r\n\r\nclass Profile extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        phone: '',\r\n        studentId: '',\r\n        address: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.updateProfile(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n        \r\n    \r\n    render() {\r\n        const {auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return (\r\n            \r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Profile</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input  type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input type =\"tel\" id=\"phone\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type =\"text\" id=\"firstName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type =\"text\" id=\"lastName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"studentId\">Student Id</label>\r\n                    <input type =\"text\" id=\"studentId\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input type =\"text\" id=\"address\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Update</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        userProfile: state.firebase.userProfile,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        updateProfile: (userProfile)=> dispatch(updateProfile(userProfile))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile)\r\n","export const updateProfile =(userProfile)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n        const userId= getState().firebase.auth.uid;\r\n        firestore.collection('users').doc(userId).update({\r\n            firstName : userProfile.firstName,\r\n            lastName : userProfile.lastName,\r\n            email : userProfile.email,\r\n            phone : userProfile.phone,\r\n            address: userProfile.address,\r\n            studentId: userProfile.studentId\r\n\r\n        }).then(()=>{\r\n            dispatch({type: 'UPDATE_SUCCESS',userProfile})\r\n            alert(\"update success\");\r\n            \r\n        }).catch(err=>{\r\n            dispatch({type: 'UPDATE_ERROR',err})\r\n            alert(\"update failure\");\r\n        })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst FundSummary = ({fund}) => {\r\n    return (\r\n        <div className={\"card z-depth-0 fund-summary\"}>\r\n            <div className={\"card-content grey-text text-darken-3\"}>\r\n                <span className={\"card-title\"}>{fund.fundType + ': ' + fund.nickname}</span>\r\n                <p>Balance: ${fund.balance}</p>\r\n                <p className =\"grey-text\">{moment(fund.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundSummary","import React from \"react\";\r\nimport FundSummary from \"./FundSummary\";\r\n\r\nconst FundList = ({funds}) => {\r\n    console.log(funds);\r\n        return (\r\n            <div className={\"fund-list section\"}>\r\n                { funds && funds.map(fund => {\r\n                    return (\r\n                        <FundSummary fund={fund} key={fund.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FundList","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createFund} from \"../../store/actions/fundActions\";\r\nimport './CreateFund.css'\r\nimport Select from 'react-select';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateFund extends Component {\r\n    state = {\r\n        nickname: '',\r\n        balance: 0,\r\n        lowBalanceLimit: 0,\r\n        largeTransactionLimit: 0,\r\n        spendingLimit: 0,\r\n        fundType: 'PayPal'\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            fundType: e.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createFund(this.state);\r\n        alert(\"fund created\");\r\n        //this.props.history.push('/financials')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create a New Fund</h5>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"nickname\"}>Nickname</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'balance'} onChange={this.handleChange} required/>\r\n                        <label htmlFor={\"balance\"}>Balance</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'lowBalanceLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'largeTransactionLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"fundtype\"}\r\n                            name={\"fundtype\"}\r\n                            placeholder={\"Fund Type\"}\r\n                            options = {[\r\n                                { value: 'PayPal', label: 'PayPal'},\r\n                                { value: 'Dining Dollar', label: 'Dining Dollar'},\r\n                                { value: 'Boiler Express', label: 'Boiler Express'},\r\n                                { value: 'Financial Aid', label: 'Financial Aid'},\r\n                                { value: 'Bank', label: 'Bank'}\r\n                            ]}\r\n                            onChange={this.handleSelectChange}\r\n                            defaultValue={{ value: 'paypal', label: 'PayPal'}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <button className=\"btn green lighten-1\">Create</button>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <button className=\"btn white black-text lighten-1\" onClick={this.props.closePopup}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createFund: (fund) => dispatch(createFund(fund))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateFund)","export const createFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid\r\n        firestore.collection('funds').add({\r\n            ...fund,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const editFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        console.log(fund);\r\n        firestore.collection('funds').doc(fund.fundSelected).set({\r\n            nickname: fund.nickname ? fund.nickname : '',\r\n            balance: fund.balance ? fund.balance : 0,\r\n            lowBalanceLimit: fund.lowBalanceLimit ? fund.lowBalanceLimit : 0,\r\n            largeTransacationLimit: fund.largeTransactionLimit ? fund.largeTransactionLimit : 0,\r\n            spendingLimit: fund.spendingLimit ? fund.spendingLimit : 0,\r\n            fundType: fund.fundType ? fund.fundType : 'PayPal',\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const delFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        console.log(fund)\r\n        firestore.collection('funds').doc().set({\r\n            balance: 245762548\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        let docid = '4HCMIlNug3Z1dg67nVHc'\r\n        firestore.collection('funds').doc(docid).set({\r\n            balance: 245762548\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {signUp} from \"../../store/actions/authActions\";\r\nimport './Financials.css'\r\nimport FundList from './FundList'\r\nimport CreateFund from \"./CreateFund\";\r\nimport {editFund} from \"../../store/actions/fundActions\";\r\nimport Select from \"react-select\";\r\n\r\nclass Financials extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { showCreateFund: false,\r\n            showEditFund: false};\r\n    }\r\n\r\n    toggleCreateFund() {\r\n        this.setState({\r\n            showCreateFund: !this.state.showCreateFund\r\n        })\r\n    }\r\n\r\n    // handleSet = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.props.setFund()\r\n    // }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editFund(this.state)\r\n    }\r\n\r\n    handleDel = (e) => {\r\n        console.log(e)\r\n        e.preventDefault();\r\n        this.props.delFund(this.state)\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        console.log(e.value)\r\n        this.setState({\r\n            fundSelected: e.value\r\n        })\r\n    }\r\n\r\n    handleEditSelectChange = (e) => {\r\n        this.setState({\r\n            fundType: e.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>;\r\n        // console.log(this.props);\r\n        // console.log(this.state);\r\n        // console.log('render');\r\n        //f(funds) return <Redirect to= '/signin'/>;\r\n        const funds = this.props.funds;\r\n        console.log(funds)\r\n\r\n        let fundOptions = [];\r\n\r\n        let userFunds = []\r\n\r\n        if (this.props.funds != null){\r\n            \r\n\r\n            funds.forEach(f => {\r\n                if (f.uid === auth.uid){\r\n                    userFunds.push(f);\r\n                }\r\n                    })\r\n        }\r\n\r\n        fundOptions = userFunds.map(v => ({\r\n            label: v.fundType + ': ' + v.nickname,\r\n            value: v.id\r\n        }))\r\n\r\n        console.log(userFunds)\r\n\r\n        // console.log(funds);\r\n        return(\r\n            <div className={\"container mt-10\"}>\r\n                <div className =\"card z-depth-0\">\r\n                    {this.state.showCreateFund\r\n                        ?\r\n                        <CreateFund\r\n                            closePopup={this.toggleCreateFund.bind(this)}\r\n                        />\r\n                        :\r\n                        <div className={\"container center\"}>\r\n                            <button className=\"btn green lighten-1 center mt-10 mb-10\" onClick={this.toggleCreateFund.bind(this)}>New Financial Account</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={\"row\"}>\r\n                    <div className={\"col s12 m6\"}>\r\n                        {userFunds.length === 0\r\n                            ?\r\n                            null\r\n                            :\r\n                            <FundList funds = {userFunds}/>\r\n                        }\r\n                    </div>\r\n                    <div className={\"col s12 m6\"}>\r\n                        {userFunds.length === 0\r\n                            ?\r\n                            null\r\n                            :\r\n                            <div className={\"card z-depth-0 fund-operation\"}>\r\n                                <div className={\"card-content grey-text text-darken-3\"}>\r\n                                    <Select\r\n                                        className={\"funds\"}\r\n                                        name={\"funds\"}\r\n                                        onChange={this.handleSelectChange}\r\n                                        options={fundOptions}\r\n                                    />\r\n                                    <div className={\"container\"}>\r\n                                        <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"nickname\"}>Nickname</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'balance'} onChange={this.handleChange} required/>\r\n                                                <label htmlFor={\"balance\"}>Balance</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'lowBalanceLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'largeTransactionLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <Select\r\n                                                    className={\"fundtype\"}\r\n                                                    name={\"fundtype\"}\r\n                                                    placeholder={\"Fund Type\"}\r\n                                                    options = {[\r\n                                                        { value: 'PayPal', label: 'PayPal'},\r\n                                                        { value: 'Dining Dollar', label: 'Dining Dollar'},\r\n                                                        { value: 'Boiler Express', label: 'Boiler Express'},\r\n                                                        { value: 'Financial Aid', label: 'Financial Aid'},\r\n                                                        { value: 'Bank', label: 'Bank'}\r\n                                                    ]}\r\n                                                    onChange={this.handleEditSelectChange}\r\n                                                    defaultValue={{ value: 'paypal', label: 'PayPal'}}\r\n                                                />\r\n                                            </div>\r\n                                        </form>\r\n                                        <button className={\"btn green lighten-1\"} onClick={this.handleEdit}>Edit Account</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state);\r\n    return {\r\n        funds: state.firestore.ordered.funds,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        editFund: (fund)=> dispatch(editFund(fund))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {collection: 'funds'}\r\n    ])\r\n)(Financials)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {resetPassword} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass reset extends Component {\r\n    state ={\r\n        email:'',\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.resetPassword(this.state.email);\r\n        this.props.history.push('/SignIn');\r\n        //firebase.auth().sendPasswordResetEmail(this.state.email);\r\n    }\r\n\r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Reset Password</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Reset</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        resetPassword: (email) => dispatch(resetPassword(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reset)\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {deleteMemo} from '../../store/actions/memActions'\r\n\r\n\r\n\r\nconst MemFunc = (props) => {\r\n    //console.log(props);\r\n    const {data} = props;\r\n\r\n   const handleClick = (id) => {\r\n    props.deleting(id);\r\n   }\r\n\r\n\r\n    if(data){\r\n        const MemoArray = data.map (data => {\r\n            return(\r\n                <div className =\"container section project-details\" >\r\n                <div className =\"card z-depth-0\" id ={data.id}>\r\n                    <div className =\"card-content\">\r\n                        <span className =\"card-title\">{data.title}</span>\r\n                        <p>{data.content}</p>\r\n                    </div>\r\n                    <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                        <div>Posted by {data.owner}</div>\r\n                        <div>{moment(data.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={() => {handleClick(data.id)}}>Delete</button>\r\n            </div>\r\n            )\r\n        }\r\n            );\r\n        return(\r\n            <div>\r\n           { MemoArray }\r\n           </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    deleting : (id) => { dispatch(deleteMemo(id)) }\r\n    \r\n    }\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n    // firestoreConnect([\r\n    //     {collection: 'memos'}\r\n    // ])\r\n)(MemFunc)","// export const createMemo = (id) => {\r\n//     return {\r\n//         type : 'CREATE_MEM',\r\n//         id : id,\r\n//     }\r\n\r\n// }\r\n\r\nexport const createMemo = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('memos').add({\r\n            ...mem,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_MEM', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteMemo = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('memos').doc(mem).delete().then(() => {\r\n            dispatch({ type: 'DELTE_MEM_DOC', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_MEM_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {createMemo} from \"../../store/actions/memActions\"\r\nimport MemFunc from \"./memFunc\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass Memos extends Component {\r\n\r\n    state = {\r\n        title : \"\",\r\n        content : \"\",\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.creatememo(this.state);\r\n        this.setState ({\r\n            title : \"\",\r\n            content: \"\"\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    render () {      \r\n        let data = undefined;\r\n//        console.log(\"UID\", this.props.auth.uid);\r\n        if (this.props.memos !== undefined) {\r\n          data = this.props.memos.filter( memo => {\r\n             return this.props.auth.uid === memo.uid\r\n         });\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Create Memos</h5>\r\n                <div id = \"title\" className = \"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type =\"text\" id=\"title\" onChange ={this.handleChange} value={this.state.title}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea  id=\"content\"  className=\"materialize-textarea\" onChange ={this.handleChange} value={this.state.content}></textarea>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n\r\n                <MemFunc data={data} />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        memos : state.firestore.ordered.memos,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        creatememo: (id) => { dispatch(createMemo(id))}\r\n    }\r\n}\r\n\r\n\r\n//export default connect(matchStatetoProps , mapDispatchToProps)(Memos);\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'memos',\r\n                    where: ['uid', '==', props.auth.uid]\r\n                }\r\n            ]\r\n        } else{\r\n            return []\r\n        }\r\n    })\r\n)(Memos)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {closeTicket} from '../../store/actions/msgActions'\r\n\r\nconst MessageList = (props) => {\r\n    console.log(\"retrieving tickets from props\");\r\n\r\n    const {tickets} = props;\r\n    //var tickets = props;\r\n\r\n   const handleClick = (id) => {\r\n    props.closing(id);\r\n   }\r\n\r\n   console.log(tickets);\r\n    if(tickets){\r\n        const TicketArray = tickets.map (tickets => {\r\n            return(\r\n                <div className =\"container section project-details\" >\r\n                <div className =\"card z-depth-0\" id ={tickets.id}>\r\n                    <div className =\"card-content\">\r\n                        <p>{tickets.content}</p>\r\n                    </div>\r\n                    <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                        <div>Opened by {tickets.email}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={() => {handleClick(tickets.id)}}>Close Ticket</button>\r\n            </div>\r\n            )\r\n        });\r\n        return(\r\n            <div>\r\n           { TicketArray }\r\n           </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>No open tickets</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closing : (id) => { dispatch(closeTicket(id)) }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n)(MessageList)","export const createMessage =(newMsg)=>{\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const uid = getState().firebase.auth.uid.toString();\r\n        const profile = getState().firebase.profile;\r\n        var docRef;\r\n    \r\n        docRef = firestore.collection('supportTickets').doc(uid);\r\n\r\n        docRef.get().then((docSnapshot) => {\r\n            if (!docSnapshot.exists) {\r\n                docRef.set({\r\n                    user: profile.firstName,\r\n                    userID: uid\r\n                })\r\n            } \r\n        })\r\n\r\n        docRef.collection(\"userTickets\").add({\r\n            ...newMsg,\r\n            msgTime: new Date(),\r\n            uid: uid,\r\n            email: profile.email\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_TICKET', newMsg });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_TICKET_ERR'}, err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeTicket = (docID) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const uid = getState().firebase.auth.uid.toString();\r\n        firestore.collection('supportTickets').doc(uid).collection(\"userTickets\").doc(docID).delete().then(() => {\r\n            dispatch({ type: 'CLOSE_TICKET', docID });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CLOSE_TICKET_ERR'}, err);\r\n        })\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMessage } from '../../store/actions/msgActions'\r\nimport Axios from 'axios'\r\nimport MessageList from './messageList'\r\nimport './messages.css'\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        content: \"\",\r\n        email: \"\"\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n    handleClose = (event) => {\r\n        event.preventDefault();\r\n        this.props.closeThread(this.props.auth.uid);\r\n    }\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.createMessage(this.state);\r\n        Axios.post('https://us-central1-college-capital-ed06f.cloudfunctions.net/submit', this.state).catch(error => {\r\n            console.log(error);\r\n        })\r\n        this.setState ({\r\n            content: '',\r\n            email: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        this.state.email = auth.email;\r\n\r\n        console.log(this.props);\r\n       console.log(this.props.supportTickets);\r\n       var supportTickets;\r\n       if (this.props.supportTickets != undefined) {\r\n        supportTickets = this.props.supportTickets;\r\n       }\r\n       console.log(supportTickets);\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                    <h5 className =\"grey-text text-darken-3\">Message Support</h5>\r\n                    <div className = \"input-field\">\r\n                        <label htmlFor=\"content\">Enter Message Here</label>\r\n                        <input type =\"text\" value={this.state.content} id=\"content\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className =\"input-field\">\r\n                        <button className = \"btn green lighten-1 z-depth-0\">Send New Ticket</button>\r\n                    </div>\r\n                </form> \r\n                {this.props.supportTickets != null\r\n                        ?\r\n                        <MessageList tickets = {supportTickets} />\r\n                        :\r\n                        console.log(\"not rendering\" )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        supportTickets: state.firestore.ordered.supportTickets,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createMessage: (msg) => { dispatch(createMessage(msg))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        //console.log(props.auth.uid + \"3\");\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'supportTickets',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{ collection: 'userTickets' }],\r\n                    storeAs: \"supportTickets\"\r\n                }\r\n            ]\r\n        } else {\r\n            return [];\r\n        }\r\n    })\r\n)(Messages)","/*\r\nCredit to Danny Pule\r\nSource: https://medium.com/@danny.pule/export-json-to-csv-file-using-javascript-a0b7bc5b00d2\r\n */\r\n\r\n\r\nfunction convertToCSV(objArray) {\r\n    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    var str = '';\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var line = '';\r\n        for (var index in array[i]) {\r\n            if (line != '') line += ','\r\n\r\n            line += JSON.stringify(array[i][index]);\r\n        }\r\n\r\n        str += line + '\\r\\n';\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction exportTransactionsToCSV(headers, items, fileTitle) {\r\n    if (headers) {\r\n        items.unshift(headers);\r\n    }\r\n\r\n    // Convert Object to JSON\r\n    var jsonObject = JSON.stringify(items);\r\n\r\n    var csv = convertToCSV(jsonObject);\r\n\r\n    var exportedFilenmae = fileTitle + '.csv' || 'export.csv';\r\n\r\n    var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n        navigator.msSaveBlob(blob, exportedFilenmae);\r\n    } else {\r\n        var link = document.createElement(\"a\");\r\n        if (link.download !== undefined) { // feature detection\r\n            // Browsers that support HTML5 download attribute\r\n            var url = URL.createObjectURL(blob);\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"download\", exportedFilenmae);\r\n            link.style.visibility = 'hidden';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatTransactions(transactions) {\r\n    let result = [];\r\n    for (let k in transactions){\r\n        if (transactions[k] instanceof Object){\r\n            result.push({\"Transaction Date\":transactions[k].transactionDate,\r\n                \"Merchant\":transactions[k].merchant,\r\n                \"Amount\":transactions[k].amount})\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport function exportJSON(transactions) {\r\n    let dataStr = JSON.stringify(formatTransactions(transactions));\r\n    delete dataStr['createdAt'];\r\n    let dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n\r\n    let exportFileDefaultName = 'transactions-' + date + '.json';\r\n\r\n    let linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', exportFileDefaultName);\r\n    linkElement.click();\r\n}\r\n\r\nexport function exportCSV(transactions) {\r\n    let formattedTransactions = formatTransactions(transactions);\r\n    let headers = Object.keys(formattedTransactions[0]);\r\n    //let transactions = JSON.parse(JSON.stringify(this.props.transactions));\r\n\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    let exportFileName = 'transactions-' + date;\r\n\r\n    exportTransactionsToCSV(headers, formattedTransactions, exportFileName)\r\n}\r\n\r\n\r\nexport default {exportCSV, exportJSON};","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link} from \"react-router-dom\";\r\nimport './Transactions.css'\r\nimport materialize from 'materialize-css'\r\nimport {exportCSV, exportJSON} from \"./exportTransactions\";\r\nimport {updateTransaction, deleteTransactions} from \"../../store/actions/transactionActions\";\r\n\r\n// Basic Table Module\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\n// Cell Editing Module (Doesnt work for some reason lol)\r\nimport cellEditFactory, {Type} from 'react-bootstrap-table2-editor';\r\n\r\n// Pagination Module\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport {createTransaction} from \"../../store/actions/transactionActions\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst transactionCategory = [\r\n    {value: \"Dining\", label: \"Dining\"},\r\n    {value: \"Travel\", label: \"Travel\"},\r\n    {value: \"Tuition\", label: \"Tuition\"},\r\n    {value: \"Grocery\", label: \"Grocery\"},\r\n    {value: \"Bar & Coffee Shop\", label: \"Bar & Coffee Shop\"},\r\n    {value: \"Fee\", label: \"Fee\"}];\r\n\r\n// Columns for table\r\nconst columns = [{\r\n    dataField: 'id',\r\n    hidden: true\r\n}, {\r\n    dataField: 'merchant',\r\n    text: 'Merchant',\r\n    sort: true\r\n}, {\r\n    dataField: 'amount',\r\n    text: 'Amount',\r\n    sort: true,\r\n    sortFunc: (a, b, order) => {\r\n        if (order === 'desc') {\r\n            return a - b;\r\n        } else {\r\n            return b - a;\r\n        }\r\n    },\r\n    type: 'number'\r\n}, {\r\n    dataField: 'transactionCategory',\r\n    text: 'Category',\r\n    sort: true,\r\n    editor: {\r\n        type: Type.SELECT,\r\n        options: transactionCategory\r\n    },\r\n    editorClasses: \"browser-default\"\r\n}, {\r\n    dataField: 'transactionDate',\r\n    text: 'Transaction Date',\r\n    sort: true,\r\n    type: 'string',\r\n    editor: {type: Type.DATE}\r\n}];\r\n\r\n// Page pagination options\r\nconst paginationOption = {\r\n    sizePerPage: 10,\r\n    hideSizePerPage: true,\r\n    withFirstAndLast: false,\r\n    hidePageListOnlyOnePage: true\r\n};\r\n\r\n// Set default sorted state to descending by transaction date\r\nconst defaultSorted = [{\r\n    dataField: 'transactionDate',\r\n    order: 'desc'\r\n}];\r\n\r\nconst cellEdit = {\r\n    mode: 'click',\r\n    blurToSave: true\r\n};\r\n\r\nclass Transactions extends Component {\r\n    // For Modal\r\n    componentDidMount() {\r\n        const options = {\r\n            inDuration: 250,\r\n            outDuration: 250,\r\n            opacity: 0.5,\r\n            dismissible: true,\r\n            startingTop: \"4%\",\r\n            endingTop: \"10%\"\r\n        };\r\n        materialize.Modal.init(this.deleteModal, options);\r\n        materialize.Modal.init(this.exportModal, options);\r\n    }\r\n\r\n    handleExport = (e) => {\r\n        e.preventDefault();\r\n        switch (this.state.exportOption) {\r\n            case 'json':\r\n                this.handleExportJSON();\r\n                break;\r\n            case 'csv':\r\n                this.handleExportCSV();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        alert(\"Transactions exported.\")\r\n    };\r\n\r\n    handleExportJSON() {\r\n        exportJSON(this.props.transactions)\r\n    }\r\n\r\n    handleExportCSV() {\r\n        exportCSV(this.props.transactions)\r\n    }\r\n\r\n    handleExportOptionChange = (e) => {\r\n        this.setState({\r\n            exportOption: e.target.value\r\n        });\r\n    };\r\n\r\n    onTableChange = (type, newState) => {\r\n        if (type === \"cellEdit\") {\r\n            let transactionToUpdate = {\r\n                \"id\": newState.cellEdit.rowId,\r\n                \"dataField\": newState.cellEdit.dataField,\r\n                \"newValue\": newState.cellEdit.newValue\r\n            };\r\n\r\n            if (transactionToUpdate['dataField'] === 'transactionDate') { // format date before entering database\r\n                let dateParts = transactionToUpdate['newValue'].split(\"-\"); // yyyy-mm-dd\r\n                transactionToUpdate['newValue'] = dateParts[1] + '/' + dateParts[2] + '/' + dateParts[0];\r\n            }\r\n\r\n            this.props.updateTransaction(transactionToUpdate);\r\n        }\r\n    };\r\n\r\n    handleSelectRow(transactionID, isSelect) {\r\n        if (this.state === null || this.state.rowsSelected === undefined) {\r\n            let rowsSelected = [transactionID];\r\n\r\n            this.setState({\r\n                rowsSelected: rowsSelected\r\n            })\r\n        } else {\r\n            // avoid directly modify array in state\r\n            let rowsSelected = this.state.rowsSelected;\r\n\r\n            if (isSelect) //on select\r\n                rowsSelected.push(transactionID);\r\n            else { //on deselect\r\n                let indexToRemove = rowsSelected.indexOf(transactionID);\r\n\r\n                if (indexToRemove > -1)\r\n                    rowsSelected.splice(indexToRemove, 1)\r\n            }\r\n\r\n            this.setState({\r\n                rowsSelected: rowsSelected\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteTransactions = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state === null || this.state.rowsSelected === undefined || this.state.rowsSelected.length === 0)\r\n            alert(\"Oops! No row selected to delete!\");\r\n        else\r\n            this.props.deleteTransactions(this.state.rowsSelected);\r\n    };\r\n\r\n    render() {\r\n        //console.log(this.props.transactions);\r\n        return (\r\n            <div className={\"container mt\"}>\r\n                <div className=\"card z-depth-3\">\r\n                    {this.props.transactions != null\r\n                        ?\r\n                        <BootstrapTable\r\n                            keyField=\"id\"\r\n                            data={this.props.transactions}\r\n                            columns={columns}\r\n                            pagination={paginationFactory(paginationOption)}\r\n                            selectRow={{\r\n                                mode: 'checkbox',\r\n                                //clickToSelect: true,\r\n                                bgColor: '#68DE11',\r\n                                selectColumnStyle: {\r\n                                    backgroundColor: '#68DE11'\r\n                                },\r\n                                onSelect: (row, isSelect, rowIndex, e) => {\r\n                                    this.handleSelectRow(row.id, isSelect)\r\n                                }\r\n                                //clickToEdit: true\r\n                            }}\r\n                            defaultSorted={defaultSorted}\r\n                            cellEdit={cellEditFactory(cellEdit)}\r\n                            noDataIndication=\"No Transactions\"\r\n                            remote={{cellEdit: true}}\r\n                            onTableChange={this.onTableChange}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <Link to={\"/create_edit_transaction\"} className={\"btn green lighten-1 center mt\"}>New Transaction</Link>\r\n                <button data-target={\"exportModal\"} className={\"btn modal-trigger green lighten-1 ms-5\"}>Export...\r\n                </button>\r\n                <button data-target={\"deleteModal\"} className={\"btn modal-trigger green lighten-1\"}>Delete...</button>\r\n                <div>\r\n                    <div ref={Modal => {\r\n                        this.deleteModal = Modal;\r\n                    }}\r\n                         id={\"deleteModal\"}\r\n                         className={\"modal\"}>\r\n                        <div className={\"modal-content\"}>\r\n                            <form>\r\n                                <h4 className={\"grey-text text-darken-3\"}>Confirm to delete?</h4>\r\n                                <h6 className={\"black-txt\"}>This operation is irreversible.</h6>\r\n                                <div className={\"form-group\"}>\r\n                                    <button className={\"modal-close btn red lighten-1\"}\r\n                                            onClick={this.handleDeleteTransactions}>Delete\r\n                                    </button>\r\n                                    <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                       style={{\"marginLeft\": \"2%\"}}>\r\n                                        Cancel\r\n                                    </a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div ref={Modal => {\r\n                        this.exportModal = Modal;\r\n                    }}\r\n                         id={\"exportModal\"}\r\n                         className={\"modal\"}>\r\n                        <div className={\"modal-content\"}>\r\n                            <form>\r\n                                <h4 className={\"grey-text text-darken-3\"}>Export Options</h4>\r\n                                <div>\r\n                                    <label>\r\n                                        <input className={\"with-gap\"} name={\"optionGroup\"} id=\"json\" value=\"json\"\r\n                                               type=\"radio\" onChange={this.handleExportOptionChange}/>\r\n                                        <span>JSON</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>\r\n                                        <input className={\"with-gap\"} name={\"optionGroup\"} id=\"csv\" value=\"csv\"\r\n                                               onChange={this.handleExportOptionChange} type=\"radio\"/>\r\n                                        <span>CSV</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div className={\"form-group\"}>\r\n                                    <button className={\"modal-close btn green lighten-1\"}\r\n                                            onClick={this.handleExport}>Export\r\n                                    </button>\r\n                                    <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                       style={{\"marginLeft\": \"2%\"}}>\r\n                                        Close\r\n                                    </a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateTransaction: (transactionToUpdate) => dispatch(updateTransaction(transactionToUpdate)),\r\n        deleteTransactions: (transactions) => dispatch(deleteTransactions(transactions))\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactions: state.firestore.ordered.transactions,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\") {\r\n            return [\r\n                {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'userTransactions'}],\r\n                    storeAs: 'transactions'\r\n                }\r\n            ]\r\n        } else {\r\n            return []\r\n        }\r\n    })\r\n)(Transactions)","export const createTransaction = (transaction, history) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n        //check if user's collection has been created\r\n        let docRef = firestore.collection(\"transactions\").doc(userId);\r\n\r\n        let dateParts = transaction.transactionDate.split(\"-\"); // yyyy-mm-dd\r\n        transaction['transactionDate'] = dateParts[1] + '/' + dateParts[2] + '/' + dateParts[0];\r\n\r\n        docRef.get().then(function (doc) {\r\n            if (!doc.exists) {\r\n                docRef.set({\r\n                    owner: profile.firstName + ' ' + profile.lastName\r\n                })\r\n            }\r\n\r\n            docRef = docRef.collection('userTransactions');\r\n\r\n            docRef.add({\r\n                ...transaction,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({type: 'CREATE_FUND', transaction});\r\n                //alert(\"Transaction Created\");\r\n            }).catch((err) => {\r\n                dispatch({type: 'CREATE_FUND_ERR'}, err);\r\n                alert(\"Create transaction failed.\\n\" + err.message);\r\n            })\r\n        }).then((response) => {\r\n            history.push('/transactions')\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n\r\n    }\r\n};\r\n\r\nexport const updateTransaction = (transactionToUpdate) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        let docRef = firestore\r\n            .collection(\"transactions\")\r\n            .doc(userId)\r\n            .collection('userTransactions')\r\n            .doc(transactionToUpdate.id);\r\n\r\n        let transactionUpdate = {};\r\n\r\n        transactionUpdate[transactionToUpdate.dataField] = transactionToUpdate.newValue;\r\n\r\n        docRef.update(transactionUpdate)\r\n            .catch(function (error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n    }\r\n};\r\n\r\nexport const deleteTransactions = (transactions) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        let docRef = firestore\r\n            .collection(\"transactions\")\r\n            .doc(userId)\r\n            .collection('userTransactions');\r\n\r\n        transactions.forEach(transaction => {\r\n            docRef.doc(transaction)\r\n                .delete()\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                })\r\n        })\r\n    }\r\n};","import React, {Component, withRouter} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createTransaction} from \"../../store/actions/transactionActions\"\r\nimport Select from 'react-select';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst transactionCategory = [\r\n    { value: \"Dining\", label: \"Dining\"},\r\n    { value: \"Travel\", label: \"Travel\"},\r\n    { value: \"Tuition\", label: \"Tuition\"},\r\n    { value: \"Grocery\", label: \"Grocery\"},\r\n    { value: \"Bar & Coffee Shop\", label: \"Bar & Coffee Shop\"},\r\n    { value: \"Fee\", label: \"Fee\"}];\r\n\r\nclass CreateEditTransaction extends Component {\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.transactionCategory === undefined)\r\n            alert(\"Please select a category!\");\r\n        else\r\n            this.props.createTransaction(this.state, this.props.history);\r\n    };\r\n\r\n    handleCategoryChange = (e) => {\r\n        this.setState({\r\n            transactionCategory: e.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                    <h5 className={\"grey-text text-darken-3\"}>Create New Transaction</h5>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'amount'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'amount'}>Amount</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"date\"} id={'transactionDate'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'transactionDate'}>Date</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'merchant'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'merchant'}>Merchant</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"transactionCategory\"}\r\n                            name={\"transactionCategory\"}\r\n                            placeholder={\"Category\"}\r\n                            options={transactionCategory}\r\n                            onChange={this.handleCategoryChange}\r\n                        />\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <button className={\"btn green lighten-1\"}>Create</button>\r\n                        <Link to={\"/transactions\"} className={\"btn grey darken-3 white-text\"} style={{\"marginLeft\": \"2%\"}}>Close</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createTransaction: (transaction, history) => dispatch(createTransaction(transaction, history))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateEditTransaction)","// STEP 1 - Include Dependencies\r\n// Include react\r\nimport React,{Component, useState}from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Include the react-fusioncharts component\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\n// Include the fusioncharts library\r\nimport FusionCharts from \"fusioncharts\";\r\n\r\n// Include the chart type\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\n\r\n// Include the theme as fusion\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux'\r\nimport './chart.css';\r\n// Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\n\r\n\r\n\r\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\r\nclass Chart extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n  \r\n  render() {\r\n    // Pie Chart\r\n    const amount = this.props.transactions;\r\n    let myMap = new Map();\r\n    let myMap2 = new Map();\r\n    const chartDataPie =[];\r\n    // Array of months\r\n    var month = new Array();\r\n    month[0] = \"months\";\r\n    month[1] = \"January\";\r\n    month[2] = \"February\";\r\n    month[3] = \"March\";\r\n    month[4] = \"April\";\r\n    month[5] = \"May\";\r\n    month[6] = \"June\";\r\n    month[7] = \"July\";\r\n    month[8] = \"August\";\r\n    month[9] = \"September\";\r\n    month[10] = \"October\";\r\n    month[11] = \"November\";\r\n    month[12] = \"December\";\r\n\r\n    const byDay =[\r\n      {\r\n        label: \"1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"4\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"5\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"6\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"7\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"8\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"9\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"10\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"11\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"12\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"13\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"14\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"15\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"16\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"17\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"18\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"19\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"20\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"21\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"22\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"23\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"24\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"25\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"26\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"27\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"28\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"29\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"30\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"31\",\r\n        value: 0,\r\n      },\r\n    \r\n      \r\n    ];\r\n\r\n    const byMonth = [\r\n      {\r\n        label: \"January\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Feburary\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"March\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"April\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"May\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"June\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"July\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"August\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"September\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"October\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"November\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"December\",\r\n        value: 0,\r\n      },\r\n\r\n    ];\r\n\r\n    const byWeek = [\r\n      {\r\n        label: \"Week1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week4\",\r\n        value: 0,\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    var currentDate = new Date();\r\n    var current_Month = currentDate.getMonth();\r\n    var current_year = currentDate.getFullYear();\r\n    console.log(current_year);\r\n    if(amount != undefined) {\r\n      console.log(amount)\r\n\r\n      for (let i = 0; i < amount.length; i++) {\r\n        myMap.set(amount[i].transactionCategory, { index: 0 , value: false});\r\n      }\r\n\r\n      for (let i = 0; i < amount.length; i++) {\r\n        //console.log(amount[i].amount);\r\n        \r\n        if (!myMap.get(amount[i].transactionCategory).value) {\r\n          chartDataPie[i] = {label: amount[i].transactionCategory, value: amount[i].amount };\r\n        } else {\r\n  //          console.log (\"Before \", parseInt(chartDataPie[myMap.get(amount[i].merchant).index].value) + parseInt(amount[i].amount));\r\n            chartDataPie[myMap.get(amount[i].transactionCategory).index] = {label: amount[i].transactionCategory, value: (parseInt(chartDataPie[myMap.get(amount[i].transactionCategory).index].value) + parseInt(amount[i].amount))};\r\n        }\r\n\r\n\r\n\r\n        myMap.set(amount[i].transactionCategory, {index :i, value : true});\r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        \r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        //console.log(this.props.transactions[i].transactionDate.getDay())\r\n\r\n        // For This Months Spending by day\r\n        let temp = this.props.transactions[i].transactionDate;\r\n        console.log(temp);\r\n        var dt = temp.split(\"/\");\r\n        console.log(dt);\r\n        if(dt[0]!=undefined){\r\n        if (dt[0].charAt(0) == 0) {\r\n          dt[0] = dt[0].charAt(1);\r\n        }\r\n      }\r\n        var date_format  = month[dt[0]] + \" \" + dt[1]+ \", \" + dt[2];\r\n        var date = new Date(date_format.toString());\r\n        var day = date.getDay();\r\n        // console.log(day, month[current_Month + 1]);\r\n        // console.log(day, month[dt[1]]);\r\n        console.log(dt[0]);  //dt 0 = month\r\n        console.log(dt[1]);  //dt 1 = day\r\n        console.log(dt[2]);  //dt 2 = year\r\n        //console.log(byDay[dt[2]]);\r\n        if (month[current_Month + 1] == month[dt[0]] ) {\r\n          byDay[dt[1] - 1].value += parseInt(amount[i].amount);\r\n        }\r\n\r\n        if (current_year == dt[2]) {\r\n         byMonth[date.getMonth()].value += parseInt(amount[i].amount); \r\n        }\r\n        console.log(dt[1]);\r\n        if (dt[1] - 1 < 8) {\r\n          byWeek[0].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 8 && dt[1] - 1 < 15) {\r\n          byWeek[1].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 15 && dt[1] - 1 < 22) {\r\n          byWeek[2].value += parseInt(amount[i].amount);\r\n        } else {\r\n          byWeek[3].value += parseInt(amount[i].amount);\r\n        } \r\n      }\r\n\r\n   \r\n\r\n    }\r\n    if (this.props.transactions != undefined){\r\n      // var dt = new Date(\"December 25, 1995 \");\r\n      // console.log(dt.getDay());\r\n      // let temp = this.props.transactions[0].transactionDate;\r\n      // console.log(temp);\r\n      // var dt = temp.split(\"-\");\r\n      // console.log(dt);\r\n      // // console.log(dt[1]);\r\n      // // console.log(dt[1].charAt(0));\r\n      // if (dt[1].charAt(0) == 0) {\r\n      //     dt[1] = dt[1].charAt(1);\r\n      //     //console.log(dt);\r\n      // }\r\n\r\n      // var date_format  = month[dt[1]] + \" \" + dt[2]+ \", \" + dt[0];\r\n      // console.log(date_format);\r\n      // var date = new Date(date_format.toString());\r\n      // var day = date.getDay();\r\n      // console.log(day);\r\n\r\n      // byDay[day].value += parseInt(amount[0].amount);\r\n      // console.log(byDay[day].label , byDay[day].value);\r\n      //console.log(month[3]);\r\n      //console.log(this.props.transactions[0].transactionDate);\r\n    }\r\n\r\n\r\n// STEP 3 - Creating the JSON object to store the chart configurations\r\nconst chartConfigsPie = {\r\n  type: \"pie2d\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Category\",\r\n      //Set the chart subcaption\r\n      //Set the x-axis name\r\n      xAxisName: \"Spending Category\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars \",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\nconst chartConfigsLineD = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Day\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Day\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data:byDay\r\n  }\r\n};\r\n\r\nconst chartConfigsLineW = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Week\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Week\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byWeek\r\n  }\r\n};\r\n\r\nconst chartConfigsLineM = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Years Spending by Month\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Month\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byMonth\r\n  }\r\n};\r\n    \r\n    return (\r\n      <div className = \"visualizations\">\r\n      <div className = \"chart\">\r\n    <ReactFC {...chartConfigsPie} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineD} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineW} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineM} />);\r\n    </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      transactions: state.firestore.ordered.transactions,\r\n      auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => {\r\n      if (typeof props.auth.uid != \"undefined\") {\r\n          return [\r\n              {\r\n                  collection: 'transactions',\r\n                  doc: props.auth.uid,\r\n                  subcollections: [{collection: 'userTransactions'}],\r\n                  storeAs: 'transactions'\r\n              }\r\n          ]\r\n      } else {\r\n          return []\r\n      }\r\n  })\r\n)(Chart)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {resetPassword} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport {googleLogin} from '../../store/actions/authActions'\r\n\r\n\r\nclass google extends Component {\r\n    state ={\r\n        email:'',\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.googleLogin(this.state.email);\r\n        this.props.history.push('/SignIn');\r\n        //firebase.auth().sendPasswordResetEmail(this.state.email);\r\n    }\r\n\r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Login with Google</h5>\r\n               \r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        googleLogin: (email) => dispatch(googleLogin(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(google)\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nimport Profile from './components/profile/profile'\r\nimport Financials from './components/financials/Financials'\r\nimport createFund from './components/financials/CreateFund'\r\nimport reset from './components/auth/reset'\r\nimport Memos from './components/Memos/memos'\r\nimport Messages from './components/messaging/messages'\r\nimport Transactions from \"./components/transactions/Transactions\";\r\nimport CreateEditTransaction from \"./components/transactions/CreateEditTransaction\";\r\nimport Visualizations from \"./components/visualizations/chart\"\r\nimport Google from './components/auth/google'\r\n\r\nclass App extends Component {\r\n  render(){\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n     <Navbar/>\r\n     <Switch>\r\n       <Route exact path ='/' component ={Dashboard}/>\r\n       <Route path ='/project/:id' component={ProjectDetails}/>\r\n       <Route path ='/signin' component ={SignIn}/>\r\n       <Route path ='/signup' component ={SignUp}/>\r\n       <Route path ='/create' component ={CreateProject}/>\r\n       <Route path ='/financials' component ={Financials}/>\r\n       <Route path ='/transactions' component={Transactions}/>\r\n       <Route path ='/create_edit_transaction' component={CreateEditTransaction}/>\r\n       <Route path ='/profile' component ={Profile}/>\r\n       <Route path ='/createFund' component ={createFund}/>\r\n       <Route path ='/reset' component ={reset}/>\r\n       <Route path='/memos' component={Memos}/>\r\n       <Route path='/messages' component={Messages}/>\r\n       <Route path='/visualizations' component={Visualizations}/>\r\n\t   <Route path='/google' component={Google}/>\r\n     </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState= {\r\n    authError: null\r\n}\r\n\r\nconst authReducer =(state =initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState= {\r\n    projects:[\r\n        {id: '1', title: 'something something 1', content: 'blah blah blah 1'},\r\n        {id: '2', title: 'something something 2', content: 'blah blah blah 2'},\r\n        {id: '3', title: 'something something 3', content: 'blah blah blah 3'}\r\n    ]\r\n}\r\n\r\nconst projectReducer =(state =initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project eror', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","const initState={\r\n        userProfile:[{placeholder: 'placeholder'}]\r\n}\r\n\r\nconst updateReducer=(state=initState,action) =>{\r\n    switch(action.type){\r\n        case 'UPDATE_SUCCESSFUL': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'UPDATE_ERROR':\r\n            console.log('create project eror', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default updateReducer","const initState= {\r\n    funds:[{placeholder: 'placeholder'}]\r\n}\r\n\r\nconst fundReducer =(state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_FUND':\r\n            console.log('created project', action.fund)\r\n            return state;\r\n        case 'CREATE_FUND_ERROR':\r\n            console.log('create project err', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fundReducer","const InitState = {\r\n    memos :[\r\n    {mem_title: \"Haider\", content : \"Haider is the best\" },\r\n    {mem_title: \"Pay the electric bill\", content :\"Please do it I want electricity\"}\r\n    ]\r\n\r\n}\r\n\r\nconst memReducer = (state = InitState, action) => {\r\n    if (action.type === \"CREATE_MEM\") {\r\n        console.log(\"Memo Created\");\r\n        return state;\r\n    } else if (action.type === \"DELTE_MEM_DOC\") {\r\n        console.log(\"Memo Deleted\");\r\n        return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default memReducer;","const InitState = {\r\n    supportTickets:[\r\n        {content: 'I love pineapples expressly', email: 'sethrogen@collegecap.org'},\r\n        {content: 'There is pizza on my pants', email: 'jonahhill@collegecap.org'}\r\n    ]\r\n}\r\n\r\nconst msgReducer = (state = InitState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_TICKET':\r\n            console.log('created ticket', action.newMsg)\r\n            return state;\r\n        case 'CREATE_TICKET_ERR':\r\n            console.log('create transaction err', action.err)\r\n            return state;\r\n        case 'CLOSE_TICKET':\r\n            console.log('close ticket', action.docID)\r\n            return state;\r\n        case 'CLOSE_TICKET_ERR':\r\n            console.log('close ticket err', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default msgReducer;","const initState= {\r\n    transactions:[{placeholder: 'placeholder'}]\r\n};\r\n\r\nconst transactionReducer =(state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_TRANSACTION':\r\n            console.log('created transaction', action.transaction)\r\n            return state;\r\n        case 'CREATE_TRANSACTION_ERROR':\r\n            console.log('create transaction err', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default transactionReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nimport updateReducer from './updateReducer'\r\nimport fundReducer from './fundReducer'\r\nimport memReducer from './memReducer';\r\nimport msgReducer from './msgReducer';\r\nimport transactionReducer from \"./transactionReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    userProfile: updateReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    fund: fundReducer,\r\n    memo: memReducer,\r\n    messages: msgReducer,\r\n    transaction: transactionReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDHxQtPVGZMWlhUm5jW6j2ix4YbrbmC420\",\r\n    authDomain: \"college-capital-ed06f.firebaseapp.com\",\r\n    databaseURL: \"https://college-capital-ed06f.firebaseio.com\",\r\n    projectId: \"college-capital-ed06f\",\r\n    storageBucket: \"college-capital-ed06f.appspot.com\",\r\n    messagingSenderId: \"244905517245\",\r\n    appId: \"1:244905517245:web:70109dddc6f307b99697d4\",\r\n    measurementId: \"G-Z51D5JH30Y\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\nimport firebase from 'firebase/app'\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n    reduxFirestore(firebase, fbConfig)\r\n  )\r\n);\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}