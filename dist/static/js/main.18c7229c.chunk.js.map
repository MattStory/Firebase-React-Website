{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/profile/profile.js","store/actions/updateActions.js","components/financials/FundSummary.js","components/financials/FundList.js","store/actions/fundActions.js","components/financials/CreateFund.js","store/actions/stockActions.js","components/financials/Financials.js","components/auth/reset.js","components/Memos/memFunc.js","store/actions/memActions.js","components/Memos/memos.js","components/messaging/messageList.js","store/actions/msgActions.js","components/messaging/messages.js","components/transactions/exportTransactions.js","store/actions/transactionActions.js","store/actions/paymentAction.js","components/transactions/Transactions.js","components/transactions/CreateTransaction.js","components/visualizations/chart.js","components/visualizations/pastChart.js","components/auth/google.js","components/transactions/categories.js","components/Recurpayments/Paymentfunc.js","components/Recurpayments/Payments.js","components/alerting/catAlert.js","components/alerting/otherAlert.js","components/alerting/alertList.js","store/actions/alertActions.js","components/alerting/alerts.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/updateReducer.js","store/reducers/fundReducer.js","store/reducers/memReducer.js","store/reducers/msgReducer.js","store/reducers/transactionReducer.js","store/reducers/stockReducer.js","store/reducers/favStocksReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","id","Dropdown","Item","to","className","onClick","SignedOutLinks","state","firebase","profile","links","uid","DropdownButton","title","isLoaded","Notifications","ProjectSummary","project","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","Dashboard","console","log","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handelSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","address","studentId","phone","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","currentUser","sendEmailVerification","doc","user","set","CreateProject","createProject","history","push","toString","authorId","userEmail","add","Date","Profile","updateProfile","userProfile","userId","update","alert","FundSummary","fund","fundType","nickname","balance","FundList","funds","editFund","fundSelected","lowBalanceLimit","largeTransacationLimit","largeTransactionLimit","spendingLimit","owner","CreateFund","handleSelectChange","handleSubmit","createFund","required","name","placeholder","options","label","defaultValue","closePopup","apiUrl","defaultSorted","dataField","order","Financials","handleEdit","handleDel","delFund","handleEditSelectChange","handleGetStock","getStock","symbol","handleGetStocks","stocks","getStocks","handleNewStock","newStock","newSymbol","handleDeleteStocks","undefined","rowsSelected","length","deleteStocks","columns","hidden","text","sort","formatter","cell","toFixed","editable","style","showCreateFund","showEditFund","inDuration","outDuration","opacity","dismissible","startingTop","endingTop","materialize","Modal","init","newStockModal","deleteModal","exportForm","React","createRef","transactionID","isSelect","indexToRemove","indexOf","splice","isEmpty","fundOptions","queriedStock","userFunds","forEach","f","v","stock","priceDiff","currentPrice","favStocks","favStockPrices","lastFavStocks","toggleCreateFund","bind","keyField","selectRow","mode","bgColor","selectColumnStyle","backgroundColor","onSelect","row","rowIndex","handleSelectRow","noDataIndication","data-target","ref","localUrl","URL","searchParams","append","fetch","method","response","json","c","o","symbols","results","promiseArr","Promise","all","stockDocRef","get","exists","message","symbolIDs","stockIDs","stockID","delete","storeAs","subcollections","reset","resetPassword","sendPasswordResetEmail","error","deleting","mem","MemoArray","Memos","event","creatememo","memos","filter","memo","where","closing","docID","tickets","TicketArray","Messages","handleClose","closeThread","createMessage","Axios","post","supportTickets","msg","newMsg","docRef","docSnapshot","userID","msgTime","exportTransactionsToCSV","headers","items","fileTitle","unshift","csv","objArray","array","JSON","parse","str","i","line","index","stringify","convertToCSV","exportedFilenmae","blob","Blob","navigator","msSaveBlob","link","document","createElement","download","url","createObjectURL","setAttribute","visibility","body","appendChild","click","removeChild","formatTransactions","transactions","result","k","Object","transactionDate","merchant","amount","exportJSON","dataStr","dataUri","encodeURIComponent","today","exportFileDefaultName","getFullYear","getMonth","getDate","linkElement","exportCSV","formattedTransactions","keys","createTransaction","transaction","transactionDocRef","dateParts","split","transactionCategory","financialAccounts","account","financialAcct","percentage","editedAt","acctBalance","querySnapshot","category","newTotal","currentTotal","spendingTotal","parseInt","limit","alertRef","catSpent","alertType","addpayment","deletePayment","SearchBar","Search","ClearSearchButton","paginationOption","sizePerPage","hideSizePerPage","withFirstAndLast","hidePageListOnlyOnePage","cellEdit","blurToSave","Transactions","handleExport","current","reportValidity","transactionsToExport","find","t","exportOption","getInstance","exportModal","close","handleExportOptionChange","handleDeleteTransactions","deleteTransactions","onTableChange","newState","transactionToUpdate","rowId","newValue","updateTransaction","accountFormatter","accounts","targetFund","getAccountOptions","userFund","formattedFund","categoryFormatter","userCategories","targetCategory","getCategoryOptions","userCategory","formattedCategory","selectorID","splitAccountID","splitAccount","handleNewSplitAccount","unallocatedPercentage","splitAccounts","splitPercentage","newSplitAccountModal","clearSplitAccounts","updateSplitAccounts","newSplitAccount","splitModal","closeModal","modal","checkSelectionForSplit","open","sortFunc","a","b","editor","Type","SELECT","getOptions","setOptions","column","editorClasses","DATE","splitAccountColumns","l","todayDate","comapare_today","payments","comapare_payment","date","obj","todayDate1","search","searchProps","pagination","paginationFactory","cellEditFactory","remote","baseProps","transactionUpdate","originalAcct","transactionAmount","parseFloat","originalAcctDocRef","originalAcctBalance","newAcctDocRef","newAcctBalance","originalAmount","cat","fundDocRef","fundBalance","newAccounts","transactionDoc","accountRef","CreateTransaction","largeTransactionAlert","lowBalanceAlert","handleCategoryChange","handleFinancialAcctChange","nickName","handleNewCustomCategory","newCustomCategory","newCategoryModal","categories","categorie","min","lowBalance","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","Chart","month","Map","Array","byDay","byMonth","byWeek","currentDate","current_Month","current_year","temp","dt","charAt","date_format","getDay","chartConfigsLineD","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","exportEnabled","theme","chartConfigsLineW","chartConfigsLineM","pastChart","byDay1","byMonth1","byWeek1","chartConfigsLineD1","chartConfigsLineW1","chartConfigsLineM1","google","googleLogin","provider","GoogleAuthProvider","signInWithPopup","credential","accessToken","code","Categories","transactionCategories","transac","includes","deleteCustomCategories","fundCategories","catRef","PaymentArray","fontSize","Payments","window","color","deleteAlert","alerts","alertsArray","Alerts","userAlerts","App","exact","path","component","ProjectDetails","CreateEditTransaction","Visualizations","pastVisualizations","Google","Boolean","location","hostname","initState","authReducer","action","projectReducer","updateReducer","fundReducer","InitState","mem_title","memReducer","msgReducer","transactionReducer","stockReducer","favStockReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","messages","favStocksReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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AAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,GAET,CACEkE,MAAO,KACPlE,MAAO,IAMLkb,EAAW,CACf,CACEhX,MAAO,UACPlE,MAAO,GAET,CACEkE,MAAO,WACPlE,MAAO,GAET,CACEkE,MAAO,QACPlE,MAAO,GAET,CACEkE,MAAO,QACPlE,MAAO,GAET,CACEkE,MAAO,MACPlE,MAAO,GAET,CACEkE,MAAO,OACPlE,MAAO,GAET,CACEkE,MAAO,OACPlE,MAAO,GAET,CACEkE,MAAO,SACPlE,MAAO,GAET,CACEkE,MAAO,YACPlE,MAAO,GAET,CACEkE,MAAO,UACPlE,MAAO,GAET,CACEkE,MAAO,WACPlE,MAAO,GAET,CACEkE,MAAO,WACPlE,MAAO,IAKLmb,EAAU,CACd,CACEjX,MAAO,QACPlE,MAAO,GAET,CACEkE,MAAO,QACPlE,MAAO,GAET,CACEkE,MAAO,QACPlE,MAAO,GAET,CACEkE,MAAO,QACPlE,MAAO,IAMPyZ,EAAc,IAAIpX,KAClBqX,EAAgBD,EAAY3J,WAC5B6J,EAAeF,EAAY5J,cAE/B,GADAlR,QAAQC,IAAI+a,QACCnU,GAAV8J,EAAqB,CACtB3Q,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","file":"static/js/main.18c7229c.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\n\r\n\r\nconst SignedInLinks =(props) =>{\r\n    \r\n    return (\r\n        <div id =\"signedIn\">\r\n            <Dropdown.Item><NavLink to='/messages'  className ='btn btn -floating green lighten-1'>Support</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/create'  className ='btn btn -floating green lighten-1'>New Post</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/alerts'  className ='btn btn -floating green lighten-1'>Alerts</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/financials'  className ='btn btn -floating green lighten-1'>Financials</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/transactions'  className ='btn btn -floating green lighten-1'>Transactions</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/payments'  className ='btn btn -floating green lighten-1'>Payments</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/visualizations'  className ='btn btn -floating green lighten-1'>Visualizations</NavLink> </Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/memos'  className ='btn btn -floating green lighten-1'>Memos</NavLink> </Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/profile' className ='btn btn -floating green lighten-1'>Profile</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to = '/signin' className ='btn btn -floating green lighten-1' onClick={props.signOut} >Log Out</NavLink></Dropdown.Item>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signOut:()=> dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn =(credentials) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut =()=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            firebase.auth().currentUser.sendEmailVerification();\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                email: newUser.email,\r\n                address: newUser.address,\r\n                phone: newUser.phone,\r\n                studentId: newUser.studentId\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type: 'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPassword =(email)=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n            // Email sent.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });    }\r\n}\r\n\r\nexport const googleLogin =(email)=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          }); }\r\n}\r\n\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nconst SignedOutLinks =() =>{\r\n    return (\r\n        <div >\r\n            <Dropdown.Item><NavLink to='/signup' className ='btn btn -floating green lighten-1'>SignUp</NavLink></Dropdown.Item>\r\n            <Dropdown.Item><NavLink to='/signin' className ='btn btn -floating green lighten-1'>Log In</NavLink></Dropdown.Item>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport './Navbar.css'\r\n\r\nconst Navbar =(props) =>{\r\n    const {auth,profile}=props;\r\n    //console.log(auth);\r\n    const links =auth.uid? <SignedInLinks profile ={profile}/>: <SignedOutLinks/>\r\n    return (\r\n        <nav className =\"nav-wrapper grey darken-3\">\r\n            <div className =\"container\">\r\n                <Link to='/' className =\"brand-logo\">CC</Link>\r\n                <div id =\"dropbtn\">\r\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Menu\">\r\n                    {auth.isLoaded && links}\r\n                    \r\n                </DropdownButton>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\nconst Notifications =(props) =>{\r\n    return(\r\n        <div className=\"section\">\r\n            <div className =\"card z-depth-0\">\r\n                <div className =\"card-content\">\r\n                    <span className =\"card-title\">Notifications</span>\r\n                    <ul className ='notifications'>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project})=>{\r\n    return (\r\n        <div className =\"card z-depth-0 project-summary\">\r\n                <div className =\"card-content grey-text text-darken-3\">\r\n                    <span className =\"card-title\">{project.title}</span>\r\n    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className =\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) =>{\r\n    return(\r\n        <div className= \"project-list section\">\r\n            {projects && projects.map(project=>{\r\n                return (\r\n                    <Link to={'/project/'+project.id}key={project.id}>\r\n                    <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        console.log(this.props);\r\n        const {projects,auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return(\r\n            <div className= 'dashboard container'>\r\n                <div className ='row'>\r\n                    <div className =\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className =\"col s12 m5 offset-m1\">\r\n                        <Notifications/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    \r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport{connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails=(props) =>{\r\n    const {project,auth } =props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n    if(project){\r\n        return(\r\n        <div className =\"container section project-details\">\r\n            <div className =\"card z-depth-0\">\r\n                <div className =\"card-content\">\r\n                <span className =\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        )\r\n    }else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps =(state, ownProps) =>{\r\n    \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id]: null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n        email:'',\r\n        password: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    \r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type =\"password\" id=\"password\" onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/reset\" className=\"btn btn-primary\">Reset Password</Link>\r\n\t\t\t\t<Link to=\"/google\" className=\"btn btn-primary\">Sign In with Google</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        studentId: '',\r\n        phone: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    \r\n    render() {\r\n        const {auth,authError} =this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type =\"password\" id=\"password\" onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type =\"text\" id=\"firstName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type =\"text\" id=\"lastName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input type =\"tel\" id=\"phone\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input type =\"text\" id=\"address\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"studentId\">StudentId</label>\r\n                    <input type =\"text\" id=\"studentId\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Register</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signUp: (newUser)=> dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title:'',\r\n        content: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    \r\n    render() {\r\n        const {auth} =this.props;\r\n        if(auth.uid.toString() !== \"Rs5NBrhOlTSsKBurH9JnfpTpxUO2\") return <Redirect to= '/signin'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Create Post</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type =\"text\" id=\"title\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea  id=\"content\"  className=\"materialize-textarea\"onChange ={this.handleChange}></textarea>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( CreateProject)\r\n","export const createProject=(project) =>{\r\n    return(dispatch,getState,{getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore=getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        console.log(getState().firebase.auth.userEmail);\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n        \r\n    }\r\n};","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {updateProfile, getProfileData} from '../../store/actions/updateActions'\r\n\r\nclass Profile extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        phone: '',\r\n        studentId: '',\r\n        address: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.updateProfile(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n        \r\n    \r\n    render() {\r\n        const {auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return (\r\n            \r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Profile</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input  type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input type =\"tel\" id=\"phone\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type =\"text\" id=\"firstName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type =\"text\" id=\"lastName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"studentId\">Student Id</label>\r\n                    <input type =\"text\" id=\"studentId\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input type =\"text\" id=\"address\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Update</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        userProfile: state.firebase.userProfile,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        updateProfile: (userProfile)=> dispatch(updateProfile(userProfile))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile)\r\n","export const updateProfile =(userProfile)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n        const userId= getState().firebase.auth.uid;\r\n        firestore.collection('users').doc(userId).update({\r\n            firstName : userProfile.firstName,\r\n            lastName : userProfile.lastName,\r\n            email : userProfile.email,\r\n            phone : userProfile.phone,\r\n            address: userProfile.address,\r\n            studentId: userProfile.studentId\r\n\r\n        }).then(()=>{\r\n            dispatch({type: 'UPDATE_SUCCESS',userProfile})\r\n            alert(\"update success\");\r\n            \r\n        }).catch(err=>{\r\n            dispatch({type: 'UPDATE_ERROR',err})\r\n            alert(\"update failure\");\r\n        })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst FundSummary = ({fund}) => {\r\n    return (\r\n        <div className={\"card z-depth-0 fund-summary\"}>\r\n            <div className={\"card-content grey-text text-darken-3\"}>\r\n                <span className={\"card-title\"}>{fund.fundType + ': ' + fund.nickname}</span>\r\n                <p>Balance: ${fund.balance}</p>\r\n                <p className =\"grey-text\">{moment(fund.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundSummary","import React from \"react\";\r\nimport FundSummary from \"./FundSummary\";\r\n\r\nconst FundList = ({funds}) => {\r\n        return (\r\n            <div className={\"fund-list section\"}>\r\n                { funds && funds.map(fund => {\r\n                    return (\r\n                        <FundSummary fund={fund} key={fund.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FundList","export const createFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid\r\n        firestore.collection('funds').add({\r\n            ...fund,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const editFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        console.log(fund);\r\n        firestore.collection('funds').doc(fund.fundSelected).set({\r\n            nickname: fund.nickname ? fund.nickname : '',\r\n            balance: fund.balance ? fund.balance : 0,\r\n            lowBalanceLimit: fund.lowBalanceLimit ? fund.lowBalanceLimit : 0,\r\n            largeTransacationLimit: fund.largeTransactionLimit ? fund.largeTransactionLimit : 0,\r\n            spendingLimit: fund.spendingLimit ? fund.spendingLimit : 0,\r\n            fundType: fund.fundType ? fund.fundType : 'PayPal',\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const delFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        console.log(fund)\r\n        firestore.collection('funds').doc().set({\r\n            balance: 245762548\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        let docid = '4HCMIlNug3Z1dg67nVHc'\r\n        firestore.collection('funds').doc(docid).set({\r\n            balance: 245762548\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createFund} from \"../../store/actions/fundActions\";\r\nimport './CreateFund.css'\r\nimport Select from 'react-select';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateFund extends Component {\r\n    state = {\r\n        nickname: '',\r\n        balance: 0,\r\n        lowBalanceLimit: 0,\r\n        largeTransactionLimit: 0,\r\n        spendingLimit: 0,\r\n        fundType: 'PayPal'\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            fundType: e.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createFund(this.state);\r\n        alert(\"fund created\");\r\n        //this.props.history.push('/financials')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create a New Fund</h5>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"nickname\"}>Nickname</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'balance'} onChange={this.handleChange} required/>\r\n                        <label htmlFor={\"balance\"}>Balance</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'lowBalanceLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'largeTransactionLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"fundtype\"}\r\n                            name={\"fundtype\"}\r\n                            placeholder={\"Fund Type\"}\r\n                            options = {[\r\n                                { value: 'PayPal', label: 'PayPal'},\r\n                                { value: 'Dining Dollar', label: 'Dining Dollar'},\r\n                                { value: 'Boiler Express', label: 'Boiler Express'},\r\n                                { value: 'Financial Aid', label: 'Financial Aid'},\r\n                                { value: 'Bank', label: 'Bank'}\r\n                            ]}\r\n                            onChange={this.handleSelectChange}\r\n                            defaultValue={{ value: 'paypal', label: 'PayPal'}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <button className=\"btn green lighten-1\">Create</button>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <button className=\"btn white black-text lighten-1\" onClick={this.props.closePopup}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createFund: (fund) => dispatch(createFund(fund))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateFund)","const apiUrl = \"https://finnhub.io/api/v1/quote?token=bq4lq1frh5rc5os3t7vg\";\r\n\r\nexport const getStock = (symbol) => {\r\n    return (dispatch, getState) => {\r\n        let localUrl = new URL(apiUrl);\r\n        localUrl.searchParams.append(\"symbol\", symbol);\r\n        fetch(localUrl, {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => response.json())\r\n            .then((json => {\r\n                dispatch(\r\n                    {\r\n                        type: \"GET_STOCK\",\r\n                        stock: {\r\n                            \"symbol\": symbol,\r\n                            \"currentPrice\": json.c,\r\n                            \"openingPrice\": json.o,\r\n                            \"priceDiff\": json.c - json.o\r\n                        }\r\n                    }\r\n                );\r\n            }))\r\n            .catch((err) => {\r\n                dispatch({type: \"GET_STOCK_ERR\", err})\r\n            });\r\n    }\r\n};\r\n\r\nexport const getStockPrices = (stocks) => {\r\n    return (dispatch, getState) => {\r\n        let results = [];\r\n\r\n        let promiseArr = stocks.map(function (stock) {\r\n            let localUrl = new URL(apiUrl);\r\n            localUrl.searchParams.append(\"symbol\", stock.symbol);\r\n            return fetch(localUrl, {\r\n                method: \"GET\"\r\n            })\r\n                .then(function (response) {\r\n                    response.json()\r\n                        .then((json) => {\r\n                            results.push({\r\n                                \"id\": stock.id,\r\n                                \"symbol\": stock.symbol,\r\n                                \"currentPrice\": json.c,\r\n                                \"openingPrice\": json.o,\r\n                                \"priceDiff\": json.c - json.o\r\n                            })\r\n                        });\r\n\r\n                    return response\r\n                })\r\n        });\r\n\r\n        Promise.all(promiseArr).then(() => {\r\n            dispatch({type: \"GET_FAV_STOCK_PRICES\", favStockPrices: results});\r\n        }).catch((err) => {\r\n            dispatch({type: \"GET_STOCK_ERR\", err})\r\n        })\r\n    }\r\n};\r\n\r\nexport const newStock = (symbol) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n        //check if user's collection has been created\r\n        let stockDocRef = firestore.collection(\"stocks\").doc(userId);\r\n\r\n        // create record in favoriteStocks\r\n        stockDocRef.get().then(function (doc) {\r\n            if (!doc.exists) {\r\n                stockDocRef.set({\r\n                    owner: profile.firstName + ' ' + profile.lastName\r\n                })\r\n            }\r\n\r\n            stockDocRef = stockDocRef.collection('favoriteStocks');\r\n\r\n            stockDocRef.add({\r\n                symbol: symbol\r\n            }).then(() => {\r\n                dispatch({type: 'CREATE_STOCK', symbol});\r\n            }).catch((err) => {\r\n                dispatch({type: 'CREATE_STOCK_ERR'}, err);\r\n                alert('Create new stock symbol failed.\\n' + err.message);\r\n            })\r\n        }).catch(function (err) {\r\n            console.log(\"Error getting document: \", err);\r\n            alert(\"Error getting document, please contact administrator.\")\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteStocks = (stockIDs) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n        let stockDocRef = firestore.collection(\"stocks\").doc(userId).collection('favoriteStocks');\r\n\r\n        stockIDs.forEach(stockID => {\r\n            let docRef = stockDocRef.doc(stockID)\r\n\r\n            docRef.delete()\r\n                .then(dispatch({type: 'DELETE_STOCK'}))\r\n                .catch((err) => {\r\n                    dispatch({type: 'DELETE_STOCK_ERR'}, err)\r\n                })\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStock = (stock) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n\r\n        let stockDocRef = firestore.collection(\"stocks\").doc(userId).collection('favoriteStocks').doc(stock.id);\r\n\r\n        let stockUpdate = {};\r\n        stockUpdate[stock.dataField] = stock.newValue;\r\n\r\n        stockDocRef.update(stockUpdate)\r\n            .catch(err => {\r\n                dispatch({type: 'UPDATE_STOCK_ERR', err})\r\n            })\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport './Financials.css'\r\nimport FundList from './FundList'\r\nimport CreateFund from \"./CreateFund\";\r\nimport {editFund} from \"../../store/actions/fundActions\";\r\nimport Select from \"react-select\";\r\nimport {getStock, getStockPrices, newStock, deleteStocks, updateStock} from \"../../store/actions/stockActions\";\r\n\r\n// Basic Table Module\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\n// Cell Editing Module\r\nimport cellEditFactory, {Type} from 'react-bootstrap-table2-editor';\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport materialize from \"materialize-css\";\r\n\r\nconst cellEdit = {\r\n    mode: 'click',\r\n    blurToSave: true\r\n};\r\n\r\nconst defaultSorted = [{\r\n    dataField: 'symbol',\r\n    order: 'desc'\r\n}];\r\n\r\nclass Financials extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showCreateFund: false,\r\n            showEditFund: false\r\n        };\r\n    }\r\n\r\n    // For Modal\r\n    componentDidMount() {\r\n        const options = {\r\n            inDuration: 250,\r\n            outDuration: 250,\r\n            opacity: 0.5,\r\n            dismissible: true,\r\n            startingTop: \"4%\",\r\n            endingTop: \"10%\"\r\n        };\r\n        materialize.Modal.init(this.newStockModal, options);\r\n        materialize.Modal.init(this.deleteModal, options);\r\n\r\n        this.exportForm = React.createRef()\r\n    }\r\n\r\n    toggleCreateFund() {\r\n        this.setState({\r\n            showCreateFund: !this.state.showCreateFund\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editFund(this.state)\r\n    }\r\n\r\n    handleDel = (e) => {\r\n        e.preventDefault();\r\n        this.props.delFund(this.state)\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            fundSelected: e.value\r\n        })\r\n    }\r\n\r\n    handleEditSelectChange = (e) => {\r\n        this.setState({\r\n            fundType: e.value\r\n        })\r\n    }\r\n\r\n    handleGetStock = (e) => {\r\n        e.preventDefault();\r\n        this.props.getStock(this.state.symbol)\r\n    };\r\n\r\n    handleGetStocks = (stocks) => {\r\n        this.props.getStocks(stocks)\r\n    };\r\n\r\n    handleNewStock = (e) => {\r\n        e.preventDefault();\r\n        this.props.newStock(this.state.newSymbol)\r\n    }\r\n\r\n    handleDeleteStocks = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state === null || this.state.rowsSelected === undefined || this.state.rowsSelected.length === 0)\r\n            alert(\"Oops! No stock selected to delete!\");\r\n        else\r\n            this.props.deleteStocks(this.state.rowsSelected);\r\n    }\r\n\r\n    // onTableChange = (type, newState) => {\r\n    //\r\n    //     if (type === \"cellEdit\"){\r\n    //         let stockToUpdate = {\r\n    //             \"id\": newState.cellEdit.rowId,\r\n    //             \"dataField\": newState.cellEdit.dataField,\r\n    //             \"newValue\": newState.cellEdit.newValue\r\n    //         };\r\n    //\r\n    //\r\n    //         this.props.updateStock(stockToUpdate);\r\n    //\r\n    //         // update page\r\n    //         this.props.history.push('/financials')\r\n    //\r\n    //\r\n    //     }\r\n    // };\r\n\r\n    handleSelectRow(transactionID, isSelect) {\r\n        if (this.state === null || this.state.rowsSelected === undefined) {\r\n            let rowsSelected = [transactionID];\r\n\r\n            this.setState({\r\n                rowsSelected: rowsSelected\r\n            })\r\n        } else {\r\n            // avoid directly modify array in state\r\n            let rowsSelected = this.state.rowsSelected;\r\n\r\n            if (isSelect) //on select\r\n                rowsSelected.push(transactionID);\r\n            else { //on deselect\r\n                let indexToRemove = rowsSelected.indexOf(transactionID);\r\n\r\n                if (indexToRemove > -1)\r\n                    rowsSelected.splice(indexToRemove, 1)\r\n            }\r\n\r\n            this.setState({\r\n                rowsSelected: rowsSelected\r\n            });\r\n        }\r\n    };\r\n\r\n    columns = [\r\n        {\r\n            dataField: 'id',\r\n            hidden: true,\r\n            text: ''\r\n        },\r\n        {\r\n            dataField: 'symbol',\r\n            sort: true,\r\n            text: ''\r\n        },\r\n        {\r\n            dataField: 'currentPrice',\r\n            formatter: (cell) => {\r\n                return '$' + cell.toFixed(2)\r\n            },\r\n            text: '',\r\n            editable: false\r\n        },\r\n        {\r\n            dataField: 'priceDiff',\r\n            formatter: (cell) => {\r\n                if (cell === undefined)\r\n                    return ''\r\n\r\n                cell = cell.toFixed(2)\r\n\r\n                if (cell >= 0) {\r\n                    return (\r\n                        <label className={\"green-text\"} style={{\"fontSize\": \"15px\"}}>+{cell}</label>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <label className={\"red-text\"} style={{\"fontSize\": \"15px\"}}>{cell}</label>\r\n                    )\r\n                }\r\n            },\r\n            text: '',\r\n            editable: false\r\n        }\r\n    ]\r\n\r\n    lastFavStocks;\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if (auth.isLoaded && auth.isEmpty) return <Redirect to='/signin'/>;\r\n\r\n        const funds = this.props.funds;\r\n\r\n        let fundOptions;\r\n\r\n        let userFunds = []\r\n\r\n        if (this.props.funds != null) {\r\n            funds.forEach(f => {\r\n                if (f.uid === auth.uid) {\r\n                    userFunds.push(f);\r\n                }\r\n            })\r\n        }\r\n\r\n        fundOptions = userFunds.map(v => ({\r\n            label: v.fundType + ': ' + v.nickname,\r\n            value: v.id\r\n        }))\r\n\r\n        let queriedStock;\r\n\r\n        if (this.props.stock && this.props.stock.priceDiff >= 0) {\r\n            queriedStock = <div>\r\n                <h6 className={\"grey-text text-darken-3\"}>{this.props.stock.symbol}: ${this.props.stock.currentPrice},\r\n                    Since Open: </h6>\r\n                <h6 className={\"h6 green-text inline\"}>+{this.props.stock.priceDiff.toFixed(2)}</h6>\r\n            </div>\r\n\r\n        } else if (this.props.stock && this.props.stock.priceDiff < 0) {\r\n            queriedStock = <div>\r\n                <h6 className={\"h4 grey-text text-darken-3\"}>{this.props.stock.symbol}: ${this.props.stock.currentPrice},\r\n                    Since Open: </h6>\r\n                <h6 className={\"h6 red-text inline\"}>{this.props.stock.priceDiff.toFixed(2)}</h6>\r\n            </div>\r\n        }\r\n\r\n        if ((this.props.favStocks !== undefined && this.props.favStockPrices === null) || this.lastFavStocks !== this.props.favStocks) { // need to get symbols' current prices\r\n            let stocks = []\r\n            this.lastFavStocks = this.props.favStocks\r\n\r\n            this.props.favStocks.forEach(stock => {\r\n                stocks.push(stock)\r\n            })\r\n\r\n            this.handleGetStocks(stocks)\r\n        }\r\n\r\n        return (\r\n            <div className={\"container mt-10\"}>\r\n                <div className =\"card z-depth-0\">\r\n                    {this.state.showCreateFund\r\n                        ?\r\n                        <CreateFund\r\n                            closePopup={this.toggleCreateFund.bind(this)}\r\n                        />\r\n                        :\r\n                        <div className={\"container center\"}>\r\n                            <button className=\"btn green lighten-1 center mt-10 mb-10\"\r\n                                    onClick={this.toggleCreateFund.bind(this)}>New Financial Account\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={\"row\"}>\r\n                    <div className={\"col s12 m6\"}>\r\n                        {userFunds.length === 0\r\n                            ?\r\n                            null\r\n                            :\r\n                            <FundList funds={userFunds}/>\r\n                        }\r\n                        {userFunds.length === 0\r\n                            ?\r\n                            null\r\n                            :\r\n                            <div className={\"card z-depth-0 fund-operation\"}>\r\n                                <div className={\"card-content grey-text text-darken-3\"}>\r\n                                    <Select\r\n                                        className={\"funds\"}\r\n                                        name={\"funds\"}\r\n                                        onChange={this.handleSelectChange}\r\n                                        options={fundOptions}\r\n                                    />\r\n                                    <div className={\"container\"}>\r\n                                        <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"nickname\"}>Nickname</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'balance'} onChange={this.handleChange}\r\n                                                       required/>\r\n                                                <label htmlFor={\"balance\"}>Balance</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'lowBalanceLimit'}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'largeTransactionLimit'}\r\n                                                       onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <Select\r\n                                                    className={\"fundtype\"}\r\n                                                    name={\"fundtype\"}\r\n                                                    placeholder={\"Fund Type\"}\r\n                                                    options={[\r\n                                                        {value: 'PayPal', label: 'PayPal'},\r\n                                                        {value: 'Dining Dollar', label: 'Dining Dollar'},\r\n                                                        {value: 'Boiler Express', label: 'Boiler Express'},\r\n                                                        {value: 'Financial Aid', label: 'Financial Aid'},\r\n                                                        {value: 'Bank', label: 'Bank'}\r\n                                                    ]}\r\n                                                    onChange={this.handleEditSelectChange}\r\n                                                    defaultValue={{value: 'paypal', label: 'PayPal'}}\r\n                                                />\r\n                                            </div>\r\n                                        </form>\r\n                                        <button className={\"btn green lighten-1\"} onClick={this.handleEdit}>Edit Account</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className={\"col s12 m6\"}>\r\n                        <div className=\"card z-depth-0\">\r\n                            <div className={\"container center\"}>\r\n                                <div className={\"input-field\"}>\r\n                                    <input type={\"text\"} id={'symbol'} className={\"center\"}\r\n                                           onChange={this.handleChange} style={{\"marginTop\": \"10%\"}}/>\r\n                                    <label htmlFor={'symbol'} style={{\"marginTop\": \"10%\"}}>Stock Symbol to Query</label>\r\n                                </div>\r\n                                <button className={\"btn green lighten-1 center\"} onClick={this.handleGetStock}>Get Stock\r\n                                    Symbol\r\n                                </button>\r\n                                <div>\r\n                                    {queriedStock}\r\n                                </div>\r\n                                {this.props.favStockPrices !== null\r\n                                    ?\r\n                                    <BootstrapTable\r\n                                        keyField=\"id\"\r\n                                        data={this.props.favStockPrices}\r\n                                        columns={this.columns}\r\n                                        selectRow={{\r\n                                            mode: 'checkbox',\r\n                                            // clickToSelect: true,\r\n                                            bgColor: '#68DE11',\r\n                                            selectColumnStyle: {\r\n                                                backgroundColor: '#68DE11'\r\n                                            },\r\n                                            onSelect: (row, isSelect, rowIndex, e) => {\r\n                                                this.handleSelectRow(row.id, isSelect)\r\n                                            }\r\n                                        }}\r\n                                        defaultSorted={defaultSorted}\r\n                                        noDataIndication=\"No Stocks\"\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                <button data-target={\"newStockModal\"}\r\n                                        className={\"btn modal-trigger green lighten-1 ms-5\"} style={{\"margin\": \"10%\"}}>+\r\n                                </button>\r\n                                <button data-target={\"deleteModal\"}\r\n                                        className={\"btn modal-trigger green lighten-1\"} style={{\"margin\": \"10%\"}}>Delete...\r\n                                </button>\r\n                                <div>\r\n                                    <div ref={Modal => {\r\n                                        this.newStockModal = Modal;\r\n                                    }}\r\n                                         id={\"newStockModal\"}\r\n                                         className={\"modal\"}>\r\n                                        <div className={\"modal-content\"}>\r\n                                            <form>\r\n                                                <h4 className={\"grey-text text-darken-3\"}>New stock symbol</h4>\r\n                                                <div className={\"form-group\"}>\r\n                                                    <div className={\"input-field\"}>\r\n                                                        <input type={\"text\"} id={'newSymbol'}\r\n                                                               onChange={this.handleChange} required={true}/>\r\n                                                        <label htmlFor={\"newSymbol\"}>Symbol</label>\r\n                                                    </div>\r\n                                                    <button className={\"modal-close btn green lighten-1\"}\r\n                                                            onClick={this.handleNewStock}>Save\r\n                                                    </button>\r\n                                                    <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                                       style={{\"marginLeft\": \"2%\"}}>\r\n                                                        Cancel\r\n                                                    </a>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div ref={Modal => {\r\n                                        this.deleteModal = Modal;\r\n                                    }}\r\n                                         id={\"deleteModal\"}\r\n                                         className={\"modal\"}>\r\n                                        <div className={\"modal-content\"}>\r\n                                            <form>\r\n                                                <h4 className={\"grey-text text-darken-3\"}>Confirm to delete?</h4>\r\n                                                <h6 className={\"black-txt\"}>This operation is irreversible.</h6>\r\n                                                <div className={\"form-group\"}>\r\n                                                    <button className={\"modal-close btn red lighten-1\"}\r\n                                                            onClick={this.handleDeleteStocks}>Delete\r\n                                                    </button>\r\n                                                    <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                                       style={{\"marginLeft\": \"2%\"}}>\r\n                                                        Cancel\r\n                                                    </a>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        funds: state.firestore.ordered.funds,\r\n        auth: state.firebase.auth,\r\n        stock: state.stock,\r\n        favStocks: state.firestore.ordered.favStocks,\r\n        favStockPrices: state.favStockPrices\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editFund: (fund) => dispatch(editFund(fund)),\r\n        getStock: (symbol) => dispatch(getStock(symbol)),\r\n        getStocks: (symbols) => dispatch(getStockPrices(symbols)),\r\n        newStock: (symbol) => dispatch(newStock(symbol)),\r\n        deleteStocks: (symbolIDs) => dispatch(deleteStocks(symbolIDs)),\r\n        // updateStock: (stock) => dispatch(updateStock(stock))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\") {\r\n            return [\r\n                {\r\n                    collection: 'funds',\r\n                    storeAs: 'funds'\r\n                }, {\r\n                    collection: 'stocks',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'favoriteStocks'}],\r\n                    storeAs: 'favStocks'\r\n                }\r\n            ]\r\n        } else {\r\n            return [{collection: 'funds', storeAs: 'funds'}]\r\n        }\r\n    })\r\n)(Financials)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {resetPassword} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass reset extends Component {\r\n    state ={\r\n        email:'',\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.resetPassword(this.state.email);\r\n        this.props.history.push('/SignIn');\r\n        //firebase.auth().sendPasswordResetEmail(this.state.email);\r\n    }\r\n\r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Reset Password</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Reset</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        resetPassword: (email) => dispatch(resetPassword(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reset)\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {deleteMemo} from '../../store/actions/memActions'\r\n\r\n\r\n\r\nconst MemFunc = (props) => {\r\n    //console.log(props);\r\n    const {data} = props;\r\n\r\n   const handleClick = (id) => {\r\n    props.deleting(id);\r\n   }\r\n\r\n\r\n    if(data){\r\n        const MemoArray = data.map (data => {\r\n            return(\r\n                <div className =\"container section project-details\" >\r\n                <div className =\"card z-depth-0\" id ={data.id}>\r\n                    <div className =\"card-content\">\r\n                        <span className =\"card-title\">{data.title}</span>\r\n                        <p>{data.content}</p>\r\n                    </div>\r\n                    <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                        <div>Posted by {data.owner}</div>\r\n                        <div>{moment(data.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={() => {handleClick(data.id)}}>Delete</button>\r\n            </div>\r\n            )\r\n        }\r\n            );\r\n        return(\r\n            <div>\r\n           { MemoArray }\r\n           </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    deleting : (id) => { dispatch(deleteMemo(id)) }\r\n    \r\n    }\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n    // firestoreConnect([\r\n    //     {collection: 'memos'}\r\n    // ])\r\n)(MemFunc)","// export const createMemo = (id) => {\r\n//     return {\r\n//         type : 'CREATE_MEM',\r\n//         id : id,\r\n//     }\r\n\r\n// }\r\n\r\nexport const createMemo = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('memos').add({\r\n            ...mem,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_MEM', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteMemo = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('memos').doc(mem).delete().then(() => {\r\n            dispatch({ type: 'DELTE_MEM_DOC', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_MEM_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {createMemo} from \"../../store/actions/memActions\"\r\nimport MemFunc from \"./memFunc\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass Memos extends Component {\r\n\r\n    state = {\r\n        title : \"\",\r\n        content : \"\",\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.creatememo(this.state);\r\n        this.setState ({\r\n            title : \"\",\r\n            content: \"\"\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    render () {      \r\n        let data = undefined;\r\n//        console.log(\"UID\", this.props.auth.uid);\r\n        if (this.props.memos !== undefined) {\r\n          data = this.props.memos.filter( memo => {\r\n             return this.props.auth.uid === memo.uid\r\n         });\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Create Memos</h5>\r\n                <div id = \"title\" className = \"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type =\"text\" id=\"title\" onChange ={this.handleChange} value={this.state.title}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea  id=\"content\"  className=\"materialize-textarea\" onChange ={this.handleChange} value={this.state.content}></textarea>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n\r\n                <MemFunc data={data} />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        memos : state.firestore.ordered.memos,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        creatememo: (id) => { dispatch(createMemo(id))}\r\n    }\r\n}\r\n\r\n\r\n//export default connect(matchStatetoProps , mapDispatchToProps)(Memos);\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'memos',\r\n                    where: ['uid', '==', props.auth.uid]\r\n                }\r\n            ]\r\n        } else{\r\n            return []\r\n        }\r\n    })\r\n)(Memos)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {closeTicket} from '../../store/actions/msgActions'\r\n\r\nconst MessageList = (props) => {\r\n    console.log(\"retrieving tickets from props\");\r\n\r\n    const {tickets} = props;\r\n    //var tickets = props;\r\n\r\n   const handleClick = (id) => {\r\n    props.closing(id);\r\n   }\r\n\r\n   console.log(tickets);\r\n    if(tickets){\r\n        const TicketArray = tickets.map (tickets => {\r\n            return(\r\n                <div className =\"container section project-details\" >\r\n                <div className =\"card z-depth-0\" id ={tickets.id}>\r\n                    <div className =\"card-content\">\r\n                        <p>{tickets.content}</p>\r\n                    </div>\r\n                    <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                        <div>Opened by {tickets.email}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={() => {handleClick(tickets.id)}}>Close Ticket</button>\r\n            </div>\r\n            )\r\n        });\r\n        return(\r\n            <div>\r\n           { TicketArray }\r\n           </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>No open tickets</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closing : (id) => { dispatch(closeTicket(id)) }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n)(MessageList)","export const createMessage =(newMsg)=>{\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const uid = getState().firebase.auth.uid.toString();\r\n        const profile = getState().firebase.profile;\r\n        var docRef;\r\n    \r\n        docRef = firestore.collection('supportTickets').doc(uid);\r\n\r\n        docRef.get().then((docSnapshot) => {\r\n            if (!docSnapshot.exists) {\r\n                docRef.set({\r\n                    user: profile.firstName,\r\n                    userID: uid\r\n                })\r\n            } \r\n        })\r\n\r\n        docRef.collection(\"userTickets\").add({\r\n            ...newMsg,\r\n            msgTime: new Date(),\r\n            uid: uid,\r\n            email: profile.email\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_TICKET', newMsg });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_TICKET_ERR'}, err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeTicket = (docID) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const uid = getState().firebase.auth.uid.toString();\r\n        firestore.collection('supportTickets').doc(uid).collection(\"userTickets\").doc(docID).delete().then(() => {\r\n            dispatch({ type: 'CLOSE_TICKET', docID });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CLOSE_TICKET_ERR'}, err);\r\n        })\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMessage } from '../../store/actions/msgActions'\r\nimport Axios from 'axios'\r\nimport MessageList from './messageList'\r\nimport './messages.css'\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        content: \"\",\r\n        email: \"\"\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n    handleClose = (event) => {\r\n        event.preventDefault();\r\n        this.props.closeThread(this.props.auth.uid);\r\n    }\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.createMessage(this.state);\r\n        Axios.post('https://us-central1-college-capital-ed06f.cloudfunctions.net/submit', this.state).catch(error => {\r\n            console.log(error);\r\n        })\r\n        this.setState ({\r\n            content: '',\r\n            email: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        this.state.email = auth.email;\r\n\r\n        console.log(this.props);\r\n       console.log(this.props.supportTickets);\r\n       var supportTickets;\r\n       if (this.props.supportTickets != undefined) {\r\n        supportTickets = this.props.supportTickets;\r\n       }\r\n       console.log(supportTickets);\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                    <h5 className =\"grey-text text-darken-3\">Message Support</h5>\r\n                    <div className = \"input-field\">\r\n                        <label htmlFor=\"content\">Enter Message Here</label>\r\n                        <input type =\"text\" value={this.state.content} id=\"content\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className =\"input-field\">\r\n                        <button className = \"btn green lighten-1 z-depth-0\">Send New Ticket</button>\r\n                    </div>\r\n                </form> \r\n                {this.props.supportTickets != null\r\n                        ?\r\n                        <MessageList tickets = {supportTickets} />\r\n                        :\r\n                        console.log(\"not rendering\" )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        supportTickets: state.firestore.ordered.supportTickets,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createMessage: (msg) => { dispatch(createMessage(msg))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        //console.log(props.auth.uid + \"3\");\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'supportTickets',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{ collection: 'userTickets' }],\r\n                    storeAs: \"supportTickets\"\r\n                }\r\n            ]\r\n        } else {\r\n            return [];\r\n        }\r\n    })\r\n)(Messages)","/*\r\nCredit to Danny Pule\r\nSource: https://medium.com/@danny.pule/export-json-to-csv-file-using-javascript-a0b7bc5b00d2\r\n */\r\n\r\n\r\nfunction convertToCSV(objArray) {\r\n    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    var str = '';\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var line = '';\r\n        for (var index in array[i]) {\r\n            if (line != '') line += ','\r\n\r\n            line += JSON.stringify(array[i][index]);\r\n        }\r\n\r\n        str += line + '\\r\\n';\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction exportTransactionsToCSV(headers, items, fileTitle) {\r\n    if (headers) {\r\n        items.unshift(headers);\r\n    }\r\n\r\n    // Convert Object to JSON\r\n    var jsonObject = JSON.stringify(items);\r\n\r\n    var csv = convertToCSV(jsonObject);\r\n\r\n    var exportedFilenmae = fileTitle + '.csv' || 'export.csv';\r\n\r\n    var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n        navigator.msSaveBlob(blob, exportedFilenmae);\r\n    } else {\r\n        var link = document.createElement(\"a\");\r\n        if (link.download !== undefined) { // feature detection\r\n            // Browsers that support HTML5 download attribute\r\n            var url = URL.createObjectURL(blob);\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"download\", exportedFilenmae);\r\n            link.style.visibility = 'hidden';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatTransactions(transactions) {\r\n    let result = [];\r\n    for (let k in transactions){\r\n        if (transactions[k] instanceof Object){\r\n            result.push({\"Transaction Date\":transactions[k].transactionDate,\r\n                \"Merchant\":transactions[k].merchant,\r\n                \"Amount\":transactions[k].amount})\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport function exportJSON(transactions) {\r\n    let dataStr = JSON.stringify(formatTransactions(transactions));\r\n    delete dataStr['createdAt'];\r\n    let dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n\r\n    let exportFileDefaultName = 'transactions-' + date + '.json';\r\n\r\n    let linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', exportFileDefaultName);\r\n    linkElement.click();\r\n}\r\n\r\nexport function exportCSV(transactions) {\r\n    let formattedTransactions = formatTransactions(transactions);\r\n    let headers = Object.keys(formattedTransactions[0]);\r\n    //let transactions = JSON.parse(JSON.stringify(this.props.transactions));\r\n\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    let exportFileName = 'transactions-' + date;\r\n\r\n    exportTransactionsToCSV(headers, formattedTransactions, exportFileName)\r\n}\r\n\r\n\r\nexport default {exportCSV, exportJSON};","import {withRouter} from \"react-router-dom\";\r\n\r\nexport const createTransaction = (transaction, history) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n        //check if user's collection has been created\r\n        let transactionDocRef = firestore.collection(\"transactions\").doc(userId);\r\n\r\n        let dateParts = transaction.transactionDate.split(\"-\"); // yyyy-mm-dd\r\n        transaction['transactionDate'] = dateParts[1] + '/' + dateParts[2] + '/' + dateParts[0];\r\n\r\n        // create record in userTransactions\r\n        transactionDocRef.get().then(function (doc) {\r\n            if (!doc.exists) {\r\n                transactionDocRef.set({\r\n                    owner: profile.firstName + ' ' + profile.lastName\r\n                })\r\n            }\r\n\r\n            transactionDocRef = transactionDocRef.collection('userTransactions');\r\n\r\n            transactionDocRef.add({\r\n                amount: transaction.amount,\r\n                merchant: transaction.merchant,\r\n                transactionCategory: transaction.transactionCategory,\r\n                transactionDate: transaction.transactionDate,\r\n                financialAccounts: [{\r\n                    account: transaction.financialAcct,\r\n                    percentage: 100\r\n                }],\r\n                createdAt: new Date(),\r\n                editedAt: new Date()\r\n            }).then(() => {\r\n                dispatch({type: 'CREATE_FUND', transaction});\r\n                //alert(\"Transaction Created\");\r\n            }).catch((err) => {\r\n                dispatch({type: 'CREATE_FUND_ERR'}, err);\r\n                alert(\"Create transaction failed.\\n\" + err.message);\r\n            })\r\n        }).then((response) => {\r\n            history.push('/transactions')\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n\r\n        // update financial account balance\r\n\r\n        let fundDocRef = firestore.collection(\"funds\").doc(transaction.financialAcct);\r\n\r\n        fundDocRef.update({\r\n            balance: transaction.acctBalance - transaction.amount\r\n        }).catch(function (error) {\r\n            console.log(\"Error updating document:\", error);\r\n        });\r\n\r\n\r\n        // update running total of category, generate alert if necesarry\r\n        let catRef = firestore.collection(\"transactions\").doc(userId).collection(\"customCategories\");\r\n        catRef.get().then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().category == transaction.transactionCategory) {\r\n                    let currentTotal = doc.data().spendingTotal;\r\n                    var newTotal;\r\n                    if (currentTotal !== undefined) {\r\n                        newTotal = parseInt(currentTotal) + parseInt(transaction.amount);\r\n                    } else {\r\n                        newTotal = parseInt(transaction.amount);\r\n                    }\r\n                    doc.ref.update({\r\n                        spendingTotal: newTotal\r\n                    });\r\n                    if (newTotal > parseInt(doc.data().limit)) {\r\n                        let alertRef = firestore\r\n                                        .collection(\"alerts\")\r\n                                        .doc(userId);\r\n                        alertRef.get().then((docSnapshot) => {\r\n                            if (!docSnapshot.exists) {\r\n                                alertRef.set({\r\n                                    userID: userId\r\n                                })\r\n                            } \r\n                        });\r\n                        alertRef.collection(\"userAlerts\").add({\r\n                            category: transaction.transactionCategory,\r\n                            amount: transaction.amount,\r\n                            limit: parseInt(doc.data().limit),\r\n                            catSpent: newTotal,\r\n                            alertType: \"CATEGORY SPENDING ALERT\"\r\n                        })\r\n                    }\r\n                } \r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateTransaction = (transactionToUpdate) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        let transactionDocRef = firestore\r\n            .collection(\"transactions\")\r\n            .doc(userId)\r\n            .collection('userTransactions')\r\n            .doc(transactionToUpdate.id);\r\n\r\n        let transactionUpdate = {};\r\n\r\n        transactionUpdate[transactionToUpdate.dataField] = transactionToUpdate.newValue;\r\n        transactionUpdate['editedAt'] = new Date();\r\n\r\n        if (transactionToUpdate.dataField === 'financialAcct') {\r\n            let originalAcct = '';\r\n            let transactionAmount = 0;\r\n\r\n            transactionDocRef.get().then(function (doc) {\r\n                originalAcct = doc.data().financialAcct;\r\n                transactionAmount = parseFloat(doc.data().amount);\r\n            }).then(() => {\r\n                // update original account\r\n                let originalAcctDocRef = firestore\r\n                    .collection('funds')\r\n                    .doc(originalAcct);\r\n\r\n                let originalAcctBalance = 0;\r\n\r\n                originalAcctDocRef.get().then(function (doc) {\r\n                    originalAcctBalance = parseFloat(doc.data().balance)\r\n                }).then(() => {\r\n                    originalAcctDocRef.update({\r\n                        balance: originalAcctBalance + transactionAmount\r\n                    });\r\n                });\r\n\r\n\r\n            }).then(() => {\r\n                // update new account\r\n\r\n                let newAcctDocRef = firestore\r\n                    .collection('funds')\r\n                    .doc(transactionToUpdate.newValue);\r\n\r\n                let newAcctBalance = 0;\r\n\r\n                newAcctDocRef.get().then(function (doc) {\r\n                    newAcctBalance = parseFloat(doc.data().balance)\r\n                }).then(() => {\r\n                    newAcctDocRef.update({\r\n                        balance: newAcctBalance - transactionAmount\r\n                    });\r\n                });\r\n            }).then(() => {\r\n                transactionDocRef.update(transactionUpdate)\r\n                    .catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    });\r\n            })\r\n        } else if (transactionToUpdate.dataField === 'amount') {\r\n            let originalAmount = 0;\r\n            let financialAccounts;\r\n            let cat = '';\r\n\r\n            // get original amount and account and category\r\n            transactionDocRef.get().then(function (doc) {\r\n                originalAmount = parseFloat(doc.data().amount);\r\n                financialAccounts = doc.data().financialAccounts;\r\n                cat = doc.data().transactionCategory;\r\n            }).then(() => {\r\n                // proceed to update transaction\r\n                transactionDocRef.update(transactionUpdate)\r\n                    .catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    });\r\n\r\n                financialAccounts.forEach(account => {\r\n                    console.log(account)\r\n                    // update fund account\r\n                    let fundDocRef = firestore\r\n                        .collection('funds')\r\n                        .doc(account.account);\r\n\r\n                    let fundBalance = 0;\r\n\r\n                    fundDocRef.get().then(function (doc) {\r\n                        fundBalance = parseFloat(doc.data().balance)\r\n                    }).then(() => {\r\n                        fundDocRef.update({\r\n                            balance: fundBalance + (originalAmount - transactionToUpdate.newValue) * account.percentage / 100\r\n                        })\r\n                    })\r\n                })\r\n            }).then(() => {\r\n                // Update category total\r\n                let catRef = firestore.collection(\"transactions\").doc(userId).collection(\"customCategories\");\r\n                catRef.get().then(function(querySnapshot) {\r\n                    querySnapshot.forEach(function(doc) {\r\n                        if(doc.data().category == cat) {\r\n                            //original amount\r\n                            //transactionToUpdate.newValue\r\n                            let currentTotal = doc.data().spendingTotal;\r\n                            let newTotal = parseInt(currentTotal) - originalAmount;\r\n                            newTotal += transactionToUpdate.newValue;\r\n                            doc.ref.update({\r\n                                spendingTotal: newTotal\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            });\r\n\r\n        } else if (transactionToUpdate.dataField === 'transactionCategory') {\r\n             // get original amount and category\r\n             console.log(\"UPDATING CATEGORY\");\r\n             let originalAmount = 0;\r\n             let cat = '';\r\n             transactionDocRef.get().then(function (doc) {\r\n                originalAmount = parseFloat(doc.data().amount);\r\n                cat = doc.data().transactionCategory;\r\n            }).then(() => {\r\n                //Update the transaction\r\n                transactionDocRef.update(transactionUpdate)\r\n                    .catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    });\r\n            }).then(() => {\r\n                //Update old category spending total\r\n                if (cat != transactionToUpdate.newValue) {\r\n                    let catRef = firestore.collection(\"transactions\").doc(userId).collection(\"customCategories\");\r\n                    catRef.get().then(function(querySnapshot) {\r\n                        querySnapshot.forEach(function(doc) {\r\n                            if(doc.data().category == cat) {\r\n                                let currentTotal = doc.data().spendingTotal;\r\n                                let newTotal = parseInt(currentTotal) - originalAmount;\r\n                                doc.ref.update({\r\n                                    spendingTotal: newTotal\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }).then(() => {\r\n                //Update new category spending total\r\n                if (cat != transactionToUpdate.newValue) {\r\n                    let catRef = firestore.collection(\"transactions\").doc(userId).collection(\"customCategories\");\r\n                    catRef.get().then(function(querySnapshot) {\r\n                        querySnapshot.forEach(function(doc) {\r\n                            if(doc.data().category == transactionToUpdate.newValue) {\r\n                                let currentTotal = doc.data().spendingTotal;\r\n                                let newTotal = parseInt(currentTotal) + originalAmount;\r\n                                doc.ref.update({\r\n                                    spendingTotal: newTotal\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            console.log(\"UPDATING ELSE\");\r\n            console.log(\"field to update\" + transactionToUpdate.dataField);\r\n            transactionDocRef.update(transactionUpdate)\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteTransactions = (transactions) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        let docRef = firestore\r\n            .collection(\"transactions\")\r\n            .doc(userId)\r\n            .collection('userTransactions');\r\n\r\n        let amount, financialAccounts, cat;\r\n\r\n        transactions.forEach(transaction => {\r\n            docRef.doc(transaction).get().then(function (doc) {\r\n                amount = parseFloat(doc.data().amount);\r\n                financialAccounts = doc.data().financialAccounts;\r\n                cat = doc.data().transactionCategory;\r\n            }).then(() => {\r\n                docRef.doc(transaction).delete()\r\n                    .then(() => {\r\n                        financialAccounts.forEach(account => {\r\n                            // proceed to update fund\r\n                            let fundDocRef = firestore\r\n                                .collection('funds')\r\n                                .doc(account.account);\r\n\r\n                            let fundBalance;\r\n\r\n                            fundDocRef.get().then(function (doc) {\r\n                                fundBalance = parseFloat(doc.data().balance)\r\n                            }).then(() => {\r\n                                fundDocRef.update({\r\n                                    balance: fundBalance + amount * account.percentage / 100\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                    .then(() => {\r\n                        //update the category total\r\n                        let catRef = firestore.collection(\"transactions\").doc(userId).collection(\"customCategories\");\r\n                        catRef.get().then(function(querySnapshot) {\r\n                            querySnapshot.forEach(function(doc) {\r\n                                if(doc.data().category == cat) {\r\n                                    let currentTotal = doc.data().spendingTotal;\r\n                                    let newTotal = parseInt(currentTotal) - amount;\r\n                                    doc.ref.update({\r\n                                        spendingTotal: newTotal\r\n                                    })\r\n                                }\r\n                            })\r\n                        })\r\n                    })\r\n            })\r\n        })\r\n    }\r\n};\r\n\r\nexport const newCustomCategory = (category, spendingLimit) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n\r\n        //check if user's collection has been created\r\n        let docRef = firestore.collection(\"transactions\").doc(userId);\r\n\r\n        docRef.get().then(function (doc) {\r\n            if (!doc.exists) {\r\n                docRef.set({\r\n                    owner: profile.firstName + ' ' + profile.lastName // initialize transaction document\r\n                })\r\n            }\r\n\r\n            docRef = docRef.collection('customCategories');\r\n\r\n            docRef.add({\r\n                category: category,\r\n                createdAt: new Date(),\r\n                editedAt: new Date(),\r\n                limit: spendingLimit\r\n            })\r\n\r\n\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateCustomCategory = (categoryToUpdate) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        let docRef = firestore\r\n            .collection(\"transactions\")\r\n            .doc(userId)\r\n            .collection('customCategories')\r\n            .doc(categoryToUpdate.id);\r\n\r\n        let categoryUpdate = {};\r\n\r\n        categoryUpdate['category'] = categoryUpdate.value;\r\n        categoryUpdate['editedAt'] = new Date();\r\n\r\n        docRef.update(categoryUpdate)\r\n            .catch(function (error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n    }\r\n};\r\n\r\nexport const deleteCustomCategories = (category) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        let catRef = firestore.collection(\"transactions\").doc(userId).collection(\"customCategories\");\r\n        console.log(\"------------------------ RUNNING -------------------------\");\r\n        catRef.get().then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().category == category) {\r\n                    doc.ref.delete();\r\n                }\r\n            })\r\n        })\r\n    }\r\n};\r\n\r\nexport const largeTransactionAlert = (transaction) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        var largeTransactionLimit;\r\n        const uid = getState().firebase.auth.uid;\r\n        let fundBalance = undefined;\r\n\r\n        let docRef = firestore\r\n            .collection(\"funds\")\r\n            .doc(transaction.financialAcct);\r\n\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                largeTransactionLimit = parseInt(doc.data().largeTransactionLimit);\r\n                fundBalance = doc.data().balance;\r\n                console.log(\"large transaction limit first: \" + largeTransactionLimit);\r\n                if (parseInt(transaction.amount) >= parseInt(largeTransactionLimit)) {\r\n                    let alertRef = firestore\r\n                                    .collection(\"alerts\")\r\n                                    .doc(uid);\r\n                    alertRef.get().then((docSnapshot) => {\r\n                        if (!docSnapshot.exists) {\r\n                            alertRef.set({\r\n                                userID: uid\r\n                            })\r\n                        } \r\n                    });\r\n                    alertRef.collection(\"userAlerts\").add({\r\n                        fund: transaction.nickName,\r\n                        amount: transaction.amount,\r\n                        limit: largeTransactionLimit,\r\n                        fundBalance: fundBalance,\r\n                        alertType: \"LARGE TRANSACTION\"\r\n                    })\r\n                }\r\n            } else {\r\n                console.log(\"error retrieving doc in largeTransactionAlert\");\r\n            }\r\n        }).catch(function(err) {\r\n            console.log(\"Error getting doc:\", err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const lowBalanceAlert = (transaction) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        let lowBalance = undefined;\r\n        let fundBalance = undefined;\r\n        const uid = getState().firebase.auth.uid;\r\n\r\n        let docRef = firestore\r\n            .collection(\"funds\")\r\n            .doc(transaction.financialAcct);\r\n\r\n        docRef.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                lowBalance = doc.data().lowBalanceLimit;\r\n                fundBalance = doc.data().balance;\r\n                console.log(\"Low balance: \" + lowBalance);\r\n                console.log(\"FundBalance: \" + fundBalance);\r\n                if (parseInt(fundBalance) <= parseInt(lowBalance)) {\r\n                    let alertRef = firestore\r\n                                    .collection(\"alerts\")\r\n                                    .doc(uid);\r\n                    alertRef.get().then((docSnapshot) => {\r\n                        if (!docSnapshot.exists) {\r\n                            alertRef.set({\r\n                                userID: uid\r\n                            })\r\n                        } \r\n                    });\r\n                    alertRef.collection(\"userAlerts\").add({\r\n                        fund: transaction.nickName,\r\n                        amount: transaction.amount,\r\n                        limit: lowBalance,\r\n                        fundBalance: fundBalance,\r\n                        alertType: \"LOW BALANCE\"\r\n                    })\r\n                }\r\n            } else {\r\n                console.log(\"error retrieving doc in lowBalanceAlert\");\r\n            }\r\n        }).catch(function(err) {\r\n            console.log(\"Error getting doc:\", err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const newSplitAccount = (newAccounts, transactionToUpdate) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n\r\n        let transactionDocRef = firestore.collection(\"transactions\").doc(userId).collection(\"userTransactions\").doc(transactionToUpdate.id);\r\n\r\n        let transactionDoc, financialAccounts;\r\n\r\n        transactionDocRef.get().then(function (doc) {\r\n            transactionDoc = doc.data()\r\n        }).then(() => {\r\n            // restore previous split accounts' balances\r\n            financialAccounts = transactionDoc.financialAccounts\r\n\r\n            let promiseArr = financialAccounts.map(function (account) {\r\n                let accountRef = firestore.collection(\"funds\").doc(account.account)\r\n\r\n                return accountRef.get().then(function (doc) {\r\n                    let update = {\r\n                        balance: doc.data().balance + (account.percentage / 100) * transactionToUpdate.amount\r\n                    }\r\n\r\n                    console.log(newAccounts)\r\n\r\n                    console.log(update)\r\n\r\n                    return accountRef.update(update)\r\n                })\r\n            })\r\n\r\n            Promise.all(promiseArr).then(() => {\r\n                // write new split accounts to transaction\r\n                newAccounts = newAccounts.map(account => (\r\n                        {\r\n                            account: account.splitAccountID,\r\n                            percentage: account.percentage\r\n                        }\r\n                    )\r\n                )\r\n                transactionDocRef.update({\r\n                    financialAccounts: newAccounts\r\n                })\r\n\r\n                // update new accounts' balances\r\n\r\n                newAccounts.forEach(account => {\r\n                    console.log(account)\r\n                    let accountRef = firestore.collection(\"funds\").doc(account.account)\r\n\r\n                    accountRef.get().then(function (doc) {\r\n                        console.log(doc.data())\r\n                        let update = {\r\n                            balance: doc.data().balance - (account.percentage / 100) * transactionToUpdate.amount\r\n                        }\r\n\r\n                        console.log(update)\r\n\r\n                        accountRef.update(update)\r\n                    })\r\n                })\r\n            })\r\n        }).catch((err) => {\r\n            dispatch('UPDATE_SPLIT_ACCOUNT_ERR', err)\r\n        })\r\n    }\r\n}","export const addpayment = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('payments').add({\r\n            ...mem,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PAYMENT', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PAYMENT_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const deletePayment = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('payments').doc(mem).delete().then(() => {\r\n            dispatch({ type: 'DELTE_PAYMENT_DOC', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'DELETE_PAYMENT_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link} from \"react-router-dom\";\r\nimport './Transactions.css'\r\nimport materialize from 'materialize-css'\r\nimport {exportCSV, exportJSON} from \"./exportTransactions\";\r\nimport {updateTransaction, deleteTransactions, newSplitAccount} from \"../../store/actions/transactionActions\";\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit'\r\nimport bootstrapTable from 'react-bootstrap-table-next/lib/src/bootstrap-table';\r\nimport propsResolver from 'react-bootstrap-table-next/lib/src/props-resolver';\r\nimport Select from \"react-select\";\r\nimport {createTransaction} from \"../../store/actions/transactionActions\"\r\nimport {addpayment} from '../../store/actions/paymentAction';\r\nimport {deletePayment} from '../../store/actions/paymentAction';\r\n// Basic Table Module\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\n// Cell Editing Module (Doesnt work for some reason lol)\r\nimport cellEditFactory, {Type} from 'react-bootstrap-table2-editor';\r\n\r\n// Pagination Module\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nconst { SearchBar, ClearSearchButton } = Search;\r\nconst transactionCategory = [\r\n    {value: \"Dining\", label: \"Dining\"},\r\n    {value: \"Travel\", label: \"Travel\"},\r\n    {value: \"Tuition\", label: \"Tuition\"},\r\n    {value: \"Grocery\", label: \"Grocery\"},\r\n    {value: \"Bar & Coffee Shop\", label: \"Bar & Coffee Shop\"},\r\n    {value: \"Fee\", label: \"Fee\"}];\r\n\r\n// Page pagination options\r\nconst paginationOption = {\r\n    sizePerPage: 10,\r\n    hideSizePerPage: true,\r\n    withFirstAndLast: false,\r\n    hidePageListOnlyOnePage: true\r\n};\r\n\r\n// Set default sorted state to descending by transaction date\r\nconst defaultSorted = [{\r\n    dataField: 'transactionDate',\r\n    order: 'desc'\r\n}];\r\n\r\nconst cellEdit = {\r\n    mode: 'click',\r\n    blurToSave: true\r\n};\r\n\r\nclass Transactions extends Component {\r\n    // For Modal\r\n    constructor(props) {\r\n        \t\r\n            // For Modal\r\n        \t\r\n                super(props);\r\n        \t\r\n        \t\r\n                this.state= {\r\n        \t\r\n                    splitAccounts: []\r\n        \t\r\n                }\r\n        \t\r\n            }\r\n    componentDidMount() {\r\n        const options = {\r\n            inDuration: 250,\r\n            outDuration: 250,\r\n            opacity: 0.5,\r\n            dismissible: true,\r\n            startingTop: \"4%\",\r\n            endingTop: \"10%\"\r\n        };\r\n        materialize.Modal.init(this.deleteModal, options);\r\n        materialize.Modal.init(this.exportModal, options);\r\n        materialize.Modal.init(this.splitModal, options)\r\n        materialize.Modal.init(this.newSplitAccountModal, options)\r\n\r\n        this.exportForm = React.createRef()\r\n        // ----------- Haiders code --------\r\n        var l;\r\n        console.log(this.props);\r\n        var today = new Date();\r\n        if ((today.getMonth() + 1) < 10) {\r\n            var todayDate = today.getFullYear() + \"-\" + \"0\" +  (today.getMonth() + 1) + \"-\" + today.getDate();\r\n        } else {\r\n            var todayDate = today.getFullYear() + \"-\" +  (today.getMonth() + 1) + \"-\" + today.getDate();\r\n        }\r\n        var comapare_today = todayDate.split(\"-\");\r\n        console.log(comapare_today[0]);\r\n        console.log(comapare_today[1]);\r\n        console.log(comapare_today[2]);\r\n        comapare_today = comapare_today[2] + comapare_today[1] + comapare_today[0];\r\n        console.log(parseInt(comapare_today));\r\n        if (this.props.payments) {\r\n            for (var i = 0; i < this.props.payments.length; i++) {\r\n                //Change the date to less then equal\r\n                var comapare_payment = this.props.payments[i].date.split(\"-\");\r\n                console.log(comapare_payment[0]);\r\n                console.log(comapare_payment[1]);\r\n                console.log(comapare_payment[2]);\r\n                comapare_payment = comapare_payment[2] + comapare_payment[1] + comapare_payment[0];\r\n                console.log(parseInt(comapare_payment));\r\n                console.log(\"Here\");\r\n                if (todayDate === this.props.payments[i].date || parseInt(comapare_today) > parseInt(comapare_payment) ) {\r\n                    console.log(this.props.payments[i].date);\r\n                    const obj = {\r\n                        amount: this.props.payments[i].amount,\r\n                        merchant: this.props.payments[i].title,\r\n                        id: this.props.payments[i].id,\r\n                        transactionDate: todayDate,\r\n                        financialAcct: this.props.payments[i].account,\r\n                        transactionCategory: this.props.payments[i].category,\r\n                        \r\n                    };\r\n                    console.log(\"Here wanting to create a trans\");\r\n                    this.props.deleting(this.props.payments[i].id);\r\n                    this.props.createTransaction(obj,this.props.history);\r\n                   if ((today.getMonth() + 1) < 10) {                       \r\n                    var todayDate1 = today.getFullYear() + \"-\" + \"0\" +  (today.getMonth() + 2) + \"-\" + today.getDate();\r\n                } else {\r\n                    var todayDate1 = today.getFullYear() + \"-\" +  (today.getMonth() + 2) + \"-\" + today.getDate();\r\n                }\r\n                \r\n                 l = {\r\n                    amount: this.props.payments[i].amount,\r\n                    account: this.props.payments[i].account,\r\n                    category: this.props.payments[i].category,\r\n                    date: todayDate1 ,\r\n                    title: this.props.payments[i].title,\r\n                };\r\n                console.log(l.date);\r\n                console.log(this.props.payments[i]);\r\n                console.log(\"i\", i);\r\n                this.props.addpayment(l);\r\n                }\r\n                // console.log(\"In the array\", f.date);\r\n                // console.log(\"TodayDate: \", todayDate);\r\n            }\r\n        }\r\n        //______________________________Haiders Code\r\n    }\r\n\r\n    handleExport = (e) => {\r\n        // performs form validation\r\n        if (!this.exportForm.current.reportValidity())\r\n            return;\r\n\r\n        e.preventDefault();\r\n\r\n        let transactionsToExport = [];\r\n\r\n        if (e.target.id === 'export-all')\r\n            transactionsToExport = this.props.transactions;\r\n        else if (e.target.id === 'export-selected') {\r\n            if (this.state.rowsSelected === undefined) {\r\n                alert(\"Oops! No row selected to export!\");\r\n                return;\r\n            }\r\n\r\n            this.state.rowsSelected.forEach(row => {\r\n                let transaction = this.props.transactions.find(t => t.id === row);\r\n\r\n                transactionsToExport.push(transaction)\r\n            })\r\n        }\r\n\r\n        switch (this.state.exportOption) {\r\n            case 'json':\r\n                exportJSON(transactionsToExport);\r\n                break;\r\n            case 'csv':\r\n                exportCSV(transactionsToExport);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        materialize.Modal.getInstance(this.exportModal).close()\r\n\r\n    };\r\n\r\n    handleExportOptionChange = (e) => {\r\n        this.setState({\r\n            exportOption: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSelectRow(transactionID, isSelect) {\r\n        if (this.state === null || this.state.rowsSelected === undefined) {\r\n            let rowsSelected = [transactionID];\r\n\r\n            this.setState({\r\n                rowsSelected: rowsSelected\r\n            })\r\n        } else {\r\n            // avoid directly modify array in state\r\n            let rowsSelected = this.state.rowsSelected;\r\n\r\n            if (isSelect) //on select\r\n                rowsSelected.push(transactionID);\r\n            else { //on deselect\r\n                let indexToRemove = rowsSelected.indexOf(transactionID);\r\n\r\n                if (indexToRemove > -1)\r\n                    rowsSelected.splice(indexToRemove, 1)\r\n            }\r\n\r\n            this.setState({\r\n                rowsSelected: rowsSelected\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteTransactions = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state === null || this.state.rowsSelected === undefined || this.state.rowsSelected.length === 0)\r\n            alert(\"Oops! No row selected to delete!\");\r\n        else\r\n            this.props.deleteTransactions(this.state.rowsSelected);\r\n    };\r\n\r\n    onTableChange = (type, newState) => {\r\n        if (type === \"cellEdit\") {\r\n            let transactionToUpdate = {\r\n                \"id\": newState.cellEdit.rowId,\r\n                \"dataField\": newState.cellEdit.dataField,\r\n                \"newValue\": newState.cellEdit.newValue\r\n            };\r\n\r\n            if (transactionToUpdate['dataField'] === 'transactionDate') { // format date before entering database\r\n                let dateParts = transactionToUpdate['newValue'].split(\"-\"); // yyyy-mm-dd\r\n                transactionToUpdate['newValue'] = dateParts[1] + '/' + dateParts[2] + '/' + dateParts[0];\r\n            }\r\n\r\n            this.props.updateTransaction(transactionToUpdate);\r\n        }\r\n    };\r\n\r\n    accountFormatter = (accounts) => {\r\n        if (this.props.userFunds === undefined)\r\n            return ''\r\n\r\n        let funds = []\r\n\r\n        accounts.forEach(account => {\r\n            let targetFund = this.props.userFunds.find(fund => fund.id === account.account);\r\n\r\n            funds.push(<ul key={targetFund.id}>{targetFund.nickname} {targetFund.fundType}, {account.percentage}%</ul>)\r\n        })\r\n\r\n\r\n        return (\r\n            <div>\r\n                {funds}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    getAccountOptions = () => {\r\n        let userFunds = [];\r\n        this.props.userFunds.forEach(userFund => {\r\n            let formattedFund = {};\r\n            let label = userFund.nickname + ' ' + userFund.fundType + ', Balance: $' + userFund.balance;\r\n            let value = userFund.id;\r\n            formattedFund['label'] = label;\r\n            formattedFund['value'] = value;\r\n\r\n            userFunds.push(formattedFund);\r\n        });\r\n\r\n        return userFunds\r\n    }\r\n\r\n    categoryFormatter = (cell) => {\r\n        if (this.props.userCategories === undefined)\r\n            return ''\r\n        let targetCategory = this.props.userCategories.find(category => category.category === cell);\r\n        console.log(\"targetCategory: \" + targetCategory);\r\n        return (<span>{targetCategory.category}</span>)\r\n    };\r\n\r\n    getCategoryOptions = () => {\r\n        let userCategories = [];\r\n        this.props.userCategories.forEach(userCategory => {\r\n            let formattedCategory = {};\r\n            let label = userCategory.category;\r\n            let value = userCategory.category;\r\n            formattedCategory['label'] = label;\r\n            formattedCategory['value'] = value;\r\n\r\n            userCategories.push(formattedCategory);\r\n        });\r\n\r\n        return userCategories\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (selectorID, e) => {\r\n        let newState;\r\n\r\n        if (selectorID === 'splitAccount'){\r\n            newState = {\r\n                splitAccountID: e.value,\r\n                splitAccount: e.label\r\n            }\r\n        }else {\r\n            newState = {\r\n                [selectorID]: e.value\r\n            }\r\n        }\r\n\r\n\r\n        this.setState(newState)\r\n    }\r\n\r\n    handleNewSplitAccount = (e) => {\r\n        e.preventDefault()\r\n\r\n        let unallocatedPercentage = 100\r\n\r\n        this.state.splitAccounts.forEach(account => {\r\n            unallocatedPercentage -= account.percentage\r\n        })\r\n\r\n        if (unallocatedPercentage - this.state.splitPercentage < 0){\r\n            alert(\"The total percentage must be 100%!\")\r\n        }else {\r\n            let splitAccounts = this.state.splitAccounts\r\n            splitAccounts.push(\r\n                {\r\n                    splitAccountID: this.state.splitAccountID,\r\n                    splitAccount: this.state.splitAccount,\r\n                    percentage: this.state.splitPercentage\r\n                }\r\n            )\r\n\r\n            this.setState({splitAccounts: splitAccounts})\r\n\r\n            materialize.Modal.getInstance(this.newSplitAccountModal).close()\r\n        }\r\n    }\r\n\r\n    clearSplitAccounts = (e) => {\r\n        this.setState({splitAccounts: []})\r\n    }\r\n\r\n    updateSplitAccounts = (e) => {\r\n        e.preventDefault()\r\n\r\n        let unallocatedPercentage = 100\r\n\r\n        this.state.splitAccounts.forEach(account => {\r\n            unallocatedPercentage -= account.percentage\r\n        })\r\n\r\n        if (unallocatedPercentage > 0)\r\n            alert(\"The split percentages must add up to 100%!\")\r\n        else {\r\n            console.log(this.state)\r\n\r\n            let transactionToUpdate = this.props.transactions.find(transaction => transaction.id === this.state.rowsSelected[0])\r\n\r\n            this.props.newSplitAccount(this.state.splitAccounts, transactionToUpdate)\r\n\r\n            materialize.Modal.getInstance(this.splitModal).close()\r\n        }\r\n    }\r\n\r\n    closeModal = (modal) => {\r\n        materialize.Modal.getInstance(modal).close()\r\n    }\r\n\r\n    checkSelectionForSplit = () => {\r\n        if (this.state.rowsSelected.length > 1){\r\n            alert(\"Please only select one transaction before splitting!\")\r\n        } else {\r\n            materialize.Modal.getInstance(this.splitModal).open()\r\n        }\r\n    }\r\n\r\n    // Columns for table, moved here to access class methods\r\n    columns = [{\r\n        dataField: 'id',\r\n        hidden: true\r\n    }, {\r\n        dataField: 'merchant',\r\n        text: 'Merchant',\r\n        sort: true\r\n    }, {\r\n        dataField: 'amount',\r\n        text: 'Amount',\r\n        sort: true,\r\n        sortFunc: (a, b, order) => {\r\n            if (order === 'desc') {\r\n                return a - b;\r\n            } else {\r\n                return b - a;\r\n            }\r\n        },\r\n        type: 'number'\r\n    }, {\r\n        /*\r\n        dataField: 'transactionCategory',\r\n        text: 'Category',\r\n        sort: true,\r\n        editor: {\r\n            type: Type.SELECT,\r\n            options: transactionCategory\r\n        },\r\n        editorClasses: \"browser-default\"\r\n        */\r\n       dataField: 'transactionCategory',\r\n       text: 'Category',\r\n       sort: true,\r\n       formatter: this.categoryFormatter,\r\n       editor: {\r\n           type: Type.SELECT,\r\n           getOptions: (setOptions, {row, column}) => {\r\n               return this.getCategoryOptions()\r\n           }\r\n       },\r\n       editorClasses: \"browser-default\"\r\n    }, {\r\n        dataField: 'financialAccounts',\r\n        text: 'Account',\r\n        sort: true,\r\n        formatter: this.accountFormatter,\r\n        editable:false\r\n    }, {\r\n        dataField: 'transactionDate',\r\n        text: 'Transaction Date',\r\n        sort: true,\r\n        type: 'string',\r\n        editor: {type: Type.DATE}\r\n    }\r\n    ];\r\n\r\n    splitAccountColumns = [\r\n        {\r\n            dataField: 'splitAccountID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'splitAccount',\r\n            text: 'Account',\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: 'percentage',\r\n            text: 'Percentage'\r\n        }\r\n    ]\r\n    render() {\r\n        let fundOptions;\r\n\r\n        if (this.props.userFunds !== undefined){\r\n            fundOptions = this.props.userFunds.map(v => ({\r\n                label: v.fundType + ': ' + v.nickname,\r\n                value: v.id\r\n            }))\r\n        }\r\n\r\n        let unallocatedPercentage = 100\r\n\r\n        this.state.splitAccounts.forEach(account => {\r\n            unallocatedPercentage -= account.percentage\r\n        })\r\n\r\n        return (\r\n            <div className={\"container mt\"}>\r\n                <div className=\"card z-depth-3\">\r\n                    {this.props.transactions != null\r\n                        ?\r\n                        <ToolkitProvider\r\n                            keyField=\"id\"\r\n                            data={this.props.transactions}\r\n                            columns={this.columns}\r\n                            search\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <div>\r\n                                        <SearchBar { ...props.searchProps } />\r\n                                        <ClearSearchButton { ...props.searchProps } />\r\n                                        <BootstrapTable\r\n                                            pagination={paginationFactory(paginationOption)}\r\n                                            selectRow={{\r\n                                                mode: 'checkbox',\r\n                                                //clickToSelect: true,\r\n                                                bgColor: '#68DE11',\r\n                                                selectColumnStyle: {\r\n                                                    backgroundColor: '#68DE11'\r\n                                                },\r\n                                                onSelect: (row, isSelect, rowIndex, e) => {\r\n                                                    this.handleSelectRow(row.id, isSelect)\r\n                                                }\r\n                                                //clickToEdit: true\r\n                                            }}\r\n                                            defaultSorted={defaultSorted}\r\n                                            cellEdit={cellEditFactory(cellEdit)}\r\n                                            noDataIndication=\"No Transactions\"\r\n                                            remote={{cellEdit: true}}\r\n                                            onTableChange={this.onTableChange}\r\n                                            { ...props.baseProps}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </ToolkitProvider>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <Link to={\"/create_transaction\"} className={\"btn green lighten-1 center mt\"}>New Transaction</Link>\r\n                <Link to={\"/categories\"} className={\"btn modal-trigger green lighten-1 ms-5\"}>Manage Categories</Link>\r\n                <button data-target={\"exportModal\"} className={\"btn modal-trigger green lighten-1 ms-5\"}>Export...\r\n                </button>\r\n                <button data-target={\"deleteModal\"} className={\"btn modal-trigger green lighten-1\"}>Delete...</button>\r\n                <button data-target={\"splitModal\"} className={\"btn green lighten-1 ms-5\"} onClick={this.checkSelectionForSplit}>Split...</button>\r\n                <div>\r\n                    <div ref={Modal => {\r\n                        this.deleteModal = Modal;\r\n                    }}\r\n                         id={\"deleteModal\"}\r\n                         className={\"modal\"}>\r\n                        <div className={\"modal-content\"}>\r\n                            <form>\r\n                                <h4 className={\"grey-text text-darken-3\"}>Confirm to delete?</h4>\r\n                                <h6 className={\"black-txt\"}>This operation is irreversible.</h6>\r\n                                <div className={\"form-group\"}>\r\n                                    <button className={\"modal-close btn red lighten-1\"}\r\n                                            onClick={this.handleDeleteTransactions}>Delete\r\n                                    </button>\r\n                                    <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                       style={{\"marginLeft\": \"2%\"}}>\r\n                                        Cancel\r\n                                    </a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div ref={Modal => {\r\n                        this.exportModal = Modal;\r\n                    }}\r\n                         id={\"exportModal\"}\r\n                         className={\"modal\"}>\r\n                        <div className={\"modal-content\"}>\r\n                            <form ref={this.exportForm}>\r\n                                <h4 className={\"grey-text text-darken-3\"}>Export Options</h4>\r\n                                <div>\r\n                                    <label>\r\n                                        <input className={\"with-gap\"} name={\"optionGroup\"} id=\"json\" value=\"json\"\r\n                                               type=\"radio\" onChange={this.handleExportOptionChange} required={true}/>\r\n                                        <span>JSON</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>\r\n                                        <input className={\"with-gap\"} name={\"optionGroup\"} id=\"csv\" value=\"csv\"\r\n                                               onChange={this.handleExportOptionChange} type=\"radio\"/>\r\n                                        <span>CSV</span>\r\n                                    </label>\r\n                                </div>\r\n                                <button id={\"export-all\"} type={\"submit\"} className={\"btn green lighten-1\"}\r\n                                        onClick={this.handleExport}>Export All\r\n                                </button>\r\n                                <button id={\"export-selected\"} className={\"btn green lighten-1 ms-5\"}\r\n                                        onClick={this.handleExport}>Export Selected\r\n                                </button>\r\n                                <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                   style={{\"marginLeft\": \"2%\"}}>\r\n                                    Close\r\n                                </a>\r\n                                <div className={\"form-group\"}>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div ref={Modal => {\r\n                        this.splitModal = Modal;\r\n                    }}\r\n                         id={\"splitModal\"}\r\n                         className={\"modal\"} style={{\"height\": \"60%\", \"width\": \"60%\"}}>\r\n                        <div className={\"modal-content\"} >\r\n                            <BootstrapTable\r\n                                keyField=\"splitAccount\"\r\n                                data={this.state.splitAccounts}\r\n                                columns={this.splitAccountColumns}\r\n                                defaultSorted={defaultSorted}\r\n                                noDataIndication=\"No Account Configured\"\r\n                                remote={{cellEdit: true}}\r\n                                onTableChange={this.onTableChange}\r\n                            />\r\n                        </div>\r\n                        <h6 style={{\"margin\": \"5%\"}}>Unallocated Percentage: {unallocatedPercentage}%</h6>\r\n                        <button className={\"btn green lighten-1 ms-5\"} onClick={this.updateSplitAccounts}>Update</button>\r\n                        <button data-target={\"newSplitAccountModal\"}\r\n                                className={\"btn modal-trigger green lighten-1 ms-5\"} style={{\"margin\": \"10%\"}}>\r\n                            Add Split\r\n                        </button>\r\n                        <a className=\"modal-close btn grey darken-3 white-text\"\r\n                           style={{\"marginLeft\": \"2%\"}} onClick={this.clearSplitAccounts}>\r\n                            Close\r\n                        </a>\r\n                        <div>\r\n                            <div ref={Modal => {\r\n                                this.newSplitAccountModal = Modal;\r\n                            }}\r\n                                 id={\"newSplitAccountModal\"}\r\n                                 className={\"modal\"}>\r\n                                <div className={\"modal-content\"} style={{\"maxHeight\": \"100%\"}}>\r\n                                    <form>\r\n                                        <h4 className={\"grey-text text-darken-3\"}>New Account to Split</h4>\r\n                                        <div className={\"form-group\"}>\r\n                                            <Select\r\n                                                className={\"funds\"}\r\n                                                name={\"funds\"}\r\n                                                onChange={(e) => {this.handleSelectChange(\"splitAccount\", e)}}\r\n                                                options={fundOptions}\r\n                                            />\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'splitPercentage'} required={true} style={{\"marginTop\": \"5%\"}} onChange={this.handleChange}/>\r\n                                                <label htmlFor={'splitPercentage'} style={{\"marginTop\": \"5%\"}}>Percentage</label>\r\n                                            </div>\r\n                                            <button className={\"btn green lighten-1\"}\r\n                                                    onClick={this.handleNewSplitAccount}>\r\n                                                Save\r\n                                            </button>\r\n                                            <a className=\"btn grey darken-3 white-text\"\r\n                                               style={{\"marginLeft\": \"2%\"}} onClick={() => this.closeModal(this.newSplitAccountModal)}>\r\n                                                Cancel\r\n                                            </a>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div ref={Modal => {\r\n                        this.exportModal = Modal;\r\n                    }}\r\n                         id={\"exportModal\"}\r\n                         className={\"modal\"}>\r\n                        <div className={\"modal-content\"}>\r\n                            <form ref={this.exportForm}>\r\n                                <h4 className={\"grey-text text-darken-3\"}>Export Options</h4>\r\n                                <div>\r\n                                    <label>\r\n                                        <input className={\"with-gap\"} name={\"optionGroup\"} id=\"json\" value=\"json\"\r\n                                               type=\"radio\" onChange={this.handleExportOptionChange} required={true}/>\r\n                                        <span>JSON</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>\r\n                                        <input className={\"with-gap\"} name={\"optionGroup\"} id=\"csv\" value=\"csv\"\r\n                                               onChange={this.handleExportOptionChange} type=\"radio\"/>\r\n                                        <span>CSV</span>\r\n                                    </label>\r\n                                </div>\r\n                                <button id={\"export-all\"} type={\"submit\"} className={\"btn green lighten-1\"}\r\n                                        onClick={this.handleExport}>Export All\r\n                                </button>\r\n                                <button id={\"export-selected\"} className={\"btn green lighten-1 ms-5\"}\r\n                                        onClick={this.handleExport}>Export Selected\r\n                                </button>\r\n                                <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                   style={{\"marginLeft\": \"2%\"}}>\r\n                                    Close\r\n                                </a>\r\n                                <div className={\"form-group\"}>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateTransaction: (transactionToUpdate) => dispatch(updateTransaction(transactionToUpdate)),\r\n        deleteTransactions: (transactions) => dispatch(deleteTransactions(transactions)),\r\n        newSplitAccount: (newAccounts, transactionToUpdate) => dispatch(newSplitAccount(newAccounts, transactionToUpdate)),\r\n        deleting : (id) => { dispatch(deletePayment(id)) },\r\n        addpayment: (id) => { dispatch(addpayment(id))},\r\n        createTransaction: (transaction, history) => dispatch(createTransaction(transaction, history))\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactions: state.firestore.ordered.transactions,\r\n        auth: state.firebase.auth,\r\n        userFunds: state.firestore.ordered.userFunds,\r\n        userCategories: state.firestore.ordered.userCategories,\r\n        payments: state.firestore.ordered.payments\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\") {\r\n            return [\r\n                {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'customCategories'}],\r\n                    storeAs: 'userCategories'\r\n                }, {\r\n                    collection: 'funds',\r\n                    where: [\r\n                        ['uid', '==', props.auth.uid]\r\n                    ],\r\n                    storeAs: 'userFunds'\r\n                },\r\n                {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'userTransactions'}],\r\n                    storeAs: 'transactions'\r\n                }\r\n            ]\r\n        } else {\r\n            return []\r\n        }\r\n    })\r\n)(Transactions)","import React, {Component, withRouter} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createTransaction, newCustomCategory, largeTransactionAlert, lowBalanceAlert} from \"../../store/actions/transactionActions\"\r\nimport Select from 'react-select';\r\nimport {Link} from \"react-router-dom\";\r\nimport materialize from \"materialize-css\";\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\n\r\nconst transactionCategory = [\r\n    { value: \"Dining\", label: \"Dining\"},\r\n    { value: \"Travel\", label: \"Travel\"},\r\n    { value: \"Tuition\", label: \"Tuition\"},\r\n    { value: \"Grocery\", label: \"Grocery\"},\r\n    { value: \"Bar & Coffee Shop\", label: \"Bar & Coffee Shop\"},\r\n    { value: \"Fee\", label: \"Fee\"}];\r\n\r\nclass CreateTransaction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const options = {\r\n            inDuration: 250,\r\n            outDuration: 250,\r\n            opacity: 0.5,\r\n            dismissible: true,\r\n            startingTop: \"4%\",\r\n            endingTop: \"10%\"\r\n        };\r\n        materialize.Modal.init(this.newCategoryModal, options);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.transactionCategory === undefined)\r\n            alert(\"Please select a category!\");\r\n        else if (this.state.financialAcct === undefined)\r\n            alert(\"Please select a financial account! If no account is available, please add one in Financials page\");\r\n        else\r\n        if (this.state.fundType === \"Financial Aid\") {\r\n            if (this.state.transactionCategory === \"Tuition\" || this.state.transactionCategory === \"Room & Board\") {\r\n                this.props.createTransaction(this.state, this.props.history);\r\n                this.props.largeTransactionAlert(this.state);\r\n                this.props.lowBalanceAlert(this.state);\r\n            } else {\r\n                alert(\"Financial Aid must go towards Tuition or Room and Board!!\");\r\n            }\r\n        } else {\r\n            this.props.createTransaction(this.state, this.props.history);\r\n            this.props.largeTransactionAlert(this.state);\r\n            this.props.lowBalanceAlert(this.state);\r\n        }\r\n    };\r\n\r\n    handleCategoryChange = (e) => {\r\n        this.setState({\r\n            transactionCategory: e.value\r\n        })\r\n    };\r\n\r\n    handleFinancialAcctChange = (e) => {\r\n        let acctBalance;\r\n        let fundType;\r\n        let nickName;\r\n        // add original account balance to state for fund update\r\n        let targetFund = this.props.userFunds.find(fund => fund.id === e.value)\r\n        acctBalance = targetFund.balance;\r\n        fundType = targetFund.fundType;\r\n        nickName = targetFund.nickname;\r\n        this.setState({\r\n            financialAcct: e.value,\r\n            acctBalance: acctBalance,\r\n            fundType: fundType,\r\n            nickName: nickName\r\n        });\r\n        console.log(this.state)\r\n    };\r\n\r\n    handleNewCustomCategory = (e) => {\r\n        e.preventDefault();\r\n        this.props.newCustomCategory(this.state['new-category'], this.state['category-limit']);\r\n        this.setState({\r\n            'new-category': '',\r\n            'category-limit': ''\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        let userFunds = [];\r\n        let categories = [];\r\n\r\n        if (this.props.userFunds !== undefined) {\r\n            this.props.userFunds.forEach(userFund => {\r\n                let formattedFund = {};\r\n                let label = userFund.nickname + ' ' + userFund.fundType + ', Balance: $' + userFund.balance;\r\n                let value = userFund.id;\r\n                formattedFund['label'] = label;\r\n                formattedFund['value'] = value;\r\n\r\n                userFunds.push(formattedFund);\r\n            })\r\n        } else {\r\n            userFunds = [{value: '', label: 'loading...'}];\r\n        }\r\n\r\n        if (this.props.categories !== undefined) {\r\n            this.props.categories.forEach(categorie => {\r\n                let formattedCategory = {};\r\n                let label = categorie.category;\r\n                let value = categorie.category;\r\n                formattedCategory['label'] = label;\r\n                formattedCategory['value'] = value;\r\n\r\n                categories.push(formattedCategory);\r\n            })\r\n        } else {\r\n            categories = [{value: '', label: 'loading...'}];\r\n        }\r\n\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                    <h5 className={\"grey-text text-darken-3\"}>Create New Transaction</h5>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'amount'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'amount'}>Amount</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"date\"} id={'transactionDate'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'transactionDate'}>Date</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'merchant'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'merchant'}>Merchant</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"transactionCategory\"}\r\n                            name={\"transactionCategory\"}\r\n                            placeholder={\"Category\"}\r\n                            options={categories}\r\n                            onChange={this.handleCategoryChange}\r\n                        />\r\n                    </div>\r\n                    <button data-target={\"newCategoryModal\"} className={\"btn modal-trigger green lighten-1\"}>New Category</button>\r\n                    <div>\r\n                       <div ref={Modal => {\r\n                            this.newCategoryModal = Modal;\r\n                        }}\r\n                             id={\"newCategoryModal\"}\r\n                            className={\"modal\"}>\r\n                            <div className={\"modal-content\"}>\r\n                               <form>\r\n                                    <h4 className={\"grey-text text-darken-3\"}>New Custom Category</h4>\r\n                                    <div className={\"input-field\"}>\r\n                                       <input type={\"text\"} id={'new-category'} required={true} onChange={this.handleChange} value={this.state['new-category']}/>\r\n                                        <label htmlFor={'new-category'}>Category Name</label>\r\n                                    </div>\r\n                                    <div className={\"input-field\"}>\r\n                                       <input type={\"number\"} id={'category-limit'} required={true} onChange={this.handleChange} value={this.state['category-limit']} min=\"0\"/>\r\n                                        <label htmlFor={'category-limit'}>Spending Limit</label>\r\n                                    </div>\r\n                                   <div className={\"form-group\"}>\r\n                                        <button className={\"modal-close btn green lighten-1\"}\r\n                                                onClick={this.handleNewCustomCategory}>Save\r\n                                        </button>\r\n                                       <a className=\"modal-close btn grey darken-3 white-text\"\r\n                                           style={{\"marginLeft\": \"2%\"}}>\r\n                                            Cancel\r\n                                        </a>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"financialAccount\"}\r\n                            name={\"financialAccount\"}\r\n                            placeholder={\"Financial Account\"}\r\n                            options={userFunds}\r\n                            onChange={this.handleFinancialAcctChange}\r\n                        />\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <button className={\"btn green lighten-1\"}>Create</button>\r\n                        <Link to={\"/transactions\"} className={\"btn grey darken-3 white-text\"} style={{\"marginLeft\": \"2%\"}}>Close</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createTransaction: (transaction, history) => dispatch(createTransaction(transaction, history)),\r\n        newCustomCategory: (category, limit) => dispatch(newCustomCategory(category, limit)),\r\n        largeTransactionAlert: (transaction) => dispatch(largeTransactionAlert(transaction)),\r\n        lowBalanceAlert: (transaction) => dispatch(lowBalanceAlert(transaction))\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        userFunds: state.firestore.ordered.userFunds,\r\n        categories: state.firestore.ordered.categories\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\") {\r\n            return [\r\n                {\r\n                    collection: 'funds',\r\n                    where: [\r\n                        ['uid', '==', props.auth.uid]\r\n                    ],\r\n                    storeAs: 'userFunds'\r\n                }, {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'customCategories'}],\r\n                    storeAs: 'categories'\r\n                }\r\n            ]\r\n        } else {\r\n            return []\r\n        }\r\n    })\r\n)\r\n(CreateTransaction)","// STEP 1 - Include Dependencies\r\n// Include react\r\nimport React,{Component, useState}from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Include the react-fusioncharts component\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\n// Include the fusioncharts library\r\nimport FusionCharts from \"fusioncharts\";\r\n\r\n// Include the chart type\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\n\r\n// Include the theme as fusion\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux'\r\nimport './chart.css';\r\n// Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\n\r\n\r\n\r\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\r\nclass Chart extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n  \r\n  render() {\r\n    // Pie Chart\r\n    const amount = this.props.transactions;\r\n    let myMap = new Map();\r\n    let myMap2 = new Map();\r\n    const chartDataPie =[];\r\n    // Array of months\r\n    var month = new Array();\r\n    month[0] = \"months\";\r\n    month[1] = \"January\";\r\n    month[2] = \"February\";\r\n    month[3] = \"March\";\r\n    month[4] = \"April\";\r\n    month[5] = \"May\";\r\n    month[6] = \"June\";\r\n    month[7] = \"July\";\r\n    month[8] = \"August\";\r\n    month[9] = \"September\";\r\n    month[10] = \"October\";\r\n    month[11] = \"November\";\r\n    month[12] = \"December\";\r\n\r\n    const byDay =[\r\n      {\r\n        label: \"1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"4\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"5\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"6\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"7\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"8\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"9\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"10\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"11\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"12\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"13\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"14\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"15\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"16\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"17\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"18\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"19\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"20\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"21\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"22\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"23\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"24\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"25\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"26\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"27\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"28\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"29\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"30\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"31\",\r\n        value: 0,\r\n      },\r\n    \r\n      \r\n    ];\r\n\r\n    const byMonth = [\r\n      {\r\n        label: \"January\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Feburary\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"March\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"April\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"May\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"June\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"July\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"August\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"September\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"October\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"November\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"December\",\r\n        value: 0,\r\n      },\r\n\r\n    ];\r\n\r\n    const byWeek = [\r\n      {\r\n        label: \"Week1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week4\",\r\n        value: 0,\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    var currentDate = new Date();\r\n    var current_Month = currentDate.getMonth();\r\n    var current_year = currentDate.getFullYear();\r\n    console.log(current_year);\r\n    if(amount != undefined) {\r\n      console.log(amount)\r\n\r\n      \r\n\r\n      for (let i = 0; i < amount.length; i++) {\r\n        //console.log(amount[i].amount);\r\n        \r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        \r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        //console.log(this.props.transactions[i].transactionDate.getDay())\r\n\r\n        // For This Months Spending by day\r\n        let temp = this.props.transactions[i].transactionDate;\r\n        console.log(temp);\r\n        var dt = temp.split(\"/\");\r\n        console.log(dt);\r\n        if(dt[0]!=undefined){\r\n        if (dt[0].charAt(0) == 0) {\r\n          dt[0] = dt[0].charAt(1);\r\n        }\r\n      }\r\n        var date_format  = month[dt[0]] + \" \" + dt[1]+ \", \" + dt[2];\r\n        var date = new Date(date_format.toString());\r\n        var day = date.getDay();\r\n        // console.log(day, month[current_Month + 1]);\r\n        // console.log(day, month[dt[1]]);\r\n        console.log(dt[0]);  //dt 0 = month\r\n        console.log(dt[1]);  //dt 1 = day\r\n        console.log(dt[2]);  //dt 2 = year\r\n        //console.log(byDay[dt[2]]);\r\n        if (month[current_Month + 1] == month[dt[0]] ) {\r\n          byDay[dt[1] - 1].value += parseInt(amount[i].amount);\r\n        }\r\n\r\n        if (current_year == dt[2]) {\r\n         byMonth[date.getMonth()].value += parseInt(amount[i].amount); \r\n        }\r\n        console.log(dt[1]);\r\n        if (month[current_Month + 1] == month[dt[0]] ) {\r\n        if (dt[1] - 1 < 8) {\r\n          byWeek[0].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 8 && dt[1] - 1 < 15) {\r\n          byWeek[1].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 15 && dt[1] - 1 < 22) {\r\n          byWeek[2].value += parseInt(amount[i].amount);\r\n        } else {\r\n          byWeek[3].value += parseInt(amount[i].amount);\r\n        } \r\n      }\r\n    }\r\n   \r\n\r\n    }\r\n    if (this.props.transactions != undefined){\r\n      // var dt = new Date(\"December 25, 1995 \");\r\n      // console.log(dt.getDay());\r\n      // let temp = this.props.transactions[0].transactionDate;\r\n      // console.log(temp);\r\n      // var dt = temp.split(\"-\");\r\n      // console.log(dt);\r\n      // // console.log(dt[1]);\r\n      // // console.log(dt[1].charAt(0));\r\n      // if (dt[1].charAt(0) == 0) {\r\n      //     dt[1] = dt[1].charAt(1);\r\n      //     //console.log(dt);\r\n      // }\r\n\r\n      // var date_format  = month[dt[1]] + \" \" + dt[2]+ \", \" + dt[0];\r\n      // console.log(date_format);\r\n      // var date = new Date(date_format.toString());\r\n      // var day = date.getDay();\r\n      // console.log(day);\r\n\r\n      // byDay[day].value += parseInt(amount[0].amount);\r\n      // console.log(byDay[day].label , byDay[day].value);\r\n      //console.log(month[3]);\r\n      //console.log(this.props.transactions[0].transactionDate);\r\n    }\r\n\r\n\r\n// STEP 3 - Creating the JSON object to store the chart configurations\r\nconst chartConfigsPie = {\r\n  type: \"pie2d\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Spending by Category\",\r\n      //Set the chart subcaption\r\n      //Set the x-axis name\r\n      xAxisName: \"Spending Category\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars \",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\nconst chartConfigsLineD = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Day\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Day\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data:byDay\r\n  }\r\n};\r\n\r\nconst chartConfigsLineW = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Week\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Week\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byWeek\r\n  }\r\n};\r\n\r\nconst chartConfigsLineM = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Years Spending by Month\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Month\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byMonth\r\n  }\r\n};\r\n    \r\n    return (\r\n      <div className = \"visualizations2\">\r\n    <div className =\"chart2\">\r\n    <ReactFC {...chartConfigsLineD} />);\r\n    </div>\r\n    <div className =\"chart2\">\r\n    <ReactFC {...chartConfigsLineW} />);\r\n    </div>\r\n    <div className =\"chart2\">\r\n    <ReactFC {...chartConfigsLineM} />);\r\n    </div>\r\n    <Link to='/pastVisualizations' className ='btn btn -floating green lighten-1'>Past Spending</Link>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      transactions: state.firestore.ordered.transactions,\r\n      auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => {\r\n      if (typeof props.auth.uid != \"undefined\") {\r\n          return [\r\n              {\r\n                  collection: 'transactions',\r\n                  doc: props.auth.uid,\r\n                  subcollections: [{collection: 'userTransactions'}],\r\n                  storeAs: 'transactions'\r\n              }\r\n          ]\r\n      } else {\r\n          return []\r\n      }\r\n  })\r\n)(Chart)","// STEP 1 - Include Dependencies\r\n// Include react\r\nimport React,{Component, useState}from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Link} from 'react-router-dom';\r\nimport './pastChart.css'\r\nimport {Grid, Cell,List, ListItem, ListItemContent} from 'react-mdl';\r\n\r\n// Include the react-fusioncharts component\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\n// Include the fusioncharts library\r\nimport FusionCharts from \"fusioncharts\";\r\n\r\n// Include the chart type\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\n\r\n// Include the theme as fusion\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux'\r\n\r\n// Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\n\r\n\r\n\r\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\r\nclass pastChart extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n  \r\n  render() {\r\n    // Pie Chart\r\n    const amount = this.props.transactions;\r\n    let myMap = new Map();\r\n    let myMap2 = new Map();\r\n    const chartDataPie1 =[];\r\n    const chartDataPie=[];\r\n    // Array of months\r\n    var month = new Array();\r\n    month[0] = \"months\";\r\n    month[1] = \"January\";\r\n    month[2] = \"February\";\r\n    month[3] = \"March\";\r\n    month[4] = \"April\";\r\n    month[5] = \"May\";\r\n    month[6] = \"June\";\r\n    month[7] = \"July\";\r\n    month[8] = \"August\";\r\n    month[9] = \"September\";\r\n    month[10] = \"October\";\r\n    month[11] = \"November\";\r\n    month[12] = \"December\";\r\n\r\n    const byDay1 =[\r\n      {\r\n        label: \"1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"4\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"5\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"6\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"7\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"8\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"9\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"10\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"11\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"12\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"13\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"14\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"15\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"16\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"17\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"18\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"19\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"20\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"21\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"22\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"23\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"24\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"25\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"26\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"27\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"28\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"29\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"30\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"31\",\r\n        value: 0,\r\n      },\r\n    \r\n      \r\n    ];\r\n\r\n    const byMonth1 = [\r\n      {\r\n        label: \"January\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Feburary\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"March\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"April\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"May\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"June\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"July\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"August\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"September\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"October\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"November\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"December\",\r\n        value: 0,\r\n      },\r\n\r\n    ];\r\n\r\n    const byWeek1 = [\r\n      {\r\n        label: \"Week1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week4\",\r\n        value: 0,\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    var currentDate = new Date();\r\n    var current_Month = currentDate.getMonth();\r\n    var current_year = currentDate.getFullYear();\r\n    console.log(current_year);\r\n    if(amount != undefined) {\r\n      console.log(amount)\r\n\r\n      \r\n\r\n      for (let i = 0; i < amount.length; i++) {\r\n        //console.log(amount[i].amount);\r\n        let temp = this.props.transactions[i].transactionDate;\r\n        console.log(temp);\r\n        var dt = temp.split(\"/\");\r\n        console.log(dt);\r\n        if(dt[0]!=undefined){\r\n        if (dt[0].charAt(0) == 0) {\r\n          dt[0] = dt[0].charAt(1);\r\n        }\r\n      }\r\n      var date_format  = month[dt[0]] + \" \" + dt[1]+ \", \" + dt[2];\r\n        var date = new Date(date_format.toString());\r\n        var day = date.getDay();\r\n        console.log(current_year-1);\r\n        console.log(dt[2]);\r\n        \r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        //console.log(this.props.transactions[i].transactionDate.getDay())\r\n        // For This Months Spending by day        \r\n        // console.log(day, month[current_Month + 1]);\r\n        // console.log(day, month[dt[1]]);\r\n        //console.log(dt[0]);  //dt 0 = month\r\n        //console.log(dt[1]);  //dt 1 = day\r\n        //console.log(dt[2]);  //dt 2 = year\r\n        //console.log(byDay[dt[2]]);\r\n        if (month[current_Month ] == month[dt[0]] ) {\r\n          byDay1[dt[1] - 1].value += parseInt(amount[i].amount);\r\n        }else if (month[current_Month + 1] == 12 && month[dt[0]-1] ==0 ) {\r\n            byDay1[dt[1] - 1].value += parseInt(amount[i].amount);\r\n        }\r\n        //console.log(current_year-1);\r\n        //console.log(dt[2]);\r\n        if (current_year-1 == dt[2]) {\r\n         byMonth1[date.getMonth()].value += parseInt(amount[i].amount); \r\n        }\r\n        //console.log(dt[1]);\r\n        //console.log(month[current_Month]);\r\n        //console.log(month[dt[0]]);\r\n        if (month[current_Month ] == month[dt[0]] ) {\r\n        if (dt[1] - 1 < 8) {\r\n          byWeek1[0].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 8 && dt[1] - 1 < 15) {\r\n          byWeek1[1].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 15 && dt[1] - 1 < 22) {\r\n          byWeek1[2].value += parseInt(amount[i].amount);\r\n        } else {\r\n          byWeek1[3].value += parseInt(amount[i].amount);\r\n        } \r\n      }\r\n    }\r\n\r\n   \r\n\r\n    }\r\n    if (this.props.transactions != undefined){\r\n      // var dt = new Date(\"December 25, 1995 \");\r\n      // console.log(dt.getDay());\r\n      // let temp = this.props.transactions[0].transactionDate;\r\n      // console.log(temp);\r\n      // var dt = temp.split(\"-\");\r\n      // console.log(dt);\r\n      // // console.log(dt[1]);\r\n      // // console.log(dt[1].charAt(0));\r\n      // if (dt[1].charAt(0) == 0) {\r\n      //     dt[1] = dt[1].charAt(1);\r\n      //     //console.log(dt);\r\n      // }\r\n\r\n      // var date_format  = month[dt[1]] + \" \" + dt[2]+ \", \" + dt[0];\r\n      // console.log(date_format);\r\n      // var date = new Date(date_format.toString());\r\n      // var day = date.getDay();\r\n      // console.log(day);\r\n\r\n      // byDay[day].value += parseInt(amount[0].amount);\r\n      // console.log(byDay[day].label , byDay[day].value);\r\n      //console.log(month[3]);\r\n      //console.log(this.props.transactions[0].transactionDate);\r\n    }\r\n\r\n\r\n// STEP 3 - Creating the JSON object to store the chart configurations\r\nconst chartConfigsPie1 = {\r\n  type: \"pie2d\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Spending by Category\",\r\n      //Set the chart subcaption\r\n      //Set the x-axis name\r\n      xAxisName: \"Spending Category\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars \",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie1\r\n  }\r\n};\r\n\r\nconst chartConfigsLineD1 = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Last Months Spending by Day\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Day\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data:byDay1\r\n  }\r\n};\r\n\r\nconst chartConfigsLineW1 = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Last Months Spending by Week\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Week\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byWeek1\r\n  }\r\n};\r\n\r\nconst chartConfigsLineM1 = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Last Years Spending by Month\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Month\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byMonth1\r\n  }\r\n};\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    const byDay =[\r\n      {\r\n        label: \"1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"4\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"5\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"6\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"7\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"8\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"9\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"10\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"11\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"12\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"13\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"14\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"15\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"16\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"17\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"18\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"19\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"20\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"21\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"22\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"23\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"24\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"25\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"26\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"27\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"28\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"29\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"30\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"31\",\r\n        value: 0,\r\n      },\r\n    \r\n      \r\n    ];\r\n\r\n    const byMonth = [\r\n      {\r\n        label: \"January\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Feburary\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"March\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"April\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"May\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"June\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"July\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"August\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"September\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"October\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"November\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"December\",\r\n        value: 0,\r\n      },\r\n\r\n    ];\r\n\r\n    const byWeek = [\r\n      {\r\n        label: \"Week1\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week2\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week3\",\r\n        value: 0,\r\n      },\r\n      {\r\n        label: \"Week4\",\r\n        value: 0,\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    \r\n    console.log(current_year);\r\n    if(amount != undefined) {\r\n      console.log(amount)\r\n\r\n      \r\n\r\n      for (let i = 0; i < amount.length; i++) {\r\n        //console.log(amount[i].amount);\r\n        let temp = this.props.transactions[i].transactionDate;\r\n        console.log(temp);\r\n        var dt = temp.split(\"/\");\r\n        console.log(dt);\r\n        if(dt[0]!=undefined){\r\n        if (dt[0].charAt(0) == 0) {\r\n          dt[0] = dt[0].charAt(1);\r\n        }\r\n      }\r\n      var date_format  = month[dt[0]] + \" \" + dt[1]+ \", \" + dt[2];\r\n        var date = new Date(date_format.toString());\r\n        var day = date.getDay();\r\n        //console.log(current_year);\r\n        //console.log(dt[2]);\r\n        //if(current_year == dt[2]){\r\n        \r\n      //}\r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        \r\n        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        //console.log(this.props.transactions[i].transactionDate.getDay())\r\n\r\n        // For This Months Spending by day\r\n        \r\n        // console.log(day, month[current_Month + 1]);\r\n        // console.log(day, month[dt[1]]);\r\n        console.log(dt[0]);  //dt 0 = month\r\n        console.log(dt[1]);  //dt 1 = day\r\n        console.log(dt[2]);  //dt 2 = year\r\n        //console.log(byDay[dt[2]]);\r\n        if (month[current_Month + 1] == month[dt[0]] ) {\r\n          byDay[dt[1] - 1].value += parseInt(amount[i].amount);\r\n        }\r\n\r\n        if (current_year == dt[2]) {\r\n         byMonth[date.getMonth()].value += parseInt(amount[i].amount); \r\n        }\r\n        console.log(dt[1]);\r\n        if (month[current_Month + 1] == month[dt[0]] ) {\r\n        if (dt[1] - 1 < 8) {\r\n          byWeek[0].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 8 && dt[1] - 1 < 15) {\r\n          byWeek[1].value += parseInt(amount[i].amount);\r\n        } else if (dt[1] - 1 > 15 && dt[1] - 1 < 22) {\r\n          byWeek[2].value += parseInt(amount[i].amount);\r\n        } else {\r\n          byWeek[3].value += parseInt(amount[i].amount);\r\n        } \r\n      }\r\n    }\r\n   \r\n\r\n    }\r\n    if (this.props.transactions != undefined){\r\n      // var dt = new Date(\"December 25, 1995 \");\r\n      // console.log(dt.getDay());\r\n      // let temp = this.props.transactions[0].transactionDate;\r\n      // console.log(temp);\r\n      // var dt = temp.split(\"-\");\r\n      // console.log(dt);\r\n      // // console.log(dt[1]);\r\n      // // console.log(dt[1].charAt(0));\r\n      // if (dt[1].charAt(0) == 0) {\r\n      //     dt[1] = dt[1].charAt(1);\r\n      //     //console.log(dt);\r\n      // }\r\n\r\n      // var date_format  = month[dt[1]] + \" \" + dt[2]+ \", \" + dt[0];\r\n      // console.log(date_format);\r\n      // var date = new Date(date_format.toString());\r\n      // var day = date.getDay();\r\n      // console.log(day);\r\n\r\n      // byDay[day].value += parseInt(amount[0].amount);\r\n      // console.log(byDay[day].label , byDay[day].value);\r\n      //console.log(month[3]);\r\n      //console.log(this.props.transactions[0].transactionDate);\r\n    }\r\n\r\n\r\n// STEP 3 - Creating the JSON object to store the chart configurations\r\nconst chartConfigsPie = {\r\n  type: \"pie2d\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"Spending by Category\",\r\n      //Set the chart subcaption\r\n      //Set the x-axis name\r\n      xAxisName: \"Spending Category\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars \",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\nconst chartConfigsLineD = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Day\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Day\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data:byDay\r\n  }\r\n};\r\n\r\nconst chartConfigsLineW = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Week\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Week\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byWeek\r\n  }\r\n};\r\n\r\nconst chartConfigsLineM = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Years Spending by Month\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Month\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: byMonth\r\n  }\r\n};\r\n\r\n    return (\r\n      <div className = \"visualizations\">\r\n        {/*\r\n      <div className = \"chart\">\r\n    <ReactFC {...chartConfigsPie1} />);\r\n    </div>\r\n        */}\r\n        <div className = 'float-container'>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineD1} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineD} />);\r\n    </div>\r\n    </div>\r\n\r\n    <div className ='float-container'>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineW1} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineW} />);\r\n    </div>\r\n    </div>\r\n\r\n    <div className = 'float-container'>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineM1} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineM} />);\r\n    </div>\r\n    </div>\r\n    {/*\r\n    <div className = \"chart\">\r\n    <ReactFC {...chartConfigsPie} />);\r\n    </div>\r\n    */}\r\n    \r\n    \r\n    \r\n    <Link to='/Visualizations' className ='btn btn -floating green lighten-1'>Current Spending</Link>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      transactions: state.firestore.ordered.transactions,\r\n      auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => {\r\n      if (typeof props.auth.uid != \"undefined\") {\r\n          return [\r\n              {\r\n                  collection: 'transactions',\r\n                  doc: props.auth.uid,\r\n                  subcollections: [{collection: 'userTransactions'}],\r\n                  storeAs: 'transactions'\r\n              }\r\n          ]\r\n      } else {\r\n          return []\r\n      }\r\n  })\r\n)(pastChart)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {resetPassword} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport {googleLogin} from '../../store/actions/authActions'\r\n\r\n\r\nclass google extends Component {\r\n    state ={\r\n        email:'',\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.googleLogin(this.state.email);\r\n        this.props.history.push('/SignIn');\r\n        //firebase.auth().sendPasswordResetEmail(this.state.email);\r\n    }\r\n\r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Login with Google</h5>\r\n               \r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        googleLogin: (email) => dispatch(googleLogin(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(google)\r\n","import React, {Component, withRouter} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteCustomCategories} from \"../../store/actions/transactionActions\"\r\nimport Select from 'react-select';\r\nimport {Link} from \"react-router-dom\";\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\n\r\nclass Categories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"category: \" + this.state.transactionCategory);\r\n        if (this.state.transactionCategory === undefined) {\r\n            alert(\"Please select a category!\");\r\n        } else {\r\n            let transactionCategories = [];\r\n            if (this.props.transactions !== undefined) {\r\n                this.props.transactions.forEach(transac => {\r\n                    transactionCategories.push(transac.transactionCategory);\r\n                })\r\n            } \r\n            if (transactionCategories.includes(this.state.transactionCategory)) {\r\n                alert(\"Deletion Error - Transaction Exists with Category!\");\r\n            } else {\r\n                this.props.deleteCustomCategories(this.state.transactionCategory);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleCategoryChange = (e) => {\r\n        this.setState({\r\n            transactionCategory: e.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        //Grab Categories and funds\r\n        let userCategories = [];\r\n        let fundCategories = [];\r\n        if (this.props.categories !== undefined) {\r\n            this.props.categories.forEach(categorie => {\r\n                let formattedCategory = {};\r\n                let label = categorie.category;\r\n                let value = categorie.category;\r\n                formattedCategory['label'] = label;\r\n                formattedCategory['value'] = value;\r\n\r\n                userCategories.push(formattedCategory);\r\n            })\r\n        } else {\r\n            userCategories = [{value: '', label: 'loading...'}];\r\n        }\r\n\r\n        if (this.props.transactions !== undefined) {\r\n            this.props.transactions.forEach(transac => {\r\n                fundCategories.push(transac.transactionCategory);\r\n            })\r\n        } \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                <div className={\"input-field\"}>\r\n                    <h3>Manage Categories</h3>\r\n                        <Select\r\n                            placeholder={\"Category\"}\r\n                            options={userCategories}\r\n                            onChange={this.handleCategoryChange}\r\n                        />\r\n                    </div>\r\n                    <button className={\"btn modal-trigger green lighten-1\"}>Delete Category</button>\r\n                    <Link to={\"/transactions\"} className={\"btn grey darken-3 white-text\"} style={{\"marginLeft\": \"2%\"}}>Close</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        deleteCustomCategories: (category) => dispatch(deleteCustomCategories(category))\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        transactions: state.firestore.ordered.transactions,\r\n        categories: state.firestore.ordered.categories\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\") {\r\n            return [ \r\n                {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'userTransactions'}],\r\n                    storeAs: 'transactions'\r\n                }, {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'customCategories'}],\r\n                    storeAs: 'categories'\r\n                }\r\n            ]\r\n        } else {\r\n            return []\r\n        }\r\n    })\r\n)\r\n(Categories)","import React from 'react';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {deletePayment} from '../../store/actions/paymentAction'\r\n\r\n\r\n\r\nconst Paymentfunc = (props) => {\r\n    //console.log(props);\r\n    const {data} = props;\r\n\r\n   const handleClick = (id) => {\r\n    props.deleting(id);\r\n   }\r\n\r\n\r\n    if(data){\r\n        const PaymentArray = data.map (data => {\r\n            return(\r\n                <div className =\"container section project-details\" >\r\n                <div className =\"card z-depth-0\" id ={data.id}>\r\n                    <div className =\"card-content\">\r\n                        <span className =\"card-title\">{data.title}</span>\r\n                        <h4 style={{fontSize: \"30px\"}}>Amount</h4>\r\n                        <p style={{fontSize: \"20px\"}}>{data.amount}</p>\r\n                        <h4 style={{fontSize: \"30px\"}}>Date</h4>\r\n                        <p style={{fontSize: \"20px\"}}>{data.date}</p>\r\n                    </div>\r\n                    <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                        <div>Posted by {data.owner}</div>\r\n                        <div>{moment(data.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={() => {handleClick(data.id)}}>Delete</button>\r\n            </div>\r\n            )\r\n        }\r\n            );\r\n        return(\r\n            <div>\r\n           { PaymentArray }\r\n           </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    deleting : (id) => { dispatch(deletePayment(id)) }\r\n    \r\n    }\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n    // firestoreConnect([\r\n    //     {collection: 'memos'}\r\n    // ])\r\n)(Paymentfunc)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport Paymentfunc from './Paymentfunc'\r\nimport Select from 'react-select';\r\nimport materialize from \"materialize-css\";\r\nimport {editFund} from \"../../store/actions/fundActions\";\r\nimport {createTransaction} from \"../../store/actions/transactionActions\";\r\nimport {addpayment} from '../../store/actions/paymentAction';\r\n\r\n\r\nconst transactionCategory = [\r\n    { value: \"Dining\", label: \"Dining\"},\r\n    { value: \"Travel\", label: \"Travel\"},\r\n    { value: \"Tuition\", label: \"Tuition\"},\r\n    { value: \"Grocery\", label: \"Grocery\"},\r\n    { value: \"Bar & Coffee Shop\", label: \"Bar & Coffee Shop\"},\r\n    { value: \"Fee\", label: \"Fee\"}];\r\n\r\nclass Payments extends Component {\r\n    \r\n    componentDidMount() {\r\n        const options = {\r\n            inDuration: 250,\r\n            outDuration: 250,\r\n            opacity: 0.5,\r\n            dismissible: true,\r\n            startingTop: \"4%\",\r\n            endingTop: \"10%\"\r\n        };\r\n        materialize.Modal.init(this.newCategoryModal, options);\r\n    }\r\n\r\n    state = {\r\n        title : \"\",\r\n        amount: \"\",\r\n        account: \"\",\r\n        category:\"\", \r\n        date : \"\",\r\n        //time: \"\",\r\n    }\r\n    \r\n    handleCategoryChange = (e) => {\r\n        this.setState({\r\n            category: e.value\r\n        })\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n    handleFinancialAcctChange = (e) => {\r\n        let acctBalance = 0;\r\n        // add original account balance to state for fund update\r\n        for (let i = 0; i < this.props.userFunds.length; i++){\r\n            if (this.props.userFunds[i].id === e.value){\r\n                acctBalance = this.props.userFunds[i].balance;\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            account: e.value,\r\n            acctBalance: acctBalance\r\n        });\r\n    };\r\n\r\n    // checkTime = (time) => {\r\n    //     console.log(\"In the function\");\r\n    //     const regex = /[0-9]{2}\\:[0-9]{2}/;\r\n    //     if (time.match(regex)){\r\n    //         console.log(\"Caught\");\r\n    //         return true;\r\n    //     } else {\r\n    //         console.log (\"fucked\");\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    // checkAccount = (account) => {\r\n    //     // console.log(this.props.funds);\r\n    //     var flag = false;\r\n    //     if (this.props.funds) {\r\n    //          this.props.funds.map(funds => {\r\n    //             if (funds.fundType === account) {\r\n    //                 flag = true;\r\n    //             }\r\n    //         })\r\n    //     }\r\n    //     return flag;\r\n    // }\r\n\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        // if (!this.checkAccount(this.state.account)) {\r\n        //     console.log (\"fUcKeD aGaIn\")\r\n        //     window.alert(\"This fund type does not exsist please enter an exsisting account\");\r\n        //     this.setState({\r\n        //         account: \"\",\r\n        //     })\r\n        // } else { \r\n            this.setState({\r\n                ...this.state,\r\n                nickname: this.state.title,\r\n            })\r\n                this.props.addpayment(this.state);\r\n                this.setState ({\r\n                    title : \"\",\r\n                    amount: \"\",\r\n                    account: \"\", \r\n                    date : \"\",\r\n                    category:\"\", \r\n                });\r\n                window.alert(\"Your Recurring Payment is going to start from the next date.\")\r\n    \r\n}\r\n\r\n    \r\n    render() { \r\n        console.log(this.props);\r\n        let data = undefined;\r\n        //        console.log(\"UID\", this.props.auth.uid);\r\n                if (this.props.payments !== undefined) {\r\n                  data = this.props.payments.filter( payments => {\r\n                     return this.props.auth.uid === payments.uid\r\n                 });\r\n                }\r\n        let userFunds = [];\r\n        let categories = [];\r\n\r\n        if (this.props.userFunds !== undefined) {\r\n            this.props.userFunds.forEach(userFund => {\r\n                let formattedFund = {};\r\n                let label = userFund.nickname + ' ' + userFund.fundType + ', Balance: $' + userFund.balance;\r\n                let value = userFund.id;\r\n                formattedFund['label'] = label;\r\n                formattedFund['value'] = value;\r\n\r\n                userFunds.push(formattedFund);\r\n            }) \r\n        } else {\r\n            userFunds = [{value: '', label: 'loading...'}];\r\n        }\r\n        if (this.props.categories !== undefined) {\r\n            this.props.categories.forEach(categorie => {\r\n                let formattedCategory = {};\r\n                let label = categorie.category;\r\n                let value = categorie.category;\r\n                formattedCategory['label'] = label;\r\n                formattedCategory['value'] = value;\r\n\r\n                categories.push(formattedCategory);\r\n            })\r\n        } else {\r\n            categories = [{value: '', label: 'loading...'}];\r\n        }\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n            <form onSubmit={this.handelSubmit} className =\"white\">\r\n            <h5 className =\"grey-text text-darken-3\">Create Payments</h5>\r\n            <div id = \"title\" className = \"input-field\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type =\"text\" id=\"title\" onChange ={this.handleChange} value={this.state.title}/>\r\n            </div>\r\n            <div className = \"input-field\">\r\n                <label htmlFor=\"amount\">Amount</label>\r\n                <textarea  id=\"amount\"  className=\"materialize-textarea\" onChange ={this.handleChange} value={this.state.amount} required={true}></textarea>\r\n            </div>\r\n            {/* <div className = \"input-field\">\r\n                <label htmlFor=\"account\">Financial account</label>\r\n                <textarea  id=\"account\"  className=\"materialize-textarea\" onChange ={this.handleChange} value={this.state.account} required={true}></textarea>\r\n            </div> */}\r\n            <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"financialAccount\"}\r\n                            name={\"financialAccount\"}\r\n                            placeholder={\"Financial Account\"}\r\n                            options={userFunds}\r\n                            onChange={this.handleFinancialAcctChange}\r\n                        />\r\n                    </div>\r\n            \r\n            {/* { <div className = \"input-field\">\r\n                <label htmlFor=\"time\">Time</label>\r\n                <textarea  id=\"time\"  className=\"materialize-textarea\" onChange ={this.handleChange} value={this.state.time} placeholder=\"hh:mm\" required={true}></textarea>\r\n            </div> } */}\r\n            <div className={\"input-field\"}>\r\n                        <input type={\"date\"} id={'date'} required={true} onChange={this.handleChange} value={this.state.date}/>\r\n                        <label htmlFor={'transactionDate'}>Date</label>\r\n            </div>\r\n            {/* <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"category\"}\r\n                            name={\"category\"}\r\n                            placeholder={\"Category\"}\r\n                            options={transactionCategory}\r\n                            onChange={this.handleCategoryChange}\r\n                        />\r\n                    </div> */}\r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"transactionCategory\"}\r\n                            name={\"transactionCategory\"}\r\n                            placeholder={\"Category\"}\r\n                            options={categories}\r\n                            onChange={this.handleCategoryChange}\r\n                        />\r\n                    </div>\r\n            <div className =\"input-field\">\r\n                <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n            </form>\r\n            <Paymentfunc data={data}/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        payments : state.firestore.ordered.payments,\r\n        funds : state.firestore.ordered.funds,\r\n        transactions: state.firestore.ordered.transactions,\r\n        categories: state.firestore.ordered.categories,\r\n        userFunds: state.firestore.ordered.userFunds,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addpayment: (id) => { dispatch(addpayment(id))},\r\n        editFund: (fund) => {dispatch(editFund(fund))},\r\n        createTransaction: (transaction, history) => dispatch(createTransaction(transaction, history)),\r\n        \r\n    }\r\n}\r\n\r\n\r\n//export default connect(matchStatetoProps , mapDispatchToProps)(Memos);\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'payments', \r\n                    where: ['uid', '==', props.auth.uid]\r\n                },\r\n                {\r\n                    collection: 'funds',\r\n                    where: [\r\n                        ['uid', '==', props.auth.uid]\r\n                    ],\r\n                    storeAs: 'userFunds'\r\n                },\r\n                {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{ collection: 'userTransactions' }],\r\n                    storeAs: 'transactions'\r\n                },\r\n                 {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{collection: 'customCategories'}],\r\n                    storeAs: 'categories'\r\n                }\r\n            ]\r\n        } else{\r\n            return []\r\n        }\r\n    })\r\n)(Payments)\r\n \r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {deleteAlert} from '../../store/actions/alertActions'\r\n\r\nconst catAlert = (props) => {\r\n    const {alert} = props;\r\n    \r\n    if (alert) {\r\n            return (\r\n                <div className = \"card-content\" color=\"white\">\r\n                    <h4>{alert.alertType}</h4>\r\n                    <p>Category: {alert.category}, Amount: {alert.amount}, Category Limit: {alert.limit}, Total Category Expenditures: {alert.catSpent}</p>\r\n                </div>\r\n            )\r\n    } else {\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Can't render category alert</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n)(catAlert)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\n\r\nconst otherAlert = (props) => {\r\n    const {alert} = props;\r\n    \r\n    if (alert) {\r\n            return (\r\n                <div className = \"card-content\">\r\n                    <h4>{alert.alertType}</h4>\r\n                    <p>Fund: {alert.fund}, Amount: {alert.amount}, Fund Limit: {alert.limit}, Fund Balance: {alert.fundBalance}</p>\r\n                </div>\r\n            )\r\n    } else {\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Can't render other alert</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n)(otherAlert)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {deleteAlert} from '../../store/actions/alertActions'\r\nimport CategoryAlert from './catAlert'\r\nimport OtherAlert from './otherAlert'\r\n\r\nconst AlertList = (props) => {\r\n    const {alerts} = props;\r\n\r\n    const handleClick = (id) => {\r\n        props.deleteAlert(id);\r\n    }\r\n\r\n    if (alerts) {\r\n        const alertsArray = alerts.map (alerts => {\r\n            return (\r\n                <div className = \"white\" >\r\n                    <div className = \"cardz-depth-0\" id = {alerts.id}>\r\n                        {alerts.alertType == \"CATEGORY SPENDING ALERT\"\r\n                            ?\r\n                            <CategoryAlert alert = {alerts} />\r\n                            :\r\n                            <OtherAlert alert = {alerts} />\r\n                        }\r\n                    </div>\r\n                    <button onClick={() => {handleClick(alerts.id)}}>Delete Alert</button>\r\n                </div>\r\n            )\r\n        })\r\n        return(\r\n            <div>\r\n           { alertsArray }\r\n           </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>No Alerts to Show</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteAlert : (id) => { dispatch(deleteAlert(id)) }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n)(AlertList)","export const deleteAlert = (docID) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const uid = getState().firebase.auth.uid.toString();\r\n        firestore.collection('alerts').doc(uid).collection(\"userAlerts\").doc(docID).delete().then(() => {\r\n            dispatch({ type: 'DELETE_ALERT', docID });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'DELETE_ALERT_ERR'}, err);\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nimport AlertList from './alertList'\r\n\r\nclass Alerts extends Component {\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n\r\n        var userAlerts;\r\n        if (this.props.alerts != undefined) {\r\n            userAlerts = this.props.alerts;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {this.props.alerts != null\r\n                    ?\r\n                    <AlertList alerts = {userAlerts} />\r\n                    :\r\n                    console.log(\"not rendering\")\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alerts: state.firestore.ordered.alerts,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{}\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'alerts',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{ collection: 'userAlerts' }],\r\n                    storeAs: \"alerts\"\r\n                }\r\n            ]\r\n        } else {\r\n            return [];\r\n        }\r\n    })\r\n)(Alerts)\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nimport Profile from './components/profile/profile'\r\nimport Financials from './components/financials/Financials'\r\nimport createFund from './components/financials/CreateFund'\r\nimport reset from './components/auth/reset'\r\nimport Memos from './components/Memos/memos'\r\nimport Messages from './components/messaging/messages'\r\nimport Transactions from \"./components/transactions/Transactions\";\r\nimport CreateEditTransaction from \"./components/transactions/CreateTransaction\";\r\nimport Visualizations from \"./components/visualizations/chart\"\r\nimport pastVisualizations from \"./components/visualizations/pastChart\"\r\nimport Google from './components/auth/google'\r\nimport Categories from './components/transactions/categories'\r\nimport payments from './components/Recurpayments/Payments'\r\nimport Alerts from './components/alerting/alerts'\r\n\r\nclass App extends Component {\r\n  render(){\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n     <Navbar/>\r\n     <Switch>\r\n       <Route exact path ='/' component ={Dashboard}/>\r\n       <Route path ='/project/:id' component={ProjectDetails}/>\r\n       <Route path ='/signin' component ={SignIn}/>\r\n       <Route path ='/signup' component ={SignUp}/>\r\n       <Route path ='/create' component ={CreateProject}/>\r\n       <Route path ='/financials' component ={Financials}/>\r\n       <Route path ='/transactions' component={Transactions}/>\r\n       <Route path ='/create_transaction' component={CreateEditTransaction}/>\r\n       <Route path ='/profile' component ={Profile}/>\r\n       <Route path ='/createFund' component ={createFund}/>\r\n       <Route path ='/reset' component ={reset}/>\r\n       <Route path='/memos' component={Memos}/>\r\n       <Route path='/messages' component={Messages}/>\r\n       <Route path='/visualizations' component={Visualizations}/>\r\n       <Route path='/pastVisualizations' component={pastVisualizations}/>\r\n       <Route path ='/payments' component ={payments}/>\r\n\t   <Route path='/google' component={Google}/>\r\n     <Route path ='/categories' component ={Categories}/>\r\n     <Route path ='/alerts' component = {Alerts}/>\r\n     </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState= {\r\n    authError: null\r\n}\r\n\r\nconst authReducer =(state =initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState= {\r\n    projects:[\r\n        {id: '1', title: 'something something 1', content: 'blah blah blah 1'},\r\n        {id: '2', title: 'something something 2', content: 'blah blah blah 2'},\r\n        {id: '3', title: 'something something 3', content: 'blah blah blah 3'}\r\n    ]\r\n}\r\n\r\nconst projectReducer =(state =initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project eror', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","const initState={\r\n        userProfile:[{placeholder: 'placeholder'}]\r\n}\r\n\r\nconst updateReducer=(state=initState,action) =>{\r\n    switch(action.type){\r\n        case 'UPDATE_SUCCESSFUL': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'UPDATE_ERROR':\r\n            console.log('create project eror', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default updateReducer","const initState= {\r\n    funds:[{placeholder: 'placeholder'}]\r\n}\r\n\r\nconst fundReducer =(state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_FUND':\r\n            console.log('created project', action.fund)\r\n            return state;\r\n        case 'CREATE_FUND_ERROR':\r\n            console.log('create project err', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fundReducer","const InitState = {\r\n    memos :[\r\n    {mem_title: \"Haider\", content : \"Haider is the best\" },\r\n    {mem_title: \"Pay the electric bill\", content :\"Please do it I want electricity\"}\r\n    ]\r\n\r\n}\r\n\r\nconst memReducer = (state = InitState, action) => {\r\n    if (action.type === \"CREATE_MEM\") {\r\n        console.log(\"Memo Created\");\r\n        return state;\r\n    } else if (action.type === \"DELTE_MEM_DOC\") {\r\n        console.log(\"Memo Deleted\");\r\n        return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default memReducer;","const InitState = {\r\n    supportTickets:[\r\n        {content: 'I love pineapples expressly', email: 'sethrogen@collegecap.org'},\r\n        {content: 'There is pizza on my pants', email: 'jonahhill@collegecap.org'}\r\n    ]\r\n}\r\n\r\nconst msgReducer = (state = InitState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_TICKET':\r\n            console.log('created ticket', action.newMsg)\r\n            return state;\r\n        case 'CREATE_TICKET_ERR':\r\n            console.log('create transaction err', action.err)\r\n            return state;\r\n        case 'CLOSE_TICKET':\r\n            console.log('close ticket', action.docID)\r\n            return state;\r\n        case 'CLOSE_TICKET_ERR':\r\n            console.log('close ticket err', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default msgReducer;","const initState= {\r\n    transactions:[{placeholder: 'placeholder'}]\r\n};\r\n\r\nconst transactionReducer =(state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_TRANSACTION':\r\n            console.log('created transaction', action.transaction)\r\n            return state;\r\n        case 'CREATE_TRANSACTION_ERROR':\r\n            console.log('create transaction err', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default transactionReducer","const initState = [];\r\n\r\nconst stockReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_STOCK\":\r\n            return action.stock;\r\n        case \"GET_STOCK_ERR\":\r\n            alert(\"Failed to get stock info! \" + action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stockReducer","const initState = null\r\n    // [\r\n    //     {placeholder: 'placeholder'}\r\n    // ]\r\n    // [{\r\n    //         id: 1,\r\n    //         symbol: 'SNAP'\r\n    // }];\r\n\r\nconst favStockReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_FAV_STOCK_PRICES\":\r\n            return action.favStockPrices\r\n        case \"GET_FAV_STOCK_ERR\":\r\n            alert(\"Failed to get stock info! \" + action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default favStockReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nimport updateReducer from './updateReducer'\r\nimport fundReducer from './fundReducer'\r\nimport memReducer from './memReducer';\r\nimport msgReducer from './msgReducer';\r\nimport transactionReducer from \"./transactionReducer\";\r\nimport stockReducer from \"./stockReducer\";\r\nimport favStocksReducer from \"./favStocksReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    userProfile: updateReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    fund: fundReducer,\r\n    memo: memReducer,\r\n    messages: msgReducer,\r\n    transaction: transactionReducer,\r\n    stock: stockReducer,\r\n    favStockPrices: favStocksReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDHxQtPVGZMWlhUm5jW6j2ix4YbrbmC420\",\r\n    authDomain: \"college-capital-ed06f.firebaseapp.com\",\r\n    databaseURL: \"https://college-capital-ed06f.firebaseio.com\",\r\n    projectId: \"college-capital-ed06f\",\r\n    storageBucket: \"college-capital-ed06f.appspot.com\",\r\n    messagingSenderId: \"244905517245\",\r\n    appId: \"1:244905517245:web:70109dddc6f307b99697d4\",\r\n    measurementId: \"G-Z51D5JH30Y\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\nimport firebase from 'firebase/app'\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n    reduxFirestore(firebase, fbConfig)\r\n  )\r\n);\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}