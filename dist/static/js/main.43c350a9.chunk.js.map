{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/profile/profile.js","store/actions/updateActions.js","components/financials/FundSummary.js","components/financials/FundList.js","components/financials/CreateFund.js","store/actions/fundActions.js","components/financials/Financials.js","components/auth/reset.js","components/Memos/memFunc.js","store/actions/memActions.js","components/Memos/memos.js","components/messaging/messages.js","store/actions/msgActions.js","components/transactions/CreateEditTransaction.js","store/actions/transactionActions.js","components/transactions/Transactions.js","components/visualizations/chart.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/updateReducer.js","store/reducers/fundReducer.js","store/reducers/memReducer.js","store/reducers/msgReducer.js","store/reducers/transactionReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","profile","firstName","onClick","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Dashboard","console","log","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handelSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","lastName","address","studentId","phone","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","currentUser","sendEmailVerification","doc","user","set","CreateProject","createProject","history","push","authorId","userEmail","add","Date","Profile","updateProfile","userProfile","userId","update","alert","FundSummary","fund","fundType","nickname","balance","FundList","funds","CreateFund","lowBalanceLimit","largeTransactionLimit","spendingLimit","handleSelectChange","handleSubmit","createFund","required","name","placeholder","options","label","defaultValue","closePopup","owner","Financials","handleEdit","editFund","handleDel","delFund","fundSelected","handleEditSelectChange","showCreateFund","showEditFund","fundOptions","userFunds","forEach","f","v","toggleCreateFund","bind","length","largeTransacationLimit","reset","resetPassword","sendPasswordResetEmail","error","deleting","mem","delete","MemoArray","Memos","event","creatememo","undefined","memos","filter","memo","where","Messages","handleClose","closeThread","createMessage","messages","msg","newMsg","docRef","toString","get","docSnapshot","exists","threadStatus","threadID","msgTime","subcollections","CreateEditTransaction","createTransaction","transaction","message","response","columns","dataField","hidden","text","sort","sortFunc","a","b","order","paginationOption","sizePerPage","hideSizePerPage","withFirstAndLast","hidePageListOnlyOnePage","selectRows","mode","clickToSelect","bgColor","selectColumnStyle","backgroundColor","clickToEdit","defaultSorted","cellEdit","Transactions","transactions","keyField","pagination","paginationFactory","selectRow","cellEditFactory","noDataIndication","storeAs","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","chartDataPie","chartConfigsPie","width","height","dataFormat","dataSource","chart","caption","xAxisName","yAxisName","numberSuffix","exportEnabled","theme","chartConfigsLineD","subCaption","chartConfigsLineW","chartConfigsLineM","Chart","React","App","exact","path","component","ProjectDetails","Visualizations","Boolean","window","location","hostname","initState","authReducer","action","projectReducer","updateReducer","fundReducer","InitState","mem_title","memReducer","timestamp","msgReducer","transactionReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43c350a9.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\nconst SignedInLinks =(props) =>{\r\n    \r\n    return (\r\n        <ul className =\"right\">\r\n            <li><NavLink to='/messages'>Support</NavLink></li>\r\n            <li><NavLink to='/create'>New Post</NavLink></li>\r\n            <li><NavLink to='/financials'>Financials</NavLink></li>\r\n            <li><NavLink to='/transactions'>Transactions</NavLink></li>\r\n            <li><NavLink to='/visualizations'>visualizations</NavLink> </li>\r\n            <li><NavLink to='/profile'>Edit Profile</NavLink></li>\r\n            <li><NavLink to='/memos'>Memos</NavLink> </li>\r\n            <li><NavLink to='/' className ='btn btn -floating green lighten-1'>{props.profile.firstName}</NavLink></li>\r\n            <li><NavLink to = '/signin' onClick={props.signOut} >Log Out</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signOut:()=> dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn =(credentials) =>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut =()=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            firebase.auth().currentUser.sendEmailVerification();\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                email: newUser.email,\r\n                address: newUser.address,\r\n                phone: newUser.phone,\r\n                studentId: newUser.studentId\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type: 'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPassword =(email)=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n            // Email sent.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });    }\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nconst SignedOutLinks =() =>{\r\n    return (\r\n        <ul className =\"right\">\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar =(props) =>{\r\n    const {auth,profile}=props;\r\n    //console.log(auth);\r\n    const links =auth.uid? <SignedInLinks profile ={profile}/>: <SignedOutLinks/>\r\n    return (\r\n        <nav className =\"nav-wrapper grey darken-3\">\r\n            <div className =\"container\">\r\n                <Link to='/' className =\"brand-logo\">College Capital</Link>\r\n                {auth.isLoaded && links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\nconst Notifications =(props) =>{\r\n    return(\r\n        <div className=\"section\">\r\n            <div className =\"card z-depth-0\">\r\n                <div className =\"card-content\">\r\n                    <span className =\"card-title\">Notifications</span>\r\n                    <ul className ='notifications'>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                        <li>Notification</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project})=>{\r\n    return (\r\n        <div className =\"card z-depth-0 project-summary\">\r\n                <div className =\"card-content grey-text text-darken-3\">\r\n                    <span className =\"card-title\">{project.title}</span>\r\n    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className =\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) =>{\r\n    return(\r\n        <div className= \"project-list section\">\r\n            {projects && projects.map(project=>{\r\n                return (\r\n                    <Link to={'/project/'+project.id}key={project.id}>\r\n                    <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        console.log(this.props);\r\n        const {projects,auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return(\r\n            <div className= 'dashboard container'>\r\n                <div className ='row'>\r\n                    <div className =\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className =\"col s12 m5 offset-m1\">\r\n                        <Notifications/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    \r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport{connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails=(props) =>{\r\n    const {project,auth } =props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n    if(project){\r\n        return(\r\n        <div className =\"container section project-details\">\r\n            <div className =\"card z-depth-0\">\r\n                <div className =\"card-content\">\r\n                <span className =\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        )\r\n    }else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps =(state, ownProps) =>{\r\n    \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id]: null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n        email:'',\r\n        password: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    \r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Sign In</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type =\"password\" id=\"password\" onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/reset\" className=\"btn btn-primary\">Reset Password</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        studentId: '',\r\n        phone: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    \r\n    render() {\r\n        const {auth,authError} =this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type =\"password\" id=\"password\" onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type =\"text\" id=\"firstName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type =\"text\" id=\"lastName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input type =\"tel\" id=\"phone\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input type =\"text\" id=\"address\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"studentId\">StudentId</label>\r\n                    <input type =\"text\" id=\"studentId\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Register</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signUp: (newUser)=> dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title:'',\r\n        content: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n    \r\n    render() {\r\n        const {auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Create Post</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type =\"text\" id=\"title\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea  id=\"content\"  className=\"materialize-textarea\"onChange ={this.handleChange}></textarea>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( CreateProject)\r\n","export const createProject=(project) =>{\r\n    return(dispatch,getState,{getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore=getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        console.log(getState().firebase.auth.userEmail);\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project});\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n        \r\n    }\r\n};","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {updateProfile, getProfileData} from '../../store/actions/updateActions'\r\n\r\nclass Profile extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        phone: '',\r\n        studentId: '',\r\n        address: ''\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.updateProfile(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n        \r\n    \r\n    render() {\r\n        const {auth} =this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        return (\r\n            \r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Profile</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input  type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input type =\"tel\" id=\"phone\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type =\"text\" id=\"firstName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type =\"text\" id=\"lastName\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"studentId\">Student Id</label>\r\n                    <input type =\"text\" id=\"studentId\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input type =\"text\" id=\"address\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Update</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        userProfile: state.firebase.userProfile,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        updateProfile: (userProfile)=> dispatch(updateProfile(userProfile))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile)\r\n","export const updateProfile =(userProfile)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore =getFirestore();\r\n        const userId= getState().firebase.auth.uid;\r\n        firestore.collection('users').doc(userId).update({\r\n            firstName : userProfile.firstName,\r\n            lastName : userProfile.lastName,\r\n            email : userProfile.email,\r\n            phone : userProfile.phone,\r\n            address: userProfile.address,\r\n            studentId: userProfile.studentId\r\n\r\n        }).then(()=>{\r\n            dispatch({type: 'UPDATE_SUCCESS',userProfile})\r\n            alert(\"update success\");\r\n            \r\n        }).catch(err=>{\r\n            dispatch({type: 'UPDATE_ERROR',err})\r\n            alert(\"update failure\");\r\n        })\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst FundSummary = ({fund}) => {\r\n    return (\r\n        <div className={\"card z-depth-0 fund-summary\"}>\r\n            <div className={\"card-content grey-text text-darken-3\"}>\r\n                <span className={\"card-title\"}>{fund.fundType + ': ' + fund.nickname}</span>\r\n                <p>Balance: ${fund.balance}</p>\r\n                <p className =\"grey-text\">{moment(fund.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundSummary","import React from \"react\";\r\nimport FundSummary from \"./FundSummary\";\r\n\r\nconst FundList = ({funds}) => {\r\n    console.log(funds);\r\n        return (\r\n            <div className={\"fund-list section\"}>\r\n                { funds && funds.map(fund => {\r\n                    return (\r\n                        <FundSummary fund={fund} key={fund.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FundList","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createFund} from \"../../store/actions/fundActions\";\r\nimport './CreateFund.css'\r\nimport Select from 'react-select';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateFund extends Component {\r\n    state = {\r\n        nickname: '',\r\n        balance: 0,\r\n        lowBalanceLimit: 0,\r\n        largeTransactionLimit: 0,\r\n        spendingLimit: 0,\r\n        fundType: 'PayPal'\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            fundType: e.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createFund(this.state);\r\n        alert(\"fund created\");\r\n        //this.props.history.push('/financials')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create a New Fund</h5>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"nickname\"}>Nickname</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'balance'} onChange={this.handleChange} required/>\r\n                        <label htmlFor={\"balance\"}>Balance</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'lowBalanceLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'largeTransactionLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\r\n                        <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <Select\r\n                            className={\"fundtype\"}\r\n                            name={\"fundtype\"}\r\n                            placeholder={\"Fund Type\"}\r\n                            options = {[\r\n                                { value: 'PayPal', label: 'PayPal'},\r\n                                { value: 'Dining Dollar', label: 'Dining Dollar'},\r\n                                { value: 'Boiler Express', label: 'Boiler Express'},\r\n                                { value: 'Financial Aid', label: 'Financial Aid'},\r\n                                { value: 'Bank', label: 'Bank'}\r\n                            ]}\r\n                            onChange={this.handleSelectChange}\r\n                            defaultValue={{ value: 'paypal', label: 'PayPal'}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <button className=\"btn green lighten-1\">Create</button>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <button className=\"btn white black-text lighten-1\" onClick={this.props.closePopup}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createFund: (fund) => dispatch(createFund(fund))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateFund)","export const createFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid\r\n        firestore.collection('funds').add({\r\n            ...fund,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const editFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        console.log(fund);\r\n        firestore.collection('funds').doc(fund.fundSelected).set({\r\n            nickname: fund.nickname ? fund.nickname : '',\r\n            balance: fund.balance ? fund.balance : 0,\r\n            lowBalanceLimit: fund.lowBalanceLimit ? fund.lowBalanceLimit : 0,\r\n            largeTransacationLimit: fund.largeTransactionLimit ? fund.largeTransactionLimit : 0,\r\n            spendingLimit: fund.spendingLimit ? fund.spendingLimit : 0,\r\n            fundType: fund.fundType ? fund.fundType : 'PayPal',\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const delFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        console.log(fund)\r\n        firestore.collection('funds').doc().set({\r\n            balance: 245762548\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setFund = (fund) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        let docid = '4HCMIlNug3Z1dg67nVHc'\r\n        firestore.collection('funds').doc(docid).set({\r\n            balance: 245762548\r\n        }).then(() => {\r\n            dispatch({ type: 'SET_FUND', fund });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SET_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {signUp} from \"../../store/actions/authActions\";\r\nimport './Financials.css'\r\nimport FundList from './FundList'\r\nimport CreateFund from \"./CreateFund\";\r\nimport {editFund} from \"../../store/actions/fundActions\";\r\nimport Select from \"react-select\";\r\n\r\nclass Financials extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { showCreateFund: false,\r\n            showEditFund: false};\r\n    }\r\n\r\n    toggleCreateFund() {\r\n        this.setState({\r\n            showCreateFund: !this.state.showCreateFund\r\n        })\r\n    }\r\n\r\n    // handleSet = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.props.setFund()\r\n    // }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editFund(this.state)\r\n    }\r\n\r\n    handleDel = (e) => {\r\n        console.log(e)\r\n        e.preventDefault();\r\n        this.props.delFund(this.state)\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        console.log(e.value)\r\n        this.setState({\r\n            fundSelected: e.value\r\n        })\r\n    }\r\n\r\n    handleEditSelectChange = (e) => {\r\n        this.setState({\r\n            fundType: e.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>;\r\n        // console.log(this.props);\r\n        // console.log(this.state);\r\n        // console.log('render');\r\n        //f(funds) return <Redirect to= '/signin'/>;\r\n        const funds = this.props.funds;\r\n        console.log(funds)\r\n\r\n        let fundOptions = [];\r\n\r\n        let userFunds = []\r\n\r\n        if (this.props.funds != null){\r\n            \r\n\r\n            funds.forEach(f => {\r\n                if (f.uid === auth.uid){\r\n                    userFunds.push(f);\r\n                }\r\n                    })\r\n        }\r\n\r\n        fundOptions = userFunds.map(v => ({\r\n            label: v.fundType + ': ' + v.nickname,\r\n            value: v.id\r\n        }))\r\n\r\n        console.log(userFunds)\r\n\r\n        // console.log(funds);\r\n        return(\r\n            <div className={\"container mt-10\"}>\r\n                <div className =\"card z-depth-0\">\r\n                    {this.state.showCreateFund\r\n                        ?\r\n                        <CreateFund\r\n                            closePopup={this.toggleCreateFund.bind(this)}\r\n                        />\r\n                        :\r\n                        <div className={\"container center\"}>\r\n                            <button className=\"btn green lighten-1 center mt-10 mb-10\" onClick={this.toggleCreateFund.bind(this)}>New Financial Account</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className={\"row\"}>\r\n                    <div className={\"col s12 m6\"}>\r\n                        {userFunds.length === 0\r\n                            ?\r\n                            null\r\n                            :\r\n                            <FundList funds = {userFunds}/>\r\n                        }\r\n                    </div>\r\n                    <div className={\"col s12 m6\"}>\r\n                        {userFunds.length === 0\r\n                            ?\r\n                            null\r\n                            :\r\n                            <div className={\"card z-depth-0 fund-operation\"}>\r\n                                <div className={\"card-content grey-text text-darken-3\"}>\r\n                                    <Select\r\n                                        className={\"funds\"}\r\n                                        name={\"funds\"}\r\n                                        onChange={this.handleSelectChange}\r\n                                        options={fundOptions}\r\n                                    />\r\n                                    <div className={\"container\"}>\r\n                                        <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'nickname'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"nickname\"}>Nickname</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'balance'} onChange={this.handleChange} required/>\r\n                                                <label htmlFor={\"balance\"}>Balance</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"number\"} id={'lowBalanceLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"lowBalanceLimit\"}>Low Balance Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'largeTransactionLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"largeTransactionLimit\"}>Large Transaction Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <input type={\"text\"} id={'spendingLimit'} onChange={this.handleChange}/>\r\n                                                <label htmlFor={\"spendingLimit\"}>Spending Limit</label>\r\n                                            </div>\r\n                                            <div className={\"input-field\"}>\r\n                                                <Select\r\n                                                    className={\"fundtype\"}\r\n                                                    name={\"fundtype\"}\r\n                                                    placeholder={\"Fund Type\"}\r\n                                                    options = {[\r\n                                                        { value: 'PayPal', label: 'PayPal'},\r\n                                                        { value: 'Dining Dollar', label: 'Dining Dollar'},\r\n                                                        { value: 'Boiler Express', label: 'Boiler Express'},\r\n                                                        { value: 'Financial Aid', label: 'Financial Aid'},\r\n                                                        { value: 'Bank', label: 'Bank'}\r\n                                                    ]}\r\n                                                    onChange={this.handleEditSelectChange}\r\n                                                    defaultValue={{ value: 'paypal', label: 'PayPal'}}\r\n                                                />\r\n                                            </div>\r\n                                        </form>\r\n                                        <button className={\"btn green lighten-1\"} onClick={this.handleEdit}>Edit Account</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state);\r\n    return {\r\n        funds: state.firestore.ordered.funds,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        editFund: (fund)=> dispatch(editFund(fund))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {collection: 'funds'}\r\n    ])\r\n)(Financials)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {resetPassword} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass reset extends Component {\r\n    state ={\r\n        email:'',\r\n    }\r\n\r\n    handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.resetPassword(this.state.email);\r\n        this.props.history.push('/SignIn');\r\n        //firebase.auth().sendPasswordResetEmail(this.state.email);\r\n    }\r\n\r\n    render() {\r\n        const {authError,auth} =this.props;\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Reset Password</h5>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type =\"email\" id=\"email\"onChange ={this.handleChange}/>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Reset</button>\r\n                    <div className=\"red-text center\">\r\n                        {authError? <p>{authError}</p>:null}\r\n                    </div>\r\n                </div>\r\n              \r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        resetPassword: (email) => dispatch(resetPassword(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reset)\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {deleteMemo} from '../../store/actions/memActions'\r\n\r\n\r\n\r\nconst MemFunc = (props) => {\r\n    //console.log(props);\r\n    const {data} = props;\r\n\r\n   const handleClick = (id) => {\r\n    props.deleting(id);\r\n   }\r\n\r\n\r\n    if(data){\r\n        const MemoArray = data.map (data => {\r\n            return(\r\n                <div className =\"container section project-details\" >\r\n                <div className =\"card z-depth-0\" id ={data.id}>\r\n                    <div className =\"card-content\">\r\n                        <span className =\"card-title\">{data.title}</span>\r\n                        <p>{data.content}</p>\r\n                    </div>\r\n                    <div className =\" card-action.grey.lighten-4 grey-text\">\r\n                        <div>Posted by {data.owner}</div>\r\n                        <div>{moment(data.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={() => {handleClick(data.id)}}>Delete</button>\r\n            </div>\r\n            )\r\n        }\r\n            );\r\n        return(\r\n            <div>\r\n           { MemoArray }\r\n           </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className =\"container center\">\r\n                <p>Loading memo...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    deleting : (id) => { dispatch(deleteMemo(id)) }\r\n    \r\n    }\r\n}\r\nexport default compose(\r\n    connect(null,mapDispatchToProps)\r\n    // firestoreConnect([\r\n    //     {collection: 'memos'}\r\n    // ])\r\n)(MemFunc)","// export const createMemo = (id) => {\r\n//     return {\r\n//         type : 'CREATE_MEM',\r\n//         id : id,\r\n//     }\r\n\r\n// }\r\n\r\nexport const createMemo = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('memos').add({\r\n            ...mem,\r\n            owner: profile.firstName + ' ' + profile.lastName,\r\n            uid: userId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_MEM', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteMemo = (mem) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('memos').doc(mem).delete().then(() => {\r\n            dispatch({ type: 'DELTE_MEM_DOC', mem });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_MEM_ERR'}, err);\r\n        })\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {createMemo} from \"../../store/actions/memActions\"\r\nimport MemFunc from \"./memFunc\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass Memos extends Component {\r\n\r\n    state = {\r\n        title : \"\",\r\n        content : \"\",\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.creatememo(this.state);\r\n        this.setState ({\r\n            title : \"\",\r\n            content: \"\"\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    render () {      \r\n        let data = undefined;\r\n//        console.log(\"UID\", this.props.auth.uid);\r\n        if (this.props.memos !== undefined) {\r\n          data = this.props.memos.filter( memo => {\r\n             return this.props.auth.uid === memo.uid\r\n         });\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                <h5 className =\"grey-text text-darken-3\">Create Memos</h5>\r\n                <div id = \"title\" className = \"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type =\"text\" id=\"title\" onChange ={this.handleChange} value={this.state.title}/>\r\n                </div>\r\n                <div className = \"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea  id=\"content\"  className=\"materialize-textarea\" onChange ={this.handleChange} value={this.state.content}></textarea>\r\n                </div>\r\n                <div className =\"input-field\">\r\n                    <button className = \"btn green lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n\r\n                <MemFunc data={data} />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        memos : state.firestore.ordered.memos,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        creatememo: (id) => { dispatch(createMemo(id))}\r\n    }\r\n}\r\n\r\n\r\n//export default connect(matchStatetoProps , mapDispatchToProps)(Memos);\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'memos',\r\n                    where: ['uid', '==', props.auth.uid]\r\n                }\r\n            ]\r\n        } else{\r\n            return []\r\n        }\r\n    })\r\n)(Memos)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMessage, getThreadKey, closeThread } from '../../store/actions/msgActions'\r\nimport messageList from './messageList'\r\nimport './messages.css'\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        content: \"\",\r\n        email: \"\"\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id] : event.target.value,\r\n        })\r\n    }\r\n\r\n    handleClose = (event) => {\r\n        event.preventDefault();\r\n        this.props.closeThread(this.props.auth.uid);\r\n    }\r\n\r\n    handelSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.createMessage(this.state);\r\n        this.setState ({\r\n            content: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to= '/signin'/>\r\n        this.state.email = auth.email;\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handelSubmit} className =\"white\">\r\n                    <h5 className =\"grey-text text-darken-3\">Message Support</h5>\r\n                    {/*\r\n                    <div className = \"msgsContainer\">\r\n                        { this.props.messages && this.props.messages.map(message => {\r\n                            return (\r\n                                <messageList message={message} uid={message.id} />\r\n                            )\r\n                        })}\r\n                    </div>  \r\n                    */}\r\n                    <div className = \"input-field\">\r\n                        <label htmlFor=\"content\">Enter Message Here</label>\r\n                        <input  type =\"text\" id=\"content\"onChange ={this.handleChange}/>\r\n                    </div>\r\n                    <div className =\"input-field\">\r\n                        <button className = \"btn green lighten-1 z-depth-0\">Send New Ticket</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages : state.firestore.ordered.messages,\r\n        auth: state.firebase.auth,\r\n        userProfile: state.firebase.userProfile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createMessage: (msg) => { dispatch(createMessage(msg))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'messages',\r\n                    doc: 'supportMsgs',\r\n                    subcollections: [{ collection: 'msgThreads' }],\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{ collection: 'userSupportMsgs' }],\r\n                    storeAs: 'messages'\r\n                }\r\n            ]\r\n        } else {\r\n            return [];\r\n        }\r\n    })\r\n)(Messages)","export const createMessage =(newMsg)=>{\r\n    return(dispatch, getState, {getFirebase, getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const uid = getState().firebase.auth.uid.toString();\r\n        const email = getState().firebase.auth.email.toString();\r\n        const profile = getState().firebase.profile;\r\n        const content = newMsg.content;\r\n        var docRef;\r\n        \r\n        var key = uid;\r\n    \r\n        docRef = firestore.collection('messages').doc('supportMsgs').collection('msgThreads').doc(key);\r\n\r\n        docRef.get().then((docSnapshot) => {\r\n            if (!docSnapshot.exists) {\r\n                docRef.set({\r\n                    threadStatus: \"active\",\r\n                    threadID: key\r\n                }).then(() => {\r\n                    dispatch({ type: 'CREATE_THREAD' });\r\n                }).catch((err) => {\r\n                    dispatch({ type: 'CREATE_THREAD_ERR'}, err);\r\n                })\r\n            } \r\n        })\r\n\r\n        docRef.collection(\"userSupportMsgs\").add({\r\n            ...newMsg,\r\n            //msgCont: newMsg.content,\r\n            msgTime: new Date(),\r\n            name: profile.firstName,\r\n            id: uid\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_MSG', newMsg });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_MSG_ERR'}, err);\r\n        })\r\n\r\n        //sendEmail(email, content);\r\n    }\r\n}\r\n\r\n","import React, {Component, withRouter} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createTransaction} from \"../../store/actions/transactionActions\"\r\nimport Select from 'react-select';\r\n\r\nclass CreateEditTransaction extends Component {\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createTransaction(this.state, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <form className={\"white\"} onSubmit={this.handleSubmit}>\r\n                    <h5 className={\"grey-text text-darken-3\"}>Create New Transaction</h5>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"number\"} id={'amount'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'amount'}>Amount</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"date\"} id={'transactionDate'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'transactionDate'}>Date</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <input type={\"text\"} id={'merchant'} required={true} onChange={this.handleChange}/>\r\n                        <label htmlFor={'merchant'}>Merchant</label>\r\n                    </div>\r\n                    <div className={\"input-field\"}>\r\n                        <button className={\"btn green lighten-1\"}>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createTransaction: (transaction, history) => dispatch(createTransaction(transaction, history))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateEditTransaction)","import {withRouter} from \"react-router-dom\";\r\n\r\nexport const createTransaction = (transaction, history) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore} ) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        const profile = getState().firebase.profile;\r\n        //check if user's collection has been created\r\n        let docRef = firestore.collection(\"transactions\").doc(userId);\r\n\r\n        docRef.get().then(function(doc) {\r\n            if (!doc.exists) {\r\n                docRef.set({\r\n                    owner: profile.firstName + ' ' + profile.lastName\r\n                })\r\n            }\r\n\r\n            docRef = docRef.collection('userTransactions');\r\n\r\n            docRef.add({\r\n                ...transaction,\r\n                createdAt: new Date()\r\n            }).then(() => {\r\n                dispatch({ type: 'CREATE_FUND', transaction });\r\n                alert(\"Transaction Created\");\r\n            }).catch((err) => {\r\n                dispatch({ type: 'CREATE_FUND_ERR'}, err);\r\n                alert(\"Create transaction failed.\\n\" + err.message);\r\n            })\r\n        }).then((response) =>{\r\n            history.push('/transactions')\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n\r\n    }\r\n};","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {components} from \"react-select\";\r\nimport CreateEditTransaction from \"./CreateEditTransaction\";\r\nimport TransactionList from \"./TransactionList\";\r\n\r\n// Basic Table Module\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\n// Cell Editing Module (Doesnt work for some reason lol)\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n\r\n// Pagination Module\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n\r\n// Columns for table\r\nconst columns = [{\r\n    dataField: 'id',\r\n    hidden: true\r\n}, {\r\n    dataField: 'merchant',\r\n    text: 'Merchant',\r\n    sort: true\r\n}, {\r\n    dataField: 'amount',\r\n    text: 'Amount',\r\n    sort: true,\r\n    sortFunc: (a, b, order) => {\r\n        if(order === 'desc') {\r\n            return a - b;\r\n        }\r\n        else {\r\n            return b - a;\r\n        }\r\n    }\r\n}, {\r\n    dataField: 'transactionDate',\r\n    text: 'Transaction Date',\r\n    sort: true\r\n}];\r\n\r\n// Page pagination options\r\nconst paginationOption = {\r\n    sizePerPage: 10,\r\n    hideSizePerPage: true,\r\n    withFirstAndLast: false,\r\n    hidePageListOnlyOnePage: true\r\n};\r\n\r\n// Options for when selecting a row\r\nconst selectRows = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    bgColor: '#68DE11',\r\n    selectColumnStyle: {\r\n        backgroundColor: '#68DE11'\r\n    },\r\n    clickToEdit: true\r\n};\r\n\r\n// Set default sorted state to descending by transaction date\r\nconst defaultSorted = [{\r\n    dataField: 'transactionDate',\r\n    order: 'desc'\r\n}];\r\n\r\nconst cellEdit = {\r\n    mode: 'dbclick'\r\n};\r\n\r\nclass Transactions extends Component{\r\n    render() {\r\n        return(\r\n            <div className={\"container mt\"}>       \r\n                <div className =\"card z-depth-3\">\r\n                    {this.props.transactions != null\r\n                        ?\r\n                        <BootstrapTable\r\n                            keyField=\"id\"\r\n                            data={ this.props.transactions }\r\n                            columns={ columns }\r\n                            pagination={ paginationFactory(paginationOption) }\r\n                            selectRow={ selectRows }\r\n                            defaultSorted={ defaultSorted }\r\n                            cellEdit={ cellEditFactory(cellEdit) }\r\n                            noDataIndication=\"Table is Empty\"\r\n                        />\r\n                        :\r\n                        null\r\n                    }                    \r\n                </div>\r\n\r\n                <Link to={\"/create_edit_transaction\"} className={\"btn green lighten-1 center mt\"}>New Transaction</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        transactions: state.firestore.ordered.transactions,\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(props => {\r\n        if (typeof props.auth.uid != \"undefined\"){\r\n            return [\r\n                {\r\n                    collection: 'transactions',\r\n                    doc: props.auth.uid,\r\n                    subcollections: [{ collection: 'userTransactions' }],\r\n                    storeAs: 'transactions'\r\n                }\r\n            ]\r\n        } else {\r\n            return []\r\n        }\r\n    })\r\n)(Transactions)","// STEP 1 - Include Dependencies\r\n// Include react\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Include the react-fusioncharts component\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\n// Include the fusioncharts library\r\nimport FusionCharts from \"fusioncharts\";\r\n\r\n// Include the chart type\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\n\r\n// Include the theme as fusion\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nimport \"./chart.css\";\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\n// Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\n\r\n// STEP 2 - Chart Data\r\nconst chartDataPie = [\r\n  {\r\n    label: \"Venezuela\",\r\n    value: \"290\"\r\n  },\r\n  {\r\n    label: \"Saudi\",\r\n    value: \"260\"\r\n  },\r\n  {\r\n    label: \"Canada\",\r\n    value: \"180\"\r\n  },\r\n  {\r\n    label: \"Iran\",\r\n    value: \"140\"\r\n  },\r\n  {\r\n    label: \"Russia\",\r\n    value: \"115\"\r\n  },\r\n  {\r\n    label: \"UAE\",\r\n    value: \"100\"\r\n  },\r\n  {\r\n    label: \"US\",\r\n    value: \"30\"\r\n  },\r\n  {\r\n    label: \"China\",\r\n    value: \"30\"\r\n  }\r\n];\r\n\r\n// STEP 3 - Creating the JSON object to store the chart configurations\r\nconst chartConfigsPie = {\r\n  type: \"pie2d\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Category\",\r\n      //Set the chart subcaption\r\n      //Set the x-axis name\r\n      xAxisName: \"Spending Category\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars \",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\nconst chartConfigsLineD = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Day\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Day\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\nconst chartConfigsLineW = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Week\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Week\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\nconst chartConfigsLineM = {\r\n  type: \"line\", // The chart type\r\n  width: \"700\", // Width of the chart\r\n  height: \"400\", // Height of the chart\r\n  dataFormat: \"json\", // Data type\r\n  dataSource: {\r\n    // Chart Configuration\r\n    chart: {\r\n      //Set the chart caption\r\n      caption: \"This Months Spending by Month\",\r\n      //Set the chart subcaption\r\n      subCaption: \"\",\r\n      //Set the x-axis name\r\n      xAxisName: \"Month\",\r\n      //Set the y-axis name\r\n      yAxisName: \"Dollars\",\r\n      numberSuffix: \"\",\r\n      exportEnabled: \"1\",\r\n      //Set the theme for your chart\r\n      theme: \"fusion\"\r\n    },\r\n    // Chart Data\r\n    data: chartDataPie\r\n  }\r\n};\r\n\r\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\r\nclass Chart extends React.Component {\r\n  render() {\r\n    console.log(this.props.transactions);\r\n    return (\r\n      <div className = \"visualizations\">\r\n      <div className = \"chart\">\r\n    <ReactFC {...chartConfigsPie} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineD} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineW} />);\r\n    </div>\r\n    <div className =\"chart\">\r\n    <ReactFC {...chartConfigsLineM} />);\r\n    </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      transactions: state.firestore.ordered.transactions,\r\n      auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => {\r\n      if (typeof props.auth.uid != \"undefined\") {\r\n          return [\r\n              {\r\n                  collection: 'transactions',\r\n                  doc: props.auth.uid,\r\n                  subcollections: [{collection: 'userTransactions'}],\r\n                  storeAs: 'transactions'\r\n              }\r\n          ]\r\n      } else {\r\n          return []\r\n      }\r\n  })\r\n)(Chart)","import React, {Component} from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nimport Profile from './components/profile/profile'\r\nimport Financials from './components/financials/Financials'\r\nimport createFund from './components/financials/CreateFund'\r\nimport reset from './components/auth/reset'\r\nimport Memos from './components/Memos/memos'\r\nimport Messages from './components/messaging/messages'\r\nimport Transactions from \"./components/transactions/Transactions\";\r\nimport CreateEditTransaction from \"./components/transactions/CreateEditTransaction\";\r\nimport Visualizations from \"./components/visualizations/chart\"\r\n\r\nclass App extends Component {\r\n  render(){\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n     <Navbar/>\r\n     <Switch>\r\n       <Route exact path ='/' component ={Dashboard}/>\r\n       <Route path ='/project/:id' component={ProjectDetails}/>\r\n       <Route path ='/signin' component ={SignIn}/>\r\n       <Route path ='/signup' component ={SignUp}/>\r\n       <Route path ='/create' component ={CreateProject}/>\r\n       <Route path ='/financials' component ={Financials}/>\r\n       <Route path ='/transactions' component={Transactions}/>\r\n       <Route path ='/create_edit_transaction' component={CreateEditTransaction}/>\r\n       <Route path ='/profile' component ={Profile}/>\r\n       <Route path ='/createFund' component ={createFund}/>\r\n       <Route path ='/reset' component ={reset}/>\r\n       <Route path='/memos' component={Memos}/>\r\n       <Route path='/messages' component={Messages}/>\r\n       <Route path='/visualizations' component={Visualizations}/>\r\n     </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState= {\r\n    authError: null\r\n}\r\n\r\nconst authReducer =(state =initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState= {\r\n    projects:[\r\n        {id: '1', title: 'something something 1', content: 'blah blah blah 1'},\r\n        {id: '2', title: 'something something 2', content: 'blah blah blah 2'},\r\n        {id: '3', title: 'something something 3', content: 'blah blah blah 3'}\r\n    ]\r\n}\r\n\r\nconst projectReducer =(state =initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project eror', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","const initState={\r\n        userProfile:[{placeholder: 'placeholder'}]\r\n}\r\n\r\nconst updateReducer=(state=initState,action) =>{\r\n    switch(action.type){\r\n        case 'UPDATE_SUCCESSFUL': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'UPDATE_ERROR':\r\n            console.log('create project eror', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default updateReducer","const initState= {\r\n    funds:[{placeholder: 'placeholder'}]\r\n}\r\n\r\nconst fundReducer =(state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_FUND':\r\n            console.log('created project', action.fund)\r\n            return state;\r\n        case 'CREATE_FUND_ERROR':\r\n            console.log('create project err', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fundReducer","const InitState = {\r\n    memos :[\r\n    {mem_title: \"Haider\", content : \"Haider is the best\" },\r\n    {mem_title: \"Pay the electric bill\", content :\"Please do it I want electricity\"}\r\n    ]\r\n\r\n}\r\n\r\nconst memReducer = (state = InitState, action) => {\r\n    if (action.type === \"CREATE_MEM\") {\r\n        console.log(\"Memo Created\");\r\n        return state;\r\n    } else if (action.type === \"DELTE_MEM_DOC\") {\r\n        console.log(\"Memo Deleted\");\r\n        return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default memReducer;","const InitState = {\r\n    messages:[\r\n        {name: 'Seth Rogen', content: 'I love pineapples expressly', timestamp: '42:04:20'},\r\n        {name: 'Jonah Hill', content: 'There is pizza on my pants', timestamp: '24:40:02'}\r\n    ]\r\n}\r\n\r\nconst msgReducer = (state = InitState, action) => {\r\n    if (action.type === \"CREATE_MSG\") {\r\n        console.log(\"message created\")\r\n    } else if (action.type === \"CREATE_MSG_ERR\") {\r\n        console.log(\"error creating message\");\r\n    } else if (action.type === 'CLOSE_THREAD') {\r\n        console.log(\"successfully closed message thread\");\r\n    } else if (action.type === 'FETCH_MSGS_ERR') {\r\n        console.log(\"error closing message thread\");\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default msgReducer;","const initState= {\r\n    transactions:[{placeholder: 'placeholder'}]\r\n};\r\n\r\nconst transactionReducer =(state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_TRANSACTION':\r\n            console.log('created transaction', action.transaction)\r\n            return state;\r\n        case 'CREATE_TRANSACTION_ERROR':\r\n            console.log('create transaction err', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default transactionReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nimport updateReducer from './updateReducer'\r\nimport fundReducer from './fundReducer'\r\nimport memReducer from './memReducer';\r\nimport msgReducer from './msgReducer';\r\nimport transactionReducer from \"./transactionReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    userProfile: updateReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    fund: fundReducer,\r\n    memo: memReducer,\r\n    messages: msgReducer,\r\n    transaction: transactionReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDHxQtPVGZMWlhUm5jW6j2ix4YbrbmC420\",\r\n    authDomain: \"college-capital-ed06f.firebaseapp.com\",\r\n    databaseURL: \"https://college-capital-ed06f.firebaseio.com\",\r\n    projectId: \"college-capital-ed06f\",\r\n    storageBucket: \"college-capital-ed06f.appspot.com\",\r\n    messagingSenderId: \"244905517245\",\r\n    appId: \"1:244905517245:web:70109dddc6f307b99697d4\",\r\n    measurementId: \"G-Z51D5JH30Y\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\nimport firebase from 'firebase/app'\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n    reduxFirestore(firebase, fbConfig)\r\n  )\r\n);\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}